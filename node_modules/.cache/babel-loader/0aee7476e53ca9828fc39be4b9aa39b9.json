{"ast":null,"code":"var _jsxFileName = \"C:\\\\USERS\\\\Tommi Vainio\\\\desktop\\\\chatApp\\\\my-app\\\\src\\\\components\\\\nav.tsx\",\n    _s = $RefreshSig$();\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { AppBar, makeStyles, Toolbar, Link, Button } from '@material-ui/core';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { useUsers } from '../hooks/apiHooks';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1,\n    paddingRight: '24px'\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  itemPack: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  logo: {\n    position: 'absolute',\n    display: 'flex',\n    alignItems: 'center',\n    left: '130px',\n    transform: 'translate(-50%)'\n  }\n}));\n\nconst Nav = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    getUsers,\n    getIsLoggedIn\n  } = useUsers();\n  useEffect(() => {\n    (async () => {\n      try {\n        const isLoggedIn = await getIsLoggedIn();\n        const result = await getUsers();\n        console.log('Result: ', result);\n        let nameList = '';\n\n        for (let i = 0; i < result.length; i++) {\n          nameList += result[i].username + '\\n';\n        }\n\n        setData(nameList);\n      } catch (e) {\n        console.log(e.message);\n      }\n    })();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      className: classes.appBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          component: RouterLink,\n          to: \"/\",\n          className: classes.logo,\n          color: \"inherit\",\n          style: {\n            textDecoration: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"ChatApp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.itemPack,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            startIcon: /*#__PURE__*/_jsxDEV(ExitToAppIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 40\n            }, this),\n            component: RouterLink,\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            component: RouterLink,\n            to: \"/profile\",\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Nav, \"b/UBCZeLSA/xPiGbwKeQejv/ulY=\", false, function () {\n  return [useStyles, useUsers];\n});\n\n_c = Nav;\nexport default Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["C:/USERS/Tommi Vainio/desktop/chatApp/my-app/src/components/nav.tsx"],"names":["Link","RouterLink","AppBar","makeStyles","Toolbar","Button","ExitToAppIcon","useUsers","useEffect","useStyles","theme","appBar","zIndex","drawer","root","flexGrow","menuButton","marginRight","spacing","title","paddingRight","toolbar","display","justifyContent","itemPack","alignItems","logo","position","left","transform","Nav","classes","getUsers","getIsLoggedIn","isLoggedIn","result","console","log","nameList","i","length","username","setData","e","message","textDecoration"],"mappings":";;;AAAA,SAASA,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC;AACA,SACIC,MADJ,EAEIC,UAFJ,EAGIC,OAHJ,EAIIJ,IAJJ,EAKIK,MALJ,QAMO,mBANP;AAOA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAEF,KAAK,CAACE,MAAN,CAAaC,MAAb,GAAsB;AAD1B,GAD6B;AAIrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR,GAJ+B;AAOrCC,EAAAA,UAAU,EAAE;AACRC,IAAAA,WAAW,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AADL,GAPyB;AAUrCC,EAAAA,KAAK,EAAE;AACHJ,IAAAA,QAAQ,EAAE,CADP;AAEHK,IAAAA,YAAY,EAAE;AAFX,GAV8B;AAcrCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,cAAc,EAAE;AAFX,GAd4B;AAkBrCC,EAAAA,QAAQ,EAAE;AACNF,IAAAA,OAAO,EAAE,MADH;AAENG,IAAAA,UAAU,EAAE;AAFN,GAlB2B;AAsBrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,UADR;AAEFL,IAAAA,OAAO,EAAE,MAFP;AAGFG,IAAAA,UAAU,EAAE,QAHV;AAIFG,IAAAA,IAAI,EAAE,OAJJ;AAKFC,IAAAA,SAAS,EAAE;AALT;AAtB+B,CAAZ,CAAD,CAA5B;;AA+BA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAMC,OAAO,GAAGtB,SAAS,EAAzB;AACA,QAAM;AAAEuB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA8B1B,QAAQ,EAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,UAAI;AACA,cAAM0B,UAAU,GAAG,MAAMD,aAAa,EAAtC;AACA,cAAME,MAAM,GAAG,MAAMH,QAAQ,EAA7B;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;AACA,YAAIG,QAAgB,GAAG,EAAvB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACK,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpCD,UAAAA,QAAQ,IAAIH,MAAM,CAACI,CAAD,CAAN,CAAUE,QAAV,GAAqB,IAAjC;AACH;;AACDC,QAAAA,OAAO,CAACJ,QAAD,CAAP;AACH,OATD,CASE,OAAOK,CAAP,EAAU;AACRP,QAAAA,OAAO,CAACC,GAAR,CAAYM,CAAC,CAACC,OAAd;AACH;AACJ,KAbD;AAcH,GAfQ,CAAT;AAiBA,sBACI;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEb,OAAO,CAACpB,MAA3B;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,SAAS,EAAEoB,OAAO,CAACV,OAA5B;AAAA,gCACI,QAAC,IAAD;AACI,UAAA,SAAS,EAAEpB,UADf;AAEI,UAAA,EAAE,EAAC,GAFP;AAGI,UAAA,SAAS,EAAE8B,OAAO,CAACL,IAHvB;AAII,UAAA,KAAK,EAAC,SAJV;AAKI,UAAA,KAAK,EAAE;AAAEmB,YAAAA,cAAc,EAAE;AAAlB,WALX;AAAA,iCAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI;AAAK,UAAA,SAAS,EAAEd,OAAO,CAACP,QAAxB;AAAA,kCACI,QAAC,MAAD;AACI,YAAA,KAAK,EAAC,SADV;AAEI,YAAA,SAAS,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,oBAFf;AAGI,YAAA,SAAS,EAAEvB,UAHf;AAII,YAAA,EAAE,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eASI,QAAC,MAAD;AACI,YAAA,KAAK,EAAC,SADV;AAEI,YAAA,SAAS,EAAEA,UAFf;AAGI,YAAA,EAAE,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAkCH,CAvDD;;GAAM6B,G;UACcrB,S,EACoBF,Q;;;KAFlCuB,G;AAyDN,eAAeA,GAAf","sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\r\nimport {\r\n    AppBar,\r\n    makeStyles,\r\n    Toolbar,\r\n    Link,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useUsers } from '../hooks/apiHooks';\r\nimport { useEffect } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        paddingRight: '24px',\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    itemPack: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    logo: {\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        left: '130px',\r\n        transform: 'translate(-50%)',\r\n    },\r\n}));\r\n\r\nconst Nav = () => {\r\n    const classes = useStyles();\r\n    const { getUsers, getIsLoggedIn } = useUsers();\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const isLoggedIn = await getIsLoggedIn()\r\n                const result = await getUsers();\r\n                console.log('Result: ', result);\r\n                let nameList: string = ''\r\n                for (let i = 0; i < result.length; i++) {\r\n                    nameList += result[i].username + '\\n'\r\n                }\r\n                setData(nameList);\r\n            } catch (e) {\r\n                console.log(e.message);\r\n            }\r\n        })();\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <Link\r\n                        component={RouterLink}\r\n                        to=\"/\"\r\n                        className={classes.logo}\r\n                        color=\"inherit\"\r\n                        style={{ textDecoration: 'none' }}\r\n                    >\r\n                        <h2>ChatApp</h2>\r\n                    </Link>\r\n                    <div className={classes.itemPack}>\r\n                        <Button\r\n                            color=\"inherit\"\r\n                            startIcon={<ExitToAppIcon />}\r\n                            component={RouterLink}\r\n                            to=\"/login\"\r\n                        >\r\n                            Login\r\n                        </Button>\r\n                        <Button\r\n                            color=\"inherit\"\r\n                            component={RouterLink}\r\n                            to=\"/profile\"\r\n                        >\r\n                            Profile\r\n                        </Button>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Nav;"]},"metadata":{},"sourceType":"module"}