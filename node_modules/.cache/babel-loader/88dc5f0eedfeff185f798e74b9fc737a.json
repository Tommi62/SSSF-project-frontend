{"ast":null,"code":"var _jsxFileName = \"/Users/tommivainio/SSSF/SSSF-project-frontend/src/components/loginForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { withRouter } from 'react-router-dom';\nimport { Button, Grid, TextField, Typography } from '@material-ui/core';\nimport useForm from '../hooks/formHooks';\nimport { useUsers } from '../hooks/apiHooks';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  loginHeader: {\n    [theme.breakpoints.down(600)]: {\n      fontSize: '2rem'\n    }\n  },\n  loginButton: {\n    backgroundColor: '#5F4B8BFF',\n    marginTop: '2rem',\n    marginBottom: '0.5rem',\n    '&:hover': {\n      backgroundColor: '#7159a6'\n    }\n  }\n}));\n\nconst LoginForm = ({\n  history\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    postLogin\n  } = useUsers();\n\n  const doLogin = async () => {\n    try {\n      const userdata = await postLogin(inputs);\n\n      if (userdata.success) {\n        localStorage.setItem('token', userdata === null || userdata === void 0 ? void 0 : userdata.data.token);\n        history.push('/');\n      } // localStorage.setItem('id', userdata.id);\n      // history.push('/');\n\n    } catch (e) {\n      console.log('doLogin', e.message);\n    }\n  };\n\n  const {\n    inputs,\n    handleInputChange,\n    handleSubmit\n  } = useForm(doLogin, {\n    username: '',\n    password: ''\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0,\n      direction: \"column\",\n      alignItems: \"center\",\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.loginHeader,\n        component: \"h3\",\n        variant: \"h3\",\n        gutterBottom: true,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0,\n      direction: \"column\",\n      alignItems: \"center\",\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"text\",\n              name: \"username\",\n              label: \"Username\",\n              onChange: handleInputChange,\n              value: inputs.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"password\",\n              name: \"password\",\n              label: \"Password\",\n              onChange: handleInputChange,\n              value: inputs.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              className: classes.loginButton,\n              color: \"primary\",\n              type: \"submit\",\n              variant: \"contained\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginForm, \"t0bhV0H6ungMtBF7fjwxKwAStqw=\", false, function () {\n  return [useStyles, useUsers, useForm];\n});\n\n_c = LoginForm;\nexport default _c2 = withRouter(LoginForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/tommivainio/SSSF/SSSF-project-frontend/src/components/loginForm.tsx"],"names":["withRouter","Button","Grid","TextField","Typography","useForm","useUsers","makeStyles","useStyles","theme","loginHeader","breakpoints","down","fontSize","loginButton","backgroundColor","marginTop","marginBottom","LoginForm","history","classes","postLogin","doLogin","userdata","inputs","success","localStorage","setItem","data","token","push","e","console","log","message","handleInputChange","handleSubmit","username","password"],"mappings":"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","sourcesContent":["import { withRouter } from 'react-router-dom';\r\nimport { Button, Grid, TextField, Typography } from '@material-ui/core';\r\nimport useForm from '../hooks/formHooks';\r\nimport { useUsers } from '../hooks/apiHooks';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    loginHeader: {\r\n        [theme.breakpoints.down(600)]: {\r\n            fontSize: '2rem'\r\n        },\r\n    },\r\n    loginButton: {\r\n        backgroundColor: '#5F4B8BFF',\r\n        marginTop: '2rem',\r\n        marginBottom: '0.5rem',\r\n        '&:hover': {\r\n            backgroundColor: '#7159a6',\r\n        },\r\n    }\r\n}));\r\n\r\ninterface propType {\r\n    history: {\r\n        push: Function,\r\n    }\r\n}\r\n\r\nconst LoginForm = ({ history }: propType) => {\r\n    const classes = useStyles();\r\n    const { postLogin } = useUsers();\r\n    const doLogin = async () => {\r\n        try {\r\n            const userdata = await postLogin(inputs);\r\n            if(userdata!.success) {\r\n                localStorage.setItem('token', userdata?.data.token);\r\n                history.push('/');\r\n            }\r\n            // localStorage.setItem('id', userdata.id);\r\n            // history.push('/');\r\n        } catch (e) {\r\n            console.log('doLogin', e.message);\r\n        }\r\n    };\r\n\r\n    const { inputs, handleInputChange, handleSubmit } = useForm(doLogin, {\r\n        username: '',\r\n        password: '',\r\n    });\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n            >\r\n                <Typography className={classes.loginHeader} component=\"h3\" variant=\"h3\" gutterBottom>\r\n                    Login\r\n                </Typography>\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n            >\r\n                <form onSubmit={handleSubmit}>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid container item>\r\n                            <TextField\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                label=\"Username\"\r\n                                onChange={handleInputChange}\r\n                                value={inputs.username}\r\n                            />\r\n                        </Grid>\r\n                        <Grid container item>\r\n                            <TextField\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                onChange={handleInputChange}\r\n                                value={inputs.password}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid container item>\r\n                            <Button\r\n                                fullWidth\r\n                                className={classes.loginButton}\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\n\r\nexport default withRouter(LoginForm);"]},"metadata":{},"sourceType":"module"}