{"ast":null,"code":"import _slicedToArray from\"/Users/tommivainio/Projektit/chatApp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Grid,ListItem,ListItemText,Typography}from'@material-ui/core';import{makeStyles}from'@material-ui/core/styles';import{useContext}from'react';import{useState}from'react';import{useEffect}from'react';import{MediaContext}from'../contexts/mediaContext';import moment from'moment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles(function(){return{message:{backgroundColor:'lightGrey',marginBottom:'0.5rem',borderRadius:'1rem',padding:'0.5rem',maxWidth:'50%'},ownMessage:{backgroundColor:'#5F4B8BFF',color:'white',marginBottom:'0.5rem',borderRadius:'1rem',padding:'0.5rem',maxWidth:'50%'},inline:{display:'inline'},inlineOwn:{display:'inline',color:'white'},timestamp:{fontSize:'0.7rem',marginLeft:'2rem'},dateIndicator:{background:'rgb(95, 75, 139, .2)',borderRadius:'0.3rem',padding:'0.2rem',marginBottom:'0.5rem',textAlign:'center'}};});var Message=function Message(_ref){var message_id=_ref.message_id,user_id=_ref.user_id,contents=_ref.contents,timestamp=_ref.timestamp,setMessageId=_ref.setMessageId,usernames=_ref.usernames,index=_ref.index,messageArray=_ref.messageArray;var classes=useStyles();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),time=_useState4[0],setTime=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),ownMessage=_useState6[0],setOwnMessage=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showDate=_useState8[0],setShowDate=_useState8[1];var _useContext=useContext(MediaContext),user=_useContext.user;var formattedTimestamp=moment(timestamp).format('DD.MM.YYYY');useEffect(function(){try{for(var i=0;i<usernames.length;i++){if(usernames[i].user_id===user_id){setUsername(usernames[i].username);}}if(index!==0){var formattedPreviousTimestamp=moment(messageArray[index-1].timestamp).format('DD.MM.YYYY');if(formattedTimestamp!==formattedPreviousTimestamp){setShowDate(true);}}else{setShowDate(true);}var d=new Date(timestamp);var hours=d.getHours().toString();var minutes=d.getMinutes().toString();if(d.getHours()<10){hours='0'+hours;}if(d.getMinutes()<10){minutes='0'+minutes;}var formatedTime=hours+'.'+minutes;setTime(formatedTime);if(user_id===user){setOwnMessage(true);}else{setOwnMessage(false);}setMessageId(message_id);}catch(e){console.log(e.message);}},[message_id]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(ListItem,{style:{width:'100%',display:'flex',flexDirection:'column'},children:[showDate&&/*#__PURE__*/_jsx(Grid,{container:true,justifyContent:\"center\",children:/*#__PURE__*/_jsx(Typography,{className:classes.dateIndicator,component:\"h6\",variant:\"body1\",children:formattedTimestamp})}),ownMessage?/*#__PURE__*/_jsx(Grid,{container:true,justify:\"flex-end\",children:/*#__PURE__*/_jsx(Grid,{item:true,className:classes.ownMessage,children:/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Grid,{container:true,justify:\"space-between\",children:[/*#__PURE__*/_jsx(Typography,{component:\"h2\",children:username}),/*#__PURE__*/_jsx(Typography,{component:\"span\",variant:\"subtitle1\",className:classes.timestamp,children:time})]})}),secondary:/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Typography,{component:\"span\",variant:\"body2\",className:classes.inlineOwn,children:contents})})})})}):/*#__PURE__*/_jsx(Grid,{container:true,justify:\"flex-start\",children:/*#__PURE__*/_jsx(Grid,{item:true,className:classes.message,children:/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Grid,{container:true,justify:\"space-between\",children:[/*#__PURE__*/_jsx(Typography,{component:\"h2\",children:username}),/*#__PURE__*/_jsx(Typography,{component:\"span\",variant:\"subtitle1\",className:classes.timestamp,children:time})]})}),secondary:/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Typography,{component:\"span\",variant:\"body2\",className:classes.inline,color:\"textPrimary\",children:contents})})})})})]})});};export default Message;","map":{"version":3,"sources":["/Users/tommivainio/Projektit/chatApp/my-app/src/components/message.tsx"],"names":["Grid","ListItem","ListItemText","Typography","makeStyles","useContext","useState","useEffect","MediaContext","moment","useStyles","message","backgroundColor","marginBottom","borderRadius","padding","maxWidth","ownMessage","color","inline","display","inlineOwn","timestamp","fontSize","marginLeft","dateIndicator","background","textAlign","Message","message_id","user_id","contents","setMessageId","usernames","index","messageArray","classes","username","setUsername","time","setTime","setOwnMessage","showDate","setShowDate","user","formattedTimestamp","format","i","length","formattedPreviousTimestamp","d","Date","hours","getHours","toString","minutes","getMinutes","formatedTime","e","console","log","width","flexDirection"],"mappings":"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","sourcesContent":["import { Grid, ListItem, ListItemText, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useContext } from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { MediaContext } from '../contexts/mediaContext';\nimport moment from 'moment';\n\ninterface usernamesArray {\n    user_id: number,\n    username: string,\n}\n\ninterface messagesArray {\n    id: number,\n    user_id: number,\n    contents: string,\n    timestamp: Date,\n}\n\ninterface propType {\n    message_id: number,\n    user_id: number,\n    contents: string,\n    timestamp: Date,\n    setMessageId: Function,\n    usernames: usernamesArray[],\n    index: number,\n    messageArray: messagesArray[],\n}\n\nconst useStyles = makeStyles(() => ({\n    message: {\n        backgroundColor: 'lightGrey',\n        marginBottom: '0.5rem',\n        borderRadius: '1rem',\n        padding: '0.5rem',\n        maxWidth: '50%',\n    },\n    ownMessage: {\n        backgroundColor: '#5F4B8BFF',\n        color: 'white',\n        marginBottom: '0.5rem',\n        borderRadius: '1rem',\n        padding: '0.5rem',\n        maxWidth: '50%',\n    },\n    inline: {\n        display: 'inline',\n    },\n    inlineOwn: {\n        display: 'inline',\n        color: 'white',\n    },\n    timestamp: {\n        fontSize: '0.7rem',\n        marginLeft: '2rem'\n    },\n    dateIndicator: {\n        background: 'rgb(95, 75, 139, .2)',\n        borderRadius: '0.3rem',\n        padding: '0.2rem',\n        marginBottom: '0.5rem',\n        textAlign: 'center',\n    }\n}));\n\nconst Message = ({ message_id, user_id, contents, timestamp, setMessageId, usernames, index, messageArray }: propType) => {\n    const classes = useStyles();\n    const [username, setUsername] = useState('');\n    const [time, setTime] = useState('');\n    const [ownMessage, setOwnMessage] = useState(false);\n    const [showDate, setShowDate] = useState(false);\n    const { user } = useContext(MediaContext);\n    const formattedTimestamp = moment(timestamp).format('DD.MM.YYYY');\n\n    useEffect(() => {\n        try {\n            for (let i = 0; i < usernames.length; i++) {\n                if (usernames[i].user_id === user_id) {\n                    setUsername(usernames[i].username);\n                }\n            }\n\n            if (index !== 0) {\n                const formattedPreviousTimestamp = moment(messageArray[index - 1].timestamp).format('DD.MM.YYYY');\n                if (formattedTimestamp !== formattedPreviousTimestamp) {\n                    setShowDate(true);\n                }\n            } else {\n                setShowDate(true);\n            }\n\n            const d = new Date(timestamp);\n            let hours = d.getHours().toString();\n            let minutes = d.getMinutes().toString();\n            if (d.getHours() < 10) {\n                hours = '0' + hours;\n            }\n            if (d.getMinutes() < 10) {\n                minutes = '0' + minutes;\n            }\n            const formatedTime = hours + '.' + minutes;\n            setTime(formatedTime);\n\n            if (user_id === user) {\n                setOwnMessage(true)\n            } else {\n                setOwnMessage(false);\n            }\n            setMessageId(message_id);\n        } catch (e) {\n            console.log(e.message);\n        }\n    }, [message_id]);\n\n\n    return (\n        <>\n            <ListItem style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n                {showDate &&\n                    <Grid container justifyContent=\"center\" >\n                        <Typography className={classes.dateIndicator} component=\"h6\" variant=\"body1\">{formattedTimestamp}</Typography>\n                    </Grid>\n                }\n                {ownMessage ? (\n                    <Grid container justify=\"flex-end\" >\n                        <Grid item className={classes.ownMessage}>\n                            <ListItemText\n                                primary={\n                                    <>\n                                        <Grid container justify=\"space-between\">\n                                            <Typography\n                                                component=\"h2\"\n                                            >\n                                                {username}\n                                            </Typography>\n                                            <Typography\n                                                component=\"span\"\n                                                variant=\"subtitle1\"\n                                                className={classes.timestamp}\n                                            >\n                                                {time}\n                                            </Typography>\n                                        </Grid>\n                                    </>\n                                }\n                                secondary={\n                                    <>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inlineOwn}\n                                        >\n                                            {contents}\n                                        </Typography>\n                                    </>\n                                }\n                            />\n                        </Grid>\n                    </Grid>\n                ) : (\n                    <Grid container justify=\"flex-start\" >\n                        <Grid item className={classes.message}>\n                            <ListItemText\n                                primary={\n                                    <>\n                                        <Grid container justify=\"space-between\">\n                                            <Typography\n                                                component=\"h2\"\n                                            >\n                                                {username}\n                                            </Typography>\n                                            <Typography\n                                                component=\"span\"\n                                                variant=\"subtitle1\"\n                                                className={classes.timestamp}\n                                            >\n                                                {time}\n                                            </Typography>\n                                        </Grid>\n                                    </>\n                                }\n                                secondary={\n                                    <>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                            {contents}\n                                        </Typography>\n                                    </>\n                                }\n                            />\n                        </Grid>\n                    </Grid>\n                )\n                }\n\n            </ListItem >\n        </>\n    )\n}\n\nexport default Message;"]},"metadata":{},"sourceType":"module"}