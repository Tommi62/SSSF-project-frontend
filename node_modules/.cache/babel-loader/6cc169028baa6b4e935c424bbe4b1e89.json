{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tommivainio/Projektit/chatApp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/tommivainio/Projektit/chatApp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/tommivainio/Projektit/chatApp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import{withRouter}from'react-router-dom';import{Button,Grid,TextField,Typography}from'@material-ui/core';import useForm from'../hooks/formHooks';import{useUsers}from'../hooks/apiHooks';import{makeStyles}from\"@material-ui/core/styles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{loginHeader:_defineProperty({},theme.breakpoints.down(600),{fontSize:'2rem'}),loginButton:{backgroundColor:'#5F4B8BFF',marginTop:'2rem',marginBottom:'0.5rem','&:hover':{backgroundColor:'#7159a6'}}};});var LoginForm=function LoginForm(_ref){var history=_ref.history;var classes=useStyles();var _useUsers=useUsers(),postLogin=_useUsers.postLogin;var doLogin=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var userdata;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return postLogin(inputs);case 3:userdata=_context.sent;localStorage.setItem('id',userdata.id);history.push('/');_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log('doLogin',_context.t0.message);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function doLogin(){return _ref2.apply(this,arguments);};}();var _useForm=useForm(doLogin,{username:'',password:''}),inputs=_useForm.inputs,handleInputChange=_useForm.handleInputChange,handleSubmit=_useForm.handleSubmit;return/*#__PURE__*/_jsxs(Grid,{container:true,children:[/*#__PURE__*/_jsx(Grid,{container:true,spacing:0,direction:\"column\",alignItems:\"center\",justify:\"center\",children:/*#__PURE__*/_jsx(Typography,{className:classes.loginHeader,component:\"h3\",variant:\"h3\",gutterBottom:true,children:\"Login\"})}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:0,direction:\"column\",alignItems:\"center\",justify:\"center\",children:/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",children:[/*#__PURE__*/_jsx(Grid,{container:true,item:true,children:/*#__PURE__*/_jsx(TextField,{type:\"text\",name:\"username\",label:\"Username\",onChange:handleInputChange,value:inputs.username})}),/*#__PURE__*/_jsx(Grid,{container:true,item:true,children:/*#__PURE__*/_jsx(TextField,{type:\"password\",name:\"password\",label:\"Password\",onChange:handleInputChange,value:inputs.password})}),/*#__PURE__*/_jsx(Grid,{container:true,item:true,children:/*#__PURE__*/_jsx(Button,{fullWidth:true,className:classes.loginButton,color:\"primary\",type:\"submit\",variant:\"contained\",children:\"Login\"})})]})})})]});};export default withRouter(LoginForm);","map":{"version":3,"sources":["/Users/tommivainio/Projektit/chatApp/my-app/src/components/loginForm.tsx"],"names":["withRouter","Button","Grid","TextField","Typography","useForm","useUsers","makeStyles","useStyles","theme","loginHeader","breakpoints","down","fontSize","loginButton","backgroundColor","marginTop","marginBottom","LoginForm","history","classes","postLogin","doLogin","inputs","userdata","localStorage","setItem","id","push","console","log","message","username","password","handleInputChange","handleSubmit"],"mappings":"qeAAA,OAASA,UAAT,KAA2B,kBAA3B,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,SAAvB,CAAkCC,UAAlC,KAAoD,mBAApD,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,OAASC,QAAT,KAAyB,mBAAzB,CACA,OAASC,UAAT,KAA2B,0BAA3B,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGD,UAAU,CAAC,SAACE,KAAD,QAAY,CACrCC,WAAW,oBACND,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,GAAvB,CADM,CACwB,CAC3BC,QAAQ,CAAE,MADiB,CADxB,CAD0B,CAMrCC,WAAW,CAAE,CACTC,eAAe,CAAE,WADR,CAETC,SAAS,CAAE,MAFF,CAGTC,YAAY,CAAE,QAHL,CAIT,UAAW,CACPF,eAAe,CAAE,SADV,CAJF,CANwB,CAAZ,EAAD,CAA5B,CAsBA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA2B,IAAxBC,CAAAA,OAAwB,MAAxBA,OAAwB,CACzC,GAAMC,CAAAA,OAAO,CAAGZ,SAAS,EAAzB,CACA,cAAsBF,QAAQ,EAA9B,CAAQe,SAAR,WAAQA,SAAR,CACA,GAAMC,CAAAA,OAAO,2FAAG,sLAEeD,CAAAA,SAAS,CAACE,MAAD,CAFxB,QAEFC,QAFE,eAGRC,YAAY,CAACC,OAAb,CAAqB,IAArB,CAA2BF,QAAQ,CAACG,EAApC,EACAR,OAAO,CAACS,IAAR,CAAa,GAAb,EAJQ,+EAMRC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuB,YAAEC,OAAzB,EANQ,oEAAH,kBAAPT,CAAAA,OAAO,2CAAb,CAUA,aAAoDjB,OAAO,CAACiB,OAAD,CAAU,CACjEU,QAAQ,CAAE,EADuD,CAEjEC,QAAQ,CAAE,EAFuD,CAAV,CAA3D,CAAQV,MAAR,UAAQA,MAAR,CAAgBW,iBAAhB,UAAgBA,iBAAhB,CAAmCC,YAAnC,UAAmCA,YAAnC,CAKA,mBACI,MAAC,IAAD,EAAM,SAAS,KAAf,wBACI,KAAC,IAAD,EACI,SAAS,KADb,CAEI,OAAO,CAAE,CAFb,CAGI,SAAS,CAAC,QAHd,CAII,UAAU,CAAC,QAJf,CAKI,OAAO,CAAC,QALZ,uBAOI,KAAC,UAAD,EAAY,SAAS,CAAEf,OAAO,CAACV,WAA/B,CAA4C,SAAS,CAAC,IAAtD,CAA2D,OAAO,CAAC,IAAnE,CAAwE,YAAY,KAApF,mBAPJ,EADJ,cAYI,KAAC,IAAD,EACI,SAAS,KADb,CAEI,OAAO,CAAE,CAFb,CAGI,SAAS,CAAC,QAHd,CAII,UAAU,CAAC,QAJf,CAKI,OAAO,CAAC,QALZ,uBAOI,aAAM,QAAQ,CAAEyB,YAAhB,uBACI,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAC,QAA1B,wBACI,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,IAAI,KAApB,uBACI,KAAC,SAAD,EACI,IAAI,CAAC,MADT,CAEI,IAAI,CAAC,UAFT,CAGI,KAAK,CAAC,UAHV,CAII,QAAQ,CAAED,iBAJd,CAKI,KAAK,CAAEX,MAAM,CAACS,QALlB,EADJ,EADJ,cAUI,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,IAAI,KAApB,uBACI,KAAC,SAAD,EACI,IAAI,CAAC,UADT,CAEI,IAAI,CAAC,UAFT,CAGI,KAAK,CAAC,UAHV,CAII,QAAQ,CAAEE,iBAJd,CAKI,KAAK,CAAEX,MAAM,CAACU,QALlB,EADJ,EAVJ,cAoBI,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,IAAI,KAApB,uBACI,KAAC,MAAD,EACI,SAAS,KADb,CAEI,SAAS,CAAEb,OAAO,CAACN,WAFvB,CAGI,KAAK,CAAC,SAHV,CAII,IAAI,CAAC,QAJT,CAKI,OAAO,CAAC,WALZ,mBADJ,EApBJ,GADJ,EAPJ,EAZJ,GADJ,CAyDH,CA3ED,CA8EA,cAAed,CAAAA,UAAU,CAACkB,SAAD,CAAzB","sourcesContent":["import { withRouter } from 'react-router-dom';\r\nimport { Button, Grid, TextField, Typography } from '@material-ui/core';\r\nimport useForm from '../hooks/formHooks';\r\nimport { useUsers } from '../hooks/apiHooks';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    loginHeader: {\r\n        [theme.breakpoints.down(600)]: {\r\n            fontSize: '2rem'\r\n        },\r\n    },\r\n    loginButton: {\r\n        backgroundColor: '#5F4B8BFF',\r\n        marginTop: '2rem',\r\n        marginBottom: '0.5rem',\r\n        '&:hover': {\r\n            backgroundColor: '#7159a6',\r\n        },\r\n    }\r\n}));\r\n\r\ninterface propType {\r\n    history: {\r\n        push: Function,\r\n    }\r\n}\r\n\r\nconst LoginForm = ({ history }: propType) => {\r\n    const classes = useStyles();\r\n    const { postLogin } = useUsers();\r\n    const doLogin = async () => {\r\n        try {\r\n            const userdata = await postLogin(inputs);\r\n            localStorage.setItem('id', userdata.id);\r\n            history.push('/');\r\n        } catch (e) {\r\n            console.log('doLogin', e.message);\r\n        }\r\n    };\r\n\r\n    const { inputs, handleInputChange, handleSubmit } = useForm(doLogin, {\r\n        username: '',\r\n        password: '',\r\n    });\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n            >\r\n                <Typography className={classes.loginHeader} component=\"h3\" variant=\"h3\" gutterBottom>\r\n                    Login\r\n                </Typography>\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n            >\r\n                <form onSubmit={handleSubmit}>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid container item>\r\n                            <TextField\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                label=\"Username\"\r\n                                onChange={handleInputChange}\r\n                                value={inputs.username}\r\n                            />\r\n                        </Grid>\r\n                        <Grid container item>\r\n                            <TextField\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                onChange={handleInputChange}\r\n                                value={inputs.password}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid container item>\r\n                            <Button\r\n                                fullWidth\r\n                                className={classes.loginButton}\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\n\r\nexport default withRouter(LoginForm);"]},"metadata":{},"sourceType":"module"}