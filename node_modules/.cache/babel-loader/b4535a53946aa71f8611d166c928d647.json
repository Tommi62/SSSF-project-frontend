{"ast":null,"code":"import _slicedToArray from\"/Users/tommivainio/Projektit/chatApp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var contextDefaultValues={user:0,setUser:function setUser(){}};var MediaContext=/*#__PURE__*/React.createContext(contextDefaultValues);var MediaProvider=function MediaProvider(_ref){var children=_ref.children;var _useState=useState(contextDefaultValues.user),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];return/*#__PURE__*/_jsx(MediaContext.Provider,{value:{user:user,setUser:setUser},children:children});};export{MediaContext,MediaProvider};","map":{"version":3,"sources":["/Users/tommivainio/Projektit/chatApp/my-app/src/contexts/mediaContext.tsx"],"names":["React","useState","contextDefaultValues","user","setUser","MediaContext","createContext","MediaProvider","children"],"mappings":"kKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,2CAYA,GAAMC,CAAAA,oBAAsC,CAAG,CAC3CC,IAAI,CAAE,CADqC,CAE3CC,OAAO,CAAE,kBAAM,CAAG,CAFyB,CAA/C,CAKA,GAAMC,CAAAA,YAAY,cAAGL,KAAK,CAACM,aAAN,CAAsCJ,oBAAtC,CAArB,CAEA,GAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAA4B,IAAzBC,CAAAA,QAAyB,MAAzBA,QAAyB,CAC9C,cAAwBP,QAAQ,CAASC,oBAAoB,CAACC,IAA9B,CAAhC,wCAAOA,IAAP,eAAaC,OAAb,eACA,mBACI,KAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAAED,IAAI,CAAJA,IAAF,CAAQC,OAAO,CAAPA,OAAR,CAA9B,UACKI,QADL,EADJ,CAKH,CAPD,CAaA,OAASH,YAAT,CAAuBE,aAAvB","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\ninterface propType {\r\n    children: any\r\n}\r\n\r\ntype userContextState = {\r\n    user: number;\r\n    setUser: (id: number) => void;\r\n};\r\n\r\nconst contextDefaultValues: userContextState = {\r\n    user: 0,\r\n    setUser: () => { }\r\n};\r\n\r\nconst MediaContext = React.createContext<userContextState>(contextDefaultValues)\r\n\r\nconst MediaProvider = ({ children }: propType) => {\r\n    const [user, setUser] = useState<number>(contextDefaultValues.user);\r\n    return (\r\n        <MediaContext.Provider value={{ user, setUser }}>\r\n            {children}\r\n        </MediaContext.Provider>\r\n    );\r\n};\r\n\r\nMediaProvider.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport { MediaContext, MediaProvider };"]},"metadata":{},"sourceType":"module"}