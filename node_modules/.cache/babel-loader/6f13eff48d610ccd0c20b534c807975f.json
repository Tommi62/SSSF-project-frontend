{"ast":null,"code":"var _jsxFileName = \"/Users/tommivainio/Desktop/chatApp/my-app/src/components/thread.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, List, TextField } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\nimport { useContext, useEffect, useState } from 'react';\nimport { MediaContext } from '../contexts/mediaContext';\nimport { useChats } from '../hooks/apiHooks';\nimport Message from '../components/message';\nimport useWindowDimensions from '../hooks/windowDimensionsHook';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Thread = ({\n  messages,\n  id,\n  setWebSocketUpdate\n}) => {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messageId, setMessageId] = useState(0);\n  const {\n    user\n  } = useContext(MediaContext);\n  const {\n    postMessage\n  } = useChats();\n  const {\n    height\n  } = useWindowDimensions();\n  const [websocket, setWebsocket] = useState();\n  const heightCorrected = height - 64;\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    try {\n      const socket = new WebSocket('ws://localhost:3001');\n      setWebsocket(socket);\n      socket.addEventListener('open', function (event) {\n        console.log('Server is opened.');\n        const client = {\n          type: 'client',\n          thread_id: id,\n          user_id: user\n        };\n        socket.send(JSON.stringify(client));\n      });\n      socket.addEventListener('message', function (event) {\n        console.log('Message from server ', JSON.parse(event.data).thread_id);\n        const message = JSON.parse(event.data);\n\n        if (message.thread_id === id) {\n          setWebSocketUpdate(message.timestamp);\n        }\n      });\n    } catch (e) {\n      console.log(e.message);\n    }\n\n    ;\n  }, []);\n\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        scrollToBottom();\n      } catch (e) {\n        console.log(e.message);\n      }\n    })();\n  }, [messageId]);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const tzoffset = new Date().getTimezoneOffset() * 60000;\n    const localISOTime = new Date(Date.now() - tzoffset).toISOString().slice(0, -1);\n    console.log('TIMEST: ', localISOTime);\n    const messageObject = JSON.stringify({\n      contents: message,\n      timestamp: localISOTime,\n      user_id: user,\n      thread_id: id\n    });\n    const success = await postMessage(messageObject);\n    console.log('SUCCESS: ', success);\n    const webSocketUpdate = {\n      type: 'message',\n      thread_id: id,\n      timestamp: Date.now()\n    };\n\n    if (websocket !== undefined) {\n      websocket.send(JSON.stringify(webSocketUpdate));\n    }\n\n    setMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      direction: \"column\",\n      style: {\n        height: heightCorrected\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        justify: \"center\",\n        style: {\n          padding: '2rem 6rem 1.5rem 6rem',\n          backgroundColor: '#E69A8DFF',\n          height: '90%',\n          overflowX: 'hidden',\n          overflowY: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: [messages.map(item => /*#__PURE__*/_jsxDEV(Message, {\n            message_id: item.id,\n            user_id: item.user_id,\n            contents: item.contents,\n            timestamp: item.timestamp,\n            setMessageId: setMessageId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this)), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        justify: \"center\",\n        direction: \"column\",\n        style: {\n          height: '10%',\n          backgroundColor: 'lightgray'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              value: message,\n              variant: \"outlined\",\n              label: \"Say something!\",\n              onInput: event => setMessage(event.target.value),\n              style: {\n                width: '70%',\n                backgroundColor: 'white',\n                borderRadius: '0.5rem'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              type: \"submit\",\n              color: \"default\",\n              style: {\n                marginTop: '0.15rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {\n                style: {\n                  fill: '#5F4B8BFF'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Thread, \"CY1X1KJr/HTImxzuD1GqoDACYEg=\", false, function () {\n  return [useChats, useWindowDimensions];\n});\n\n_c = Thread;\nexport default Thread;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thread\");","map":{"version":3,"sources":["/Users/tommivainio/Desktop/chatApp/my-app/src/components/thread.tsx"],"names":["Grid","List","TextField","SendIcon","IconButton","useContext","useEffect","useState","MediaContext","useChats","Message","useWindowDimensions","useRef","Thread","messages","id","setWebSocketUpdate","message","setMessage","messageId","setMessageId","user","postMessage","height","websocket","setWebsocket","heightCorrected","messagesEndRef","socket","WebSocket","addEventListener","event","console","log","client","type","thread_id","user_id","send","JSON","stringify","parse","data","timestamp","e","scrollToBottom","current","scrollIntoView","behavior","handleSubmit","preventDefault","tzoffset","Date","getTimezoneOffset","localISOTime","now","toISOString","slice","messageObject","contents","success","webSocketUpdate","undefined","padding","backgroundColor","overflowX","overflowY","map","item","target","value","width","borderRadius","marginTop","fill"],"mappings":"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","sourcesContent":["import { Grid, List, TextField } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { FormEvent, useContext, useEffect, useState } from 'react';\r\nimport { MediaContext } from '../contexts/mediaContext';\r\nimport { useChats } from '../hooks/apiHooks';\r\nimport Message from '../components/message';\r\nimport useWindowDimensions from '../hooks/windowDimensionsHook';\r\nimport { useRef } from 'react';\r\n\r\ninterface messagesArray {\r\n    id: number,\r\n    user_id: number,\r\n    contents: string,\r\n    timestamp: Date,\r\n}\r\n\r\ninterface propType {\r\n    messages: messagesArray[],\r\n    id: number,\r\n    setWebSocketUpdate: Function,\r\n    websocket: WebSocket,\r\n}\r\n\r\n\r\nconst Thread = ({ messages, id, setWebSocketUpdate }: propType) => {\r\n    const [message, setMessage] = useState('');\r\n    const [messageId, setMessageId] = useState(0);\r\n    const { user } = useContext(MediaContext);\r\n    const { postMessage } = useChats();\r\n    const { height } = useWindowDimensions();\r\n    const [websocket, setWebsocket] = useState<WebSocket>();\r\n    const heightCorrected = height - 64;\r\n    const messagesEndRef = useRef<null | HTMLDivElement>(null)\r\n\r\n\r\n    useEffect(() => {\r\n        try {\r\n\r\n            const socket = new WebSocket('ws://localhost:3001');\r\n\r\n            setWebsocket(socket);\r\n\r\n            socket.addEventListener('open', function (event) {\r\n                console.log('Server is opened.');\r\n                const client = {\r\n                    type: 'client',\r\n                    thread_id: id,\r\n                    user_id: user,\r\n                }\r\n                socket.send(JSON.stringify(client));\r\n            });\r\n\r\n            socket.addEventListener('message', function (event) {\r\n                console.log('Message from server ', JSON.parse(event.data).thread_id);\r\n                const message = JSON.parse(event.data);\r\n                if (message.thread_id === id) {\r\n                    setWebSocketUpdate(message.timestamp);\r\n                }\r\n            });\r\n        } catch (e) {\r\n            console.log(e.message);\r\n        };\r\n    }, []);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                scrollToBottom();\r\n            } catch (e) {\r\n                console.log(e.message);\r\n            }\r\n        })();\r\n    }, [messageId]);\r\n\r\n    const handleSubmit = async (event: FormEvent) => {\r\n        event.preventDefault();\r\n        const tzoffset = (new Date()).getTimezoneOffset() * 60000;\r\n        const localISOTime = (new Date(Date.now() - tzoffset)).toISOString().slice(0, -1);\r\n        console.log('TIMEST: ', localISOTime)\r\n        const messageObject = JSON.stringify({\r\n            contents: message,\r\n            timestamp: localISOTime,\r\n            user_id: user,\r\n            thread_id: id,\r\n\r\n        });\r\n        const success = await postMessage(messageObject)\r\n        console.log('SUCCESS: ', success)\r\n        const webSocketUpdate = {\r\n            type: 'message',\r\n            thread_id: id,\r\n            timestamp: Date.now(),\r\n        }\r\n        if (websocket !== undefined) {\r\n            websocket.send(JSON.stringify(webSocketUpdate));\r\n        }\r\n        setMessage('');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container justify=\"center\" direction=\"column\" style={{ height: heightCorrected }}>\r\n                <Grid item justify=\"center\" style=\r\n                    {{\r\n                        padding: '2rem 6rem 1.5rem 6rem',\r\n                        backgroundColor: '#E69A8DFF',\r\n                        height: '90%',\r\n                        overflowX: 'hidden',\r\n                        overflowY: 'auto'\r\n                    }}>\r\n                    <List>\r\n                        {messages.map((item) => (\r\n                            <Message message_id={item.id} user_id={item.user_id} contents={item.contents} timestamp={item.timestamp} setMessageId={setMessageId} />\r\n                        ))}{' '}\r\n                        <div ref={messagesEndRef} />\r\n                    </List>\r\n                </Grid>\r\n                <Grid item container justify=\"center\" direction=\"column\" style={{ height: '10%', backgroundColor: 'lightgray' }}>\r\n                    <Grid item>\r\n                        <form\r\n                            onSubmit={handleSubmit}\r\n                        >\r\n\r\n                            <TextField\r\n                                value={message}\r\n                                variant=\"outlined\"\r\n                                label=\"Say something!\"\r\n                                onInput={(event) => setMessage((event.target as HTMLInputElement).value)}\r\n                                style={{ width: '70%', backgroundColor: 'white', borderRadius: '0.5rem' }}\r\n                            />\r\n                            <IconButton\r\n                                type=\"submit\"\r\n                                color=\"default\"\r\n                                style={{ marginTop: '0.15rem' }}\r\n                            >\r\n                                <SendIcon style={{ fill: '#5F4B8BFF' }} />\r\n                            </IconButton>\r\n\r\n                        </form>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Thread;"]},"metadata":{},"sourceType":"module"}