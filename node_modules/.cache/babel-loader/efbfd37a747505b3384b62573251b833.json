{"ast":null,"code":"var _jsxFileName = \"C:\\\\USERS\\\\Tommi Vainio\\\\desktop\\\\chatApp\\\\my-app\\\\src\\\\views\\\\home.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport config from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst doFetch = async url => {\n  console.log('smthng');\n  const response = await fetch(config.backendUrl + url);\n  console.log('doFetch: ', response);\n  const json = await response.json();\n  console.log('doFetch2: ', json);\n\n  if (json.error) {\n    // if API response contains error message (use Postman to get further details)\n    throw new Error(json.message + ': ' + json.error);\n  } else if (!response.ok) {\n    // if API response does not contain error message, but there is some other error\n    throw new Error('doFetch failed');\n  } else {\n    // if all goes well\n    return json;\n  }\n};\n\nconst Home = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    (async () => {\n      try {\n        const result = await doFetch('/');\n        console.log('Result: ', result);\n        setData(result[0].username);\n      } catch (e) {\n        console.log(e.message);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: !data ? \"Loading...\" : data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/USERS/Tommi Vainio/desktop/chatApp/my-app/src/views/home.tsx"],"names":["useEffect","useState","config","doFetch","url","console","log","response","fetch","backendUrl","json","error","Error","message","ok","Home","data","setData","result","username","e"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,MAAP,MAAmB,WAAnB;;;AAGA,MAAMC,OAAO,GAAG,MAAOC,GAAP,IAAuB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,MAAM,CAACO,UAAP,GAAoBL,GAArB,CAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,QAAzB;AACA,QAAMG,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAT,EAAnB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BI,IAA1B;;AACA,MAAIA,IAAI,CAACC,KAAT,EAAgB;AACZ;AACA,UAAM,IAAIC,KAAJ,CAAUF,IAAI,CAACG,OAAL,GAAe,IAAf,GAAsBH,IAAI,CAACC,KAArC,CAAN;AACH,GAHD,MAGO,IAAI,CAACJ,QAAQ,CAACO,EAAd,EAAkB;AACrB;AACA,UAAM,IAAIF,KAAJ,CAAU,gBAAV,CAAN;AACH,GAHM,MAGA;AACH;AACA,WAAOF,IAAP;AACH;AACJ,CAhBD;;AAkBA,MAAMK,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,IAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,UAAI;AACA,cAAMkB,MAAM,GAAG,MAAMf,OAAO,CAAC,GAAD,CAA5B;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBY,MAAxB;AACAD,QAAAA,OAAO,CAACC,MAAM,CAAC,CAAD,CAAN,CAAUC,QAAX,CAAP;AACH,OAJD,CAIE,OAAOC,CAAP,EAAU;AACRf,QAAAA,OAAO,CAACC,GAAR,CAAYc,CAAC,CAACP,OAAd;AACH;AACJ,KARD;AASH,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACI;AAAA,2BACI;AAAA,gBAAK,CAACG,IAAD,GAAQ,YAAR,GAAuBA;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CArBD;;GAAMD,I;;KAAAA,I;AAuBN,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nimport config from '../config'\r\n\r\n\r\nconst doFetch = async (url: string) => {\r\n    console.log('smthng');\r\n    const response = await fetch(config.backendUrl + url);\r\n    console.log('doFetch: ', response);\r\n    const json = await response.json();\r\n    console.log('doFetch2: ', json);\r\n    if (json.error) {\r\n        // if API response contains error message (use Postman to get further details)\r\n        throw new Error(json.message + ': ' + json.error);\r\n    } else if (!response.ok) {\r\n        // if API response does not contain error message, but there is some other error\r\n        throw new Error('doFetch failed');\r\n    } else {\r\n        // if all goes well\r\n        return json;\r\n    }\r\n};\r\n\r\nconst Home = () => {\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const result = await doFetch('/');\r\n                console.log('Result: ', result);\r\n                setData(result[0].username);\r\n            } catch (e) {\r\n                console.log(e.message);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>{!data ? \"Loading...\" : data}</h1>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}