{"ast":null,"code":"var _jsxFileName = \"/Users/tommivainio/Desktop/chatApp/my-app/src/components/message.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, ListItem, ListItemText, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useContext } from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { MediaContext } from '../contexts/mediaContext';\nimport { useUsers } from '../hooks/apiHooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  message: {\n    width: '100%',\n    maxWidth: '36ch',\n    backgroundColor: 'lightGrey',\n    marginBottom: '0.5rem',\n    borderRadius: '1rem',\n    padding: '0.5rem'\n  },\n  ownMessage: {\n    width: '100%',\n    maxWidth: '36ch',\n    backgroundColor: '#5F4B8BFF',\n    color: 'white',\n    marginBottom: '1rem',\n    borderRadius: '1rem',\n    padding: '0.5rem'\n  },\n  inline: {\n    display: 'inline'\n  },\n  inlineOwn: {\n    display: 'inline',\n    color: 'white'\n  },\n  timestamp: {\n    fontSize: '0.7rem'\n  }\n}));\n\nconst Message = ({\n  user_id,\n  contents,\n  timestamp\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [time, setTime] = useState('');\n  const [ownMessage, setOwnMessage] = useState(false);\n  const {\n    user\n  } = useContext(MediaContext);\n  const {\n    getUsernameById\n  } = useUsers();\n  useEffect(() => {\n    (async () => {\n      try {\n        const messageOwner = await getUsernameById(user_id);\n        setUsername(messageOwner.username);\n        const d = new Date(timestamp);\n        let hours = d.getHours().toString();\n        let minutes = d.getMinutes().toString();\n\n        if (d.getHours() < 10) {\n          hours = '0' + hours;\n        }\n\n        if (d.getMinutes() < 10) {\n          minutes = '0' + minutes;\n        }\n\n        const formatedTime = hours + '.' + minutes;\n        setTime(formatedTime);\n\n        if (user_id === user) {\n          setOwnMessage(true);\n        }\n      } catch (e) {\n        console.log(e.message);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ListItem, {\n      style: {\n        width: '100%'\n      },\n      children: ownMessage ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"flex-end\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.ownMessage,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                justify: \"space-between\",\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"h2\",\n                  children: username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"subtitle1\",\n                  className: classes.timestamp,\n                  children: time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 41\n              }, this)\n            }, void 0, false),\n            secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                variant: \"body2\",\n                className: classes.inlineOwn,\n                children: contents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 41\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"flex-start\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.message,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                justify: \"space-between\",\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"h2\",\n                  children: username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"subtitle1\",\n                  className: classes.timestamp,\n                  children: time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 41\n              }, this)\n            }, void 0, false),\n            secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                variant: \"body2\",\n                className: classes.inline,\n                color: \"textPrimary\",\n                children: contents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 41\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Message, \"QAbCTMg4jEg67P0wL155lCkx7II=\", false, function () {\n  return [useStyles, useUsers];\n});\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/Users/tommivainio/Desktop/chatApp/my-app/src/components/message.tsx"],"names":["Grid","ListItem","ListItemText","Typography","makeStyles","useContext","useState","useEffect","MediaContext","useUsers","useStyles","message","width","maxWidth","backgroundColor","marginBottom","borderRadius","padding","ownMessage","color","inline","display","inlineOwn","timestamp","fontSize","Message","user_id","contents","classes","username","setUsername","time","setTime","setOwnMessage","user","getUsernameById","messageOwner","d","Date","hours","getHours","toString","minutes","getMinutes","formatedTime","e","console","log"],"mappings":"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","sourcesContent":["import { Grid, ListItem, ListItemText, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useContext } from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { MediaContext } from '../contexts/mediaContext';\nimport { useChats, useUsers } from '../hooks/apiHooks';\n\ninterface propType {\n    user_id: number,\n    contents: string,\n    timestamp: Date,\n}\n\nconst useStyles = makeStyles(() => ({\n    message: {\n        width: '100%',\n        maxWidth: '36ch',\n        backgroundColor: 'lightGrey',\n        marginBottom: '0.5rem',\n        borderRadius: '1rem',\n        padding: '0.5rem',\n    },\n    ownMessage: {\n        width: '100%',\n        maxWidth: '36ch',\n        backgroundColor: '#5F4B8BFF',\n        color: 'white',\n        marginBottom: '1rem',\n        borderRadius: '1rem',\n        padding: '0.5rem',\n    },\n    inline: {\n        display: 'inline',\n    },\n    inlineOwn: {\n        display: 'inline',\n        color: 'white',\n    },\n    timestamp: {\n        fontSize: '0.7rem'\n    }\n}));\n\nconst Message = ({ user_id, contents, timestamp }: propType) => {\n    const classes = useStyles();\n    const [username, setUsername] = useState('');\n    const [time, setTime] = useState('');\n    const [ownMessage, setOwnMessage] = useState(false);\n    const { user } = useContext(MediaContext);\n    const { getUsernameById } = useUsers();\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const messageOwner = await getUsernameById(user_id);\n                setUsername(messageOwner.username);\n\n                const d = new Date(timestamp);\n                let hours = d.getHours().toString();\n                let minutes = d.getMinutes().toString();\n                if (d.getHours() < 10) {\n                    hours = '0' + hours;\n                }\n                if (d.getMinutes() < 10) {\n                    minutes = '0' + minutes;\n                }\n                const formatedTime = hours + '.' + minutes;\n                setTime(formatedTime);\n\n                if (user_id === user) {\n                    setOwnMessage(true)\n                }\n            } catch (e) {\n                console.log(e.message);\n            }\n        })();\n    }, []);\n\n\n    return (\n        <>\n            <ListItem style={{ width: '100%' }}>\n                {ownMessage ? (\n                    <Grid container justify=\"flex-end\" >\n                        <Grid item className={classes.ownMessage}>\n                            <ListItemText\n                                primary={\n                                    <>\n                                        <Grid container justify=\"space-between\">\n                                            <Typography\n                                                component=\"h2\"\n                                            >\n                                                {username}\n                                            </Typography>\n                                            <Typography\n                                                component=\"span\"\n                                                variant=\"subtitle1\"\n                                                className={classes.timestamp}\n                                            >\n                                                {time}\n                                            </Typography>\n                                        </Grid>\n                                    </>\n                                }\n                                secondary={\n                                    <>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inlineOwn}\n                                        >\n                                            {contents}\n                                        </Typography>\n                                    </>\n                                }\n                            />\n                        </Grid>\n                    </Grid>\n                ) : (\n                    <Grid container justify=\"flex-start\" >\n                        <Grid item className={classes.message}>\n                            <ListItemText\n                                primary={\n                                    <>\n                                        <Grid container justify=\"space-between\">\n                                            <Typography\n                                                component=\"h2\"\n                                            >\n                                                {username}\n                                            </Typography>\n                                            <Typography\n                                                component=\"span\"\n                                                variant=\"subtitle1\"\n                                                className={classes.timestamp}\n                                            >\n                                                {time}\n                                            </Typography>\n                                        </Grid>\n                                    </>\n                                }\n                                secondary={\n                                    <>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                            {contents}\n                                        </Typography>\n                                    </>\n                                }\n                            />\n                        </Grid>\n                    </Grid>\n                )\n                }\n\n            </ListItem >\n        </>\n    )\n}\n\nexport default Message;"]},"metadata":{},"sourceType":"module"}