{"ast":null,"code":"var _jsxFileName = \"/Users/tommivainio/Desktop/chatApp/my-app/src/components/message.tsx\",\n    _s = $RefreshSig$();\n\nimport { ListItem, ListItemText, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useUsers } from '../hooks/apiHooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    maxWidth: '36ch',\n    backgroundColor: 'lightGrey'\n  },\n  inline: {\n    display: 'inline'\n  }\n}));\n\nconst Message = ({\n  user_id,\n  contents,\n  timestamp\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const {\n    getUsernameById\n  } = useUsers();\n  useEffect(() => {\n    (async () => {\n      try {\n        const messageOwner = await getUsernameById(user_id);\n        setUsername(messageOwner.username);\n      } catch (e) {\n        console.log(e.message);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ListItem, {\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: username,\n        secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            variant: \"body2\",\n            className: classes.inline,\n            color: \"textPrimary\",\n            children: contents\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Message, \"N8BExT+HyiiAIJ+NiAH1bPDzTI8=\", false, function () {\n  return [useStyles, useUsers];\n});\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/Users/tommivainio/Desktop/chatApp/my-app/src/components/message.tsx"],"names":["ListItem","ListItemText","Typography","makeStyles","useState","useEffect","useUsers","useStyles","root","width","maxWidth","backgroundColor","inline","display","Message","user_id","contents","timestamp","classes","username","setUsername","getUsernameById","messageOwner","e","console","log","message"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,YAAnB,EAAiCC,UAAjC,QAAmD,mBAAnD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAAmBC,QAAnB,QAAmC,mBAAnC;;;AAQA,MAAMC,SAAS,GAAGJ,UAAU,CAAC,OAAO;AAChCK,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,QAAQ,EAAE,MAFR;AAGFC,IAAAA,eAAe,EAAE;AAHf,GAD0B;AAMhCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL;AANwB,CAAP,CAAD,CAA5B;;AAWA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAAgD;AAAA;;AAC5D,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAsBf,QAAQ,EAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,UAAI;AACA,cAAMiB,YAAY,GAAG,MAAMD,eAAe,CAACN,OAAD,CAA1C;AACAK,QAAAA,WAAW,CAACE,YAAY,CAACH,QAAd,CAAX;AAEH,OAJD,CAIE,OAAOI,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACH;AACJ,KARD;AASH,GAVQ,EAUN,EAVM,CAAT;AAaA,sBACI;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,UAAU,EAAC,QAArB;AAAA,6BACI,QAAC,YAAD;AACI,QAAA,OAAO,EAAEP,QADb;AAEI,QAAA,SAAS,eACL;AAAA,iCACI,QAAC,UAAD;AACI,YAAA,SAAS,EAAC,MADd;AAEI,YAAA,OAAO,EAAC,OAFZ;AAGI,YAAA,SAAS,EAAED,OAAO,CAACN,MAHvB;AAII,YAAA,KAAK,EAAC,aAJV;AAAA,sBAMKI;AANL;AAAA;AAAA;AAAA;AAAA;AADJ;AAHR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAqBH,CAvCD;;GAAMF,O;UACcP,S,EAEYD,Q;;;KAH1BQ,O;AAyCN,eAAeA,OAAf","sourcesContent":["import { ListItem, ListItemText, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useChats, useUsers } from '../hooks/apiHooks';\n\ninterface propType {\n    user_id: number,\n    contents: string,\n    timestamp: Date,\n}\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        width: '100%',\n        maxWidth: '36ch',\n        backgroundColor: 'lightGrey',\n    },\n    inline: {\n        display: 'inline',\n    },\n}));\n\nconst Message = ({ user_id, contents, timestamp }: propType) => {\n    const classes = useStyles();\n    const [username, setUsername] = useState('');\n    const { getUsernameById } = useUsers();\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const messageOwner = await getUsernameById(user_id);\n                setUsername(messageOwner.username);\n\n            } catch (e) {\n                console.log(e.message);\n            }\n        })();\n    }, []);\n\n\n    return (\n        <>\n            <ListItem alignItems=\"center\">\n                <ListItemText\n                    primary={username}\n                    secondary={\n                        <>\n                            <Typography\n                                component=\"span\"\n                                variant=\"body2\"\n                                className={classes.inline}\n                                color=\"textPrimary\"\n                            >\n                                {contents}\n                            </Typography>\n                        </>\n                    }\n                />\n            </ListItem>\n        </>\n    )\n}\n\nexport default Message;"]},"metadata":{},"sourceType":"module"}