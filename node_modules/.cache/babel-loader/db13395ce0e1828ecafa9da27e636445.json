{"ast":null,"code":"var _jsxFileName = \"/Users/tommivainio/Projektit/chatApp/my-app/src/components/message.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, ListItem, ListItemText, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useContext } from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { MediaContext } from '../contexts/mediaContext';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  message: {\n    backgroundColor: 'lightGrey',\n    marginBottom: '0.5rem',\n    borderRadius: '1rem',\n    padding: '0.5rem',\n    maxWidth: '50%'\n  },\n  ownMessage: {\n    backgroundColor: '#5F4B8BFF',\n    color: 'white',\n    marginBottom: '0.5rem',\n    borderRadius: '1rem',\n    padding: '0.5rem',\n    maxWidth: '50%'\n  },\n  inline: {\n    display: 'inline'\n  },\n  inlineOwn: {\n    display: 'inline',\n    color: 'white'\n  },\n  timestamp: {\n    fontSize: '0.7rem',\n    marginLeft: '2rem'\n  }\n}));\n\nconst Message = ({\n  message_id,\n  user_id,\n  contents,\n  timestamp,\n  setMessageId,\n  usernames,\n  index,\n  messageArray\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [time, setTime] = useState('');\n  const [ownMessage, setOwnMessage] = useState(false);\n  const [showDate, setShowDate] = useState(false);\n  const {\n    user\n  } = useContext(MediaContext);\n  const formattedTimestamp = moment(timestamp).format('DD.MM.YYYY');\n  useEffect(() => {\n    try {\n      for (let i = 0; i < usernames.length; i++) {\n        if (usernames[i].user_id === user_id) {\n          setUsername(usernames[i].username);\n        }\n      }\n\n      setShowDate(false);\n\n      if (index !== 0) {\n        const formattedPreviousTimestamp = moment(messageArray[index - 1].timestamp).format('DD.MM.YYYY');\n\n        if (formattedTimestamp !== formattedPreviousTimestamp) {\n          setShowDate(true);\n        }\n      } else {\n        setShowDate(true);\n      }\n\n      const d = new Date(timestamp);\n      let hours = d.getHours().toString();\n      let minutes = d.getMinutes().toString();\n\n      if (d.getHours() < 10) {\n        hours = '0' + hours;\n      }\n\n      if (d.getMinutes() < 10) {\n        minutes = '0' + minutes;\n      }\n\n      const formatedTime = hours + '.' + minutes;\n      setTime(formatedTime);\n\n      if (user_id === user) {\n        setOwnMessage(true);\n      } else {\n        setOwnMessage(false);\n      }\n\n      setMessageId(message_id);\n    } catch (e) {\n      console.log(e.message);\n    }\n  }, [message_id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ListItem, {\n      style: {\n        width: '100%'\n      },\n      children: [showDate && /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h5\",\n          variant: \"h5\",\n          children: formattedTimestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this), ownMessage ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"flex-end\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.ownMessage,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                justify: \"space-between\",\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"h2\",\n                  children: username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"subtitle1\",\n                  className: classes.timestamp,\n                  children: time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 41\n              }, this)\n            }, void 0, false),\n            secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                variant: \"body2\",\n                className: classes.inlineOwn,\n                children: contents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 41\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"flex-start\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.message,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                justify: \"space-between\",\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"h2\",\n                  children: username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"subtitle1\",\n                  className: classes.timestamp,\n                  children: time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 41\n              }, this)\n            }, void 0, false),\n            secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                variant: \"body2\",\n                className: classes.inline,\n                color: \"textPrimary\",\n                children: contents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 41\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Message, \"FiypoMN9dphj5CUP9M3NfecFvy8=\", false, function () {\n  return [useStyles];\n});\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/Users/tommivainio/Projektit/chatApp/my-app/src/components/message.tsx"],"names":["Grid","ListItem","ListItemText","Typography","makeStyles","useContext","useState","useEffect","MediaContext","moment","useStyles","message","backgroundColor","marginBottom","borderRadius","padding","maxWidth","ownMessage","color","inline","display","inlineOwn","timestamp","fontSize","marginLeft","Message","message_id","user_id","contents","setMessageId","usernames","index","messageArray","classes","username","setUsername","time","setTime","setOwnMessage","showDate","setShowDate","user","formattedTimestamp","format","i","length","formattedPreviousTimestamp","d","Date","hours","getHours","toString","minutes","getMinutes","formatedTime","e","console","log","width"],"mappings":"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","sourcesContent":["import { Grid, ListItem, ListItemText, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useContext } from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { MediaContext } from '../contexts/mediaContext';\nimport moment from 'moment';\n\ninterface usernamesArray {\n    user_id: number,\n    username: string,\n}\n\ninterface messagesArray {\n    id: number,\n    user_id: number,\n    contents: string,\n    timestamp: Date,\n}\n\ninterface propType {\n    message_id: number,\n    user_id: number,\n    contents: string,\n    timestamp: Date,\n    setMessageId: Function,\n    usernames: usernamesArray[],\n    index: number,\n    messageArray: messagesArray[],\n}\n\nconst useStyles = makeStyles(() => ({\n    message: {\n        backgroundColor: 'lightGrey',\n        marginBottom: '0.5rem',\n        borderRadius: '1rem',\n        padding: '0.5rem',\n        maxWidth: '50%',\n    },\n    ownMessage: {\n        backgroundColor: '#5F4B8BFF',\n        color: 'white',\n        marginBottom: '0.5rem',\n        borderRadius: '1rem',\n        padding: '0.5rem',\n        maxWidth: '50%',\n    },\n    inline: {\n        display: 'inline',\n    },\n    inlineOwn: {\n        display: 'inline',\n        color: 'white',\n    },\n    timestamp: {\n        fontSize: '0.7rem',\n        marginLeft: '2rem'\n    }\n}));\n\nconst Message = ({ message_id, user_id, contents, timestamp, setMessageId, usernames, index, messageArray }: propType) => {\n    const classes = useStyles();\n    const [username, setUsername] = useState('');\n    const [time, setTime] = useState('');\n    const [ownMessage, setOwnMessage] = useState(false);\n    const [showDate, setShowDate] = useState(false);\n    const { user } = useContext(MediaContext);\n    const formattedTimestamp = moment(timestamp).format('DD.MM.YYYY');\n\n    useEffect(() => {\n        try {\n            for (let i = 0; i < usernames.length; i++) {\n                if (usernames[i].user_id === user_id) {\n                    setUsername(usernames[i].username);\n                }\n            }\n            setShowDate(false);\n\n            if (index !== 0) {\n                const formattedPreviousTimestamp = moment(messageArray[index - 1].timestamp).format('DD.MM.YYYY');\n                if (formattedTimestamp !== formattedPreviousTimestamp) {\n                    setShowDate(true);\n                }\n            } else {\n                setShowDate(true);\n            }\n            const d = new Date(timestamp);\n            let hours = d.getHours().toString();\n            let minutes = d.getMinutes().toString();\n            if (d.getHours() < 10) {\n                hours = '0' + hours;\n            }\n            if (d.getMinutes() < 10) {\n                minutes = '0' + minutes;\n            }\n            const formatedTime = hours + '.' + minutes;\n            setTime(formatedTime);\n\n            if (user_id === user) {\n                setOwnMessage(true)\n            } else {\n                setOwnMessage(false);\n            }\n            setMessageId(message_id);\n        } catch (e) {\n            console.log(e.message);\n        }\n    }, [message_id]);\n\n\n    return (\n        <>\n            <ListItem style={{ width: '100%' }}>\n                {showDate &&\n                    <Grid container justifyContent=\"center\">\n                        <Typography component=\"h5\" variant=\"h5\">{formattedTimestamp}</Typography>\n                    </Grid>\n                }\n                {ownMessage ? (\n                    <Grid container justify=\"flex-end\" >\n                        <Grid item className={classes.ownMessage}>\n                            <ListItemText\n                                primary={\n                                    <>\n                                        <Grid container justify=\"space-between\">\n                                            <Typography\n                                                component=\"h2\"\n                                            >\n                                                {username}\n                                            </Typography>\n                                            <Typography\n                                                component=\"span\"\n                                                variant=\"subtitle1\"\n                                                className={classes.timestamp}\n                                            >\n                                                {time}\n                                            </Typography>\n                                        </Grid>\n                                    </>\n                                }\n                                secondary={\n                                    <>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inlineOwn}\n                                        >\n                                            {contents}\n                                        </Typography>\n                                    </>\n                                }\n                            />\n                        </Grid>\n                    </Grid>\n                ) : (\n                    <Grid container justify=\"flex-start\" >\n                        <Grid item className={classes.message}>\n                            <ListItemText\n                                primary={\n                                    <>\n                                        <Grid container justify=\"space-between\">\n                                            <Typography\n                                                component=\"h2\"\n                                            >\n                                                {username}\n                                            </Typography>\n                                            <Typography\n                                                component=\"span\"\n                                                variant=\"subtitle1\"\n                                                className={classes.timestamp}\n                                            >\n                                                {time}\n                                            </Typography>\n                                        </Grid>\n                                    </>\n                                }\n                                secondary={\n                                    <>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                            {contents}\n                                        </Typography>\n                                    </>\n                                }\n                            />\n                        </Grid>\n                    </Grid>\n                )\n                }\n\n            </ListItem >\n        </>\n    )\n}\n\nexport default Message;"]},"metadata":{},"sourceType":"module"}