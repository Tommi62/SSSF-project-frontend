{"ast":null,"code":"var _jsxFileName = \"/Users/tommivainio/Desktop/chatApp/my-app/src/components/message.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, ListItem, ListItemText, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useUsers } from '../hooks/apiHooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    maxWidth: '36ch',\n    backgroundColor: 'lightGrey',\n    marginBottom: '2rem',\n    borderRadius: '1rem',\n    margin: 'auto'\n  },\n  inline: {\n    display: 'inline'\n  },\n  timestamp: {\n    fontSize: '0.7rem'\n  }\n}));\n\nconst Message = ({\n  user_id,\n  contents,\n  timestamp\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [time, setTime] = useState('');\n  const {\n    getUsernameById\n  } = useUsers();\n  useEffect(() => {\n    (async () => {\n      try {\n        const messageOwner = await getUsernameById(user_id);\n        setUsername(messageOwner.username);\n        const d = new Date(timestamp);\n        const formatedTime = d.getHours + '.' + d.getMinutes();\n      } catch (e) {\n        console.log(e.message);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ListItem, {\n      alignItems: \"center\",\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h2\",\n              children: username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"span\",\n              variant: \"subtitle1\",\n              className: classes.timestamp,\n              children: timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)\n        }, void 0, false),\n        secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            variant: \"body2\",\n            className: classes.inline,\n            color: \"textPrimary\",\n            children: contents\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Message, \"dYK75HMCzDPbNNF2nr/2/zEUBcw=\", false, function () {\n  return [useStyles, useUsers];\n});\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/Users/tommivainio/Desktop/chatApp/my-app/src/components/message.tsx"],"names":["Grid","ListItem","ListItemText","Typography","makeStyles","useState","useEffect","useUsers","useStyles","root","width","maxWidth","backgroundColor","marginBottom","borderRadius","margin","inline","display","timestamp","fontSize","Message","user_id","contents","classes","username","setUsername","time","setTime","getUsernameById","messageOwner","d","Date","formatedTime","getHours","getMinutes","e","console","log","message"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,QAAf,EAAyBC,YAAzB,EAAuCC,UAAvC,QAAyD,mBAAzD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAAmBC,QAAnB,QAAmC,mBAAnC;;;AAQA,MAAMC,SAAS,GAAGJ,UAAU,CAAC,OAAO;AAChCK,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,QAAQ,EAAE,MAFR;AAGFC,IAAAA,eAAe,EAAE,WAHf;AAIFC,IAAAA,YAAY,EAAE,MAJZ;AAKFC,IAAAA,YAAY,EAAE,MALZ;AAMFC,IAAAA,MAAM,EAAE;AANN,GAD0B;AAShCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GATwB;AAYhCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,QAAQ,EAAE;AADH;AAZqB,CAAP,CAAD,CAA5B;;AAiBA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBJ,EAAAA;AAArB,CAAD,KAAgD;AAAA;;AAC5D,QAAMK,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEuB,IAAAA;AAAF,MAAsBrB,QAAQ,EAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,UAAI;AACA,cAAMuB,YAAY,GAAG,MAAMD,eAAe,CAACP,OAAD,CAA1C;AACAI,QAAAA,WAAW,CAACI,YAAY,CAACL,QAAd,CAAX;AACA,cAAMM,CAAC,GAAG,IAAIC,IAAJ,CAASb,SAAT,CAAV;AACA,cAAMc,YAAY,GAAGF,CAAC,CAACG,QAAF,GAAa,GAAb,GAAmBH,CAAC,CAACI,UAAF,EAAxC;AAEH,OAND,CAME,OAAOC,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACH;AACJ,KAVD;AAWH,GAZQ,EAYN,EAZM,CAAT;AAeA,sBACI;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,UAAU,EAAC,QAArB;AAA8B,MAAA,SAAS,EAAEf,OAAO,CAACd,IAAjD;AAAA,6BACI,QAAC,YAAD;AACI,QAAA,OAAO,eACH;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAC,eAAxB;AAAA,oCACI,QAAC,UAAD;AACI,cAAA,SAAS,EAAC,IADd;AAAA,wBAGKe;AAHL;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI,QAAC,UAAD;AACI,cAAA,SAAS,EAAC,MADd;AAEI,cAAA,OAAO,EAAC,WAFZ;AAGI,cAAA,SAAS,EAAED,OAAO,CAACL,SAHvB;AAAA,wBAKKA;AALL;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,yBAFR;AAmBI,QAAA,SAAS,eACL;AAAA,iCACI,QAAC,UAAD;AACI,YAAA,SAAS,EAAC,MADd;AAEI,YAAA,OAAO,EAAC,OAFZ;AAGI,YAAA,SAAS,EAAEK,OAAO,CAACP,MAHvB;AAII,YAAA,KAAK,EAAC,aAJV;AAAA,sBAMKM;AANL;AAAA;AAAA;AAAA;AAAA;AADJ;AApBR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAsCH,CA3DD;;GAAMF,O;UACcZ,S,EAGYD,Q;;;KAJ1Ba,O;AA6DN,eAAeA,OAAf","sourcesContent":["import { Grid, ListItem, ListItemText, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useChats, useUsers } from '../hooks/apiHooks';\n\ninterface propType {\n    user_id: number,\n    contents: string,\n    timestamp: Date,\n}\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        width: '100%',\n        maxWidth: '36ch',\n        backgroundColor: 'lightGrey',\n        marginBottom: '2rem',\n        borderRadius: '1rem',\n        margin: 'auto',\n    },\n    inline: {\n        display: 'inline',\n    },\n    timestamp: {\n        fontSize: '0.7rem'\n    }\n}));\n\nconst Message = ({ user_id, contents, timestamp }: propType) => {\n    const classes = useStyles();\n    const [username, setUsername] = useState('');\n    const [time, setTime] = useState('');\n    const { getUsernameById } = useUsers();\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const messageOwner = await getUsernameById(user_id);\n                setUsername(messageOwner.username);\n                const d = new Date(timestamp);\n                const formatedTime = d.getHours + '.' + d.getMinutes();\n\n            } catch (e) {\n                console.log(e.message);\n            }\n        })();\n    }, []);\n\n\n    return (\n        <>\n            <ListItem alignItems=\"center\" className={classes.root}>\n                <ListItemText\n                    primary={\n                        <>\n                            <Grid container justify=\"space-between\">\n                                <Typography\n                                    component=\"h2\"\n                                >\n                                    {username}\n                                </Typography>\n                                <Typography\n                                    component=\"span\"\n                                    variant=\"subtitle1\"\n                                    className={classes.timestamp}\n                                >\n                                    {timestamp}\n                                </Typography>\n                            </Grid>\n                        </>\n                    }\n                    secondary={\n                        <>\n                            <Typography\n                                component=\"span\"\n                                variant=\"body2\"\n                                className={classes.inline}\n                                color=\"textPrimary\"\n                            >\n                                {contents}\n                            </Typography>\n                        </>\n                    }\n                />\n            </ListItem>\n        </>\n    )\n}\n\nexport default Message;"]},"metadata":{},"sourceType":"module"}