{"ast":null,"code":"var _jsxFileName = \"C:\\\\USERS\\\\Tommi Vainio\\\\desktop\\\\chatApp\\\\my-app\\\\src\\\\views\\\\home.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { Grid } from '@material-ui/core';\nimport { useContext, useEffect, useState } from 'react';\nimport Thread from '../components/thread';\nimport { MediaContext } from '../contexts/mediaContext';\nimport { useUsers, useChats } from '../hooks/apiHooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = ({\n  history\n}) => {\n  _s();\n\n  const {\n    user,\n    setUser\n  } = useContext(MediaContext);\n  const {\n    getIsLoggedIn\n  } = useUsers();\n  const {\n    getThreadIds\n  } = useChats();\n  const [threads, setThreads] = useState([]);\n  const [threadOpen, setThreadOpen] = useState(false);\n  const [threadId, setThreadId] = useState(0);\n  useEffect(() => {\n    (async () => {\n      try {\n        console.log('USER: ', user);\n        const isLoggedIn = await getIsLoggedIn();\n\n        if (!isLoggedIn.success) {\n          history.push('/login');\n        }\n\n        setUser(isLoggedIn.id);\n        console.log('Logged user: ', user, isLoggedIn.id);\n      } catch (e) {\n        console.log(e.message);\n      }\n    })();\n  }, []);\n  useEffect(() => {\n    (async () => {\n      try {\n        const chatThreads = await getThreadIds(user);\n        setThreads(chatThreads);\n        console.log('THREADS: ', chatThreads, threads);\n      } catch (e) {\n        console.log(e.message);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: threadOpen ? /*#__PURE__*/_jsxDEV(Thread, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Home, \"BrsCKFEFqpP5PlXhKt1YsVoNUwo=\", false, function () {\n  return [useUsers, useChats];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/USERS/Tommi Vainio/desktop/chatApp/my-app/src/views/home.tsx"],"names":["Grid","useContext","useEffect","useState","Thread","MediaContext","useUsers","useChats","Home","history","user","setUser","getIsLoggedIn","getThreadIds","threads","setThreads","threadOpen","setThreadOpen","threadId","setThreadId","console","log","isLoggedIn","success","push","id","e","message","chatThreads"],"mappings":";;;AAAA;AACA,SAASA,IAAT,QAA2B,mBAA3B;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,mBAAnC;;;;AAQA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2B;AAAA;;AACpC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBV,UAAU,CAACI,YAAD,CAApC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAoBN,QAAQ,EAAlC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAmBN,QAAQ,EAAjC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,CAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,UAAI;AACAkB,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBX,IAAtB;AACA,cAAMY,UAAU,GAAG,MAAMV,aAAa,EAAtC;;AACA,YAAI,CAACU,UAAU,CAACC,OAAhB,EAAyB;AACrBd,UAAAA,OAAO,CAACe,IAAR,CAAa,QAAb;AACH;;AACDb,QAAAA,OAAO,CAACW,UAAU,CAACG,EAAZ,CAAP;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BX,IAA7B,EAAmCY,UAAU,CAACG,EAA9C;AACH,OARD,CAQE,OAAOC,CAAP,EAAU;AACRN,QAAAA,OAAO,CAACC,GAAR,CAAYK,CAAC,CAACC,OAAd;AACH;AACJ,KAZD;AAaH,GAdQ,EAcN,EAdM,CAAT;AAgBAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,UAAI;AACA,cAAM0B,WAAW,GAAG,MAAMf,YAAY,CAACH,IAAD,CAAtC;AACAK,QAAAA,UAAU,CAACa,WAAD,CAAV;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBO,WAAzB,EAAsCd,OAAtC;AACH,OAJD,CAIE,OAAOY,CAAP,EAAU;AACRN,QAAAA,OAAO,CAACC,GAAR,CAAYK,CAAC,CAACC,OAAd;AACH;AACJ,KARD;AASH,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACI;AAAA,cACKX,UAAU,gBACP,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADO,gBAGP,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,QAAxB;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAJR,mBADJ;AAYH,CAhDD;;GAAMR,I;UAEwBF,Q,EACDC,Q;;;KAHvBC,I;AAkDN,eAAeA,IAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Grid, List } from '@material-ui/core';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport Thread from '../components/thread';\r\nimport ThreadButton from '../components/threadButton';\r\nimport { MediaContext } from '../contexts/mediaContext';\r\nimport { useUsers, useChats } from '../hooks/apiHooks';\r\n\r\ninterface propType {\r\n    history: {\r\n        push: Function,\r\n    }\r\n}\r\n\r\nconst Home = ({ history }: propType) => {\r\n    const { user, setUser } = useContext(MediaContext);\r\n    const { getIsLoggedIn } = useUsers();\r\n    const { getThreadIds } = useChats();\r\n    const [threads, setThreads] = useState([])\r\n    const [threadOpen, setThreadOpen] = useState(false)\r\n    const [threadId, setThreadId] = useState(0)\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                console.log('USER: ', user)\r\n                const isLoggedIn = await getIsLoggedIn();\r\n                if (!isLoggedIn.success) {\r\n                    history.push('/login');\r\n                }\r\n                setUser(isLoggedIn.id)\r\n                console.log('Logged user: ', user, isLoggedIn.id);\r\n            } catch (e) {\r\n                console.log(e.message);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const chatThreads = await getThreadIds(user)\r\n                setThreads(chatThreads)\r\n                console.log('THREADS: ', chatThreads, threads)\r\n            } catch (e) {\r\n                console.log(e.message);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {threadOpen ? (\r\n                <Thread />\r\n            ) : (\r\n                <Grid container justify=\"center\">\r\n                    <h1>Welcome</h1>\r\n                </Grid>\r\n            )}\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}