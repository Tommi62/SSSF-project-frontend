{"ast":null,"code":"var _jsxFileName = \"/Users/tommivainio/Desktop/chatApp/my-app/src/components/thread.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, List, TextField } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\nimport { useContext, useEffect, useState } from 'react';\nimport { MediaContext } from '../contexts/mediaContext';\nimport { useChats } from '../hooks/apiHooks';\nimport Message from '../components/message';\nimport useWindowDimensions from '../hooks/windowDimensionsHook';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Thread = ({\n  id\n}) => {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [update, setUpdate] = useState(false);\n  const {\n    user\n  } = useContext(MediaContext);\n  const {\n    postMessage,\n    getMessages\n  } = useChats();\n  const {\n    height\n  } = useWindowDimensions();\n  const heightCorrected = height - 64;\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const threadMessages = await getMessages(id);\n        console.log('MSGS: ', threadMessages[threadMessages.length - 1].id);\n        setMessages(threadMessages);\n      } catch (e) {\n        console.log(e.message);\n      }\n    })();\n  }, []);\n  useEffect(() => {\n    (async () => {\n      try {\n        scrollToBottom();\n        console.log('SCROLLED');\n      } catch (e) {\n        console.log(e.message);\n      }\n    })();\n  }, [update]);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const tzoffset = new Date().getTimezoneOffset() * 60000;\n    const localISOTime = new Date(Date.now() - tzoffset).toISOString().slice(0, -1);\n    console.log('TIMEST: ', localISOTime);\n    const messageObject = JSON.stringify({\n      contents: message,\n      timestamp: localISOTime,\n      user_id: user,\n      thread_id: id\n    });\n    const success = await postMessage(messageObject);\n    console.log('SUCCESS: ', success);\n    setMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      direction: \"column\",\n      style: {\n        height: heightCorrected\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        justify: \"center\",\n        style: {\n          padding: '2rem 6rem 1.5rem 6rem',\n          backgroundColor: '#E69A8DFF',\n          height: '90%',\n          overflowX: 'hidden',\n          overflowY: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: [messages.map(item => /*#__PURE__*/_jsxDEV(Message, {\n            user_id: item.user_id,\n            contents: item.contents,\n            timestamp: item.timestamp,\n            update: update,\n            setUpdate: setUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        justify: \"center\",\n        direction: \"column\",\n        style: {\n          height: '10%',\n          backgroundColor: 'lightgray'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              value: message,\n              variant: \"outlined\",\n              label: \"Say something!\",\n              onInput: event => setMessage(event.target.value),\n              style: {\n                width: '70%',\n                backgroundColor: 'white',\n                borderRadius: '0.5rem'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              type: \"submit\",\n              color: \"default\",\n              style: {\n                marginTop: '0.15rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {\n                style: {\n                  fill: '#5F4B8BFF'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Thread, \"zEunGqJ5g0Z8eu9+uUbUPOaU9gY=\", false, function () {\n  return [useChats, useWindowDimensions];\n});\n\n_c = Thread;\nexport default Thread;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thread\");","map":{"version":3,"sources":["/Users/tommivainio/Desktop/chatApp/my-app/src/components/thread.tsx"],"names":["Grid","List","TextField","SendIcon","IconButton","useContext","useEffect","useState","MediaContext","useChats","Message","useWindowDimensions","useRef","Thread","id","message","setMessage","messages","setMessages","update","setUpdate","user","postMessage","getMessages","height","heightCorrected","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","threadMessages","console","log","length","e","handleSubmit","event","preventDefault","tzoffset","Date","getTimezoneOffset","localISOTime","now","toISOString","slice","messageObject","JSON","stringify","contents","timestamp","user_id","thread_id","success","padding","backgroundColor","overflowX","overflowY","map","item","target","value","width","borderRadius","marginTop","fill"],"mappings":"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","sourcesContent":["import { Grid, List, TextField } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { FormEvent, useContext, useEffect, useState } from 'react';\r\nimport { MediaContext } from '../contexts/mediaContext';\r\nimport { useChats } from '../hooks/apiHooks';\r\nimport Message from '../components/message';\r\nimport useWindowDimensions from '../hooks/windowDimensionsHook';\r\nimport { useRef } from 'react';\r\n\r\ninterface propType {\r\n    id: number\r\n}\r\n\r\ninterface messagesArray {\r\n    contents: string,\r\n    timestamp: Date,\r\n    user_id: number\r\n}\r\n\r\n\r\nconst Thread = ({ id }: propType) => {\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState<messagesArray[]>([]);\r\n    const [update, setUpdate] = useState(false);\r\n    const { user } = useContext(MediaContext);\r\n    const { postMessage, getMessages } = useChats();\r\n    const { height } = useWindowDimensions();\r\n    const heightCorrected = height - 64;\r\n    const messagesEndRef = useRef<null | HTMLDivElement>(null)\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const threadMessages = await getMessages(id);\r\n                console.log('MSGS: ', threadMessages[threadMessages.length - 1].id)\r\n                setMessages(threadMessages);\r\n            } catch (e) {\r\n                console.log(e.message);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                scrollToBottom();\r\n                console.log('SCROLLED');\r\n            } catch (e) {\r\n                console.log(e.message);\r\n            }\r\n        })();\r\n    }, [update]);\r\n\r\n    const handleSubmit = async (event: FormEvent) => {\r\n        event.preventDefault();\r\n        const tzoffset = (new Date()).getTimezoneOffset() * 60000;\r\n        const localISOTime = (new Date(Date.now() - tzoffset)).toISOString().slice(0, -1);\r\n        console.log('TIMEST: ', localISOTime)\r\n        const messageObject = JSON.stringify({\r\n            contents: message,\r\n            timestamp: localISOTime,\r\n            user_id: user,\r\n            thread_id: id,\r\n\r\n        });\r\n        const success = await postMessage(messageObject)\r\n        console.log('SUCCESS: ', success)\r\n        setMessage('');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container justify=\"center\" direction=\"column\" style={{ height: heightCorrected }}>\r\n                <Grid item justify=\"center\" style=\r\n                    {{\r\n                        padding: '2rem 6rem 1.5rem 6rem',\r\n                        backgroundColor: '#E69A8DFF',\r\n                        height: '90%',\r\n                        overflowX: 'hidden',\r\n                        overflowY: 'auto'\r\n                    }}>\r\n                    <List>\r\n                        {messages.map((item) => (\r\n                            <Message user_id={item.user_id} contents={item.contents} timestamp={item.timestamp} update={update} setUpdate={setUpdate} />\r\n                        ))}{' '}\r\n                        <div ref={messagesEndRef} />\r\n                    </List>\r\n                </Grid>\r\n                <Grid item container justify=\"center\" direction=\"column\" style={{ height: '10%', backgroundColor: 'lightgray' }}>\r\n                    <Grid item>\r\n                        <form\r\n                            onSubmit={handleSubmit}\r\n                        >\r\n\r\n                            <TextField\r\n                                value={message}\r\n                                variant=\"outlined\"\r\n                                label=\"Say something!\"\r\n                                onInput={(event) => setMessage((event.target as HTMLInputElement).value)}\r\n                                style={{ width: '70%', backgroundColor: 'white', borderRadius: '0.5rem' }}\r\n                            />\r\n                            <IconButton\r\n                                type=\"submit\"\r\n                                color=\"default\"\r\n                                style={{ marginTop: '0.15rem' }}\r\n                            >\r\n                                <SendIcon style={{ fill: '#5F4B8BFF' }} />\r\n                            </IconButton>\r\n\r\n                        </form>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Thread;"]},"metadata":{},"sourceType":"module"}