{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tommivainio/Projektit/chatApp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/tommivainio/Projektit/chatApp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/tommivainio/Projektit/chatApp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable react-hooks/exhaustive-deps */import{Grid,ListItem,ListItemText,makeStyles,Typography}from\"@material-ui/core\";import{useContext,useState}from\"react\";import{useEffect}from\"react\";import{WebsocketContext}from\"../contexts/websocketContext\";import{useChats,useUsers}from'../hooks/apiHooks';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles(function(){return{text:{color:'white',width:'100%',padding:'1rem'},inline:{display:'inline'},lastMessage:{display:'inline',fontSize:'0.7rem'},timestamp:{fontSize:'0.5rem',marginLeft:'2rem'},button:{width:'100%',maxWidth:'30vw',padding:'0 0.7rem',borderBottom:'1px solid #5F4B8BFF',cursor:'pointer','&:hover':{background:\"#f0f0f0\"}}};});var ThreadButton=function ThreadButton(_ref){var id=_ref.id,setThreadOpen=_ref.setThreadOpen,setThreadId=_ref.setThreadId,threadOpen=_ref.threadOpen,threadId=_ref.threadId,updateThreadButtonInfos=_ref.updateThreadButtonInfos;var _useChats=useChats(),getThreadName=_useChats.getThreadName,getLastMessage=_useChats.getLastMessage;var _useUsers=useUsers(),getUsernameById=_useUsers.getUsernameById;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState({username:'',contents:'',timestamp:''}),_useState4=_slicedToArray(_useState3,2),lastMessage=_useState4[0],setLastMessage=_useState4[1];var _useContext=useContext(WebsocketContext),websocket=_useContext.websocket;var classes=useStyles();useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var threadName,lastMessageData,username,d,hours,minutes,formatedTime,_lastMessageObject,noLastMessageObject;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return getThreadName(id);case 3:threadName=_context.sent;setName(threadName);_context.next=7;return getLastMessage(id);case 7:lastMessageData=_context.sent;if(!(lastMessageData.length!==0)){_context.next=22;break;}_context.next=11;return getUsernameById(lastMessageData[0].user_id);case 11:username=_context.sent;d=new Date(lastMessageData[0].timestamp);hours=d.getHours().toString();minutes=d.getMinutes().toString();if(d.getHours()<10){hours='0'+hours;}if(d.getMinutes()<10){minutes='0'+minutes;}formatedTime=hours+'.'+minutes;_lastMessageObject={username:username.username+':',contents:lastMessageData[0].contents,timestamp:formatedTime};setLastMessage(_lastMessageObject);_context.next=24;break;case 22:noLastMessageObject={username:'No messages yet.',contents:'',timestamp:''};setLastMessage(noLastMessageObject);case 24:_context.next=29;break;case 26:_context.prev=26;_context.t0=_context[\"catch\"](0);console.log(_context.t0.message);case 29:case\"end\":return _context.stop();}}},_callee,null,[[0,26]]);}))();},[updateThreadButtonInfos]);var openThread=function openThread(){if(!threadOpen){setThreadOpen(true);setThreadId(id);}else{if(threadId===id){setThreadOpen(false);setThreadId(0);}else{setThreadId(id);}if(websocket!==undefined){websocket.close();}}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(ListItem,{onClick:openThread,className:classes.button,children:/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Grid,{container:true,justify:\"space-between\",children:[/*#__PURE__*/_jsx(Typography,{component:\"h1\",children:name}),/*#__PURE__*/_jsx(Typography,{component:\"span\",variant:\"subtitle1\",className:classes.timestamp,children:lastMessage.timestamp})]})}),secondary:/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Typography,{component:\"span\",variant:\"body2\",className:classes.lastMessage,children:[lastMessage.username,\" \",lastMessage.contents]})})})})});};export default ThreadButton;","map":{"version":3,"sources":["/Users/tommivainio/Projektit/chatApp/my-app/src/components/threadButton.tsx"],"names":["Grid","ListItem","ListItemText","makeStyles","Typography","useContext","useState","useEffect","WebsocketContext","useChats","useUsers","useStyles","text","color","width","padding","inline","display","lastMessage","fontSize","timestamp","marginLeft","button","maxWidth","borderBottom","cursor","background","ThreadButton","id","setThreadOpen","setThreadId","threadOpen","threadId","updateThreadButtonInfos","getThreadName","getLastMessage","getUsernameById","name","setName","username","contents","setLastMessage","websocket","classes","threadName","lastMessageData","length","user_id","d","Date","hours","getHours","toString","minutes","getMinutes","formatedTime","lastMessageObject","noLastMessageObject","console","log","message","openThread","undefined","close"],"mappings":"meAAA,gDACA,OAAiBA,IAAjB,CAAuBC,QAAvB,CAAiCC,YAAjC,CAA+CC,UAA/C,CAA2DC,UAA3D,KAA6E,mBAA7E,CACA,OAASC,UAAT,CAAqBC,QAArB,KAAqC,OAArC,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,OAASC,gBAAT,KAAiC,8BAAjC,CACA,OAASC,QAAT,CAAmBC,QAAnB,KAAmC,mBAAnC,C,6IAiBA,GAAMC,CAAAA,SAAS,CAAGR,UAAU,CAAC,iBAAO,CAChCS,IAAI,CAAE,CACFC,KAAK,CAAE,OADL,CAEFC,KAAK,CAAE,MAFL,CAGFC,OAAO,CAAE,MAHP,CAD0B,CAMhCC,MAAM,CAAE,CACJC,OAAO,CAAE,QADL,CANwB,CAShCC,WAAW,CAAE,CACTD,OAAO,CAAE,QADA,CAETE,QAAQ,CAAE,QAFD,CATmB,CAahCC,SAAS,CAAE,CACPD,QAAQ,CAAE,QADH,CAEPE,UAAU,CAAE,MAFL,CAbqB,CAiBhCC,MAAM,CAAE,CACJR,KAAK,CAAE,MADH,CAEJS,QAAQ,CAAE,MAFN,CAGJR,OAAO,CAAE,UAHL,CAIJS,YAAY,CAAE,qBAJV,CAKJC,MAAM,CAAE,SALJ,CAMJ,UAAW,CACPC,UAAU,CAAE,SADL,CANP,CAjBwB,CAAP,EAAD,CAA5B,CA6BA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAiG,IAA9FC,CAAAA,EAA8F,MAA9FA,EAA8F,CAA1FC,aAA0F,MAA1FA,aAA0F,CAA3EC,WAA2E,MAA3EA,WAA2E,CAA9DC,UAA8D,MAA9DA,UAA8D,CAAlDC,QAAkD,MAAlDA,QAAkD,CAAxCC,uBAAwC,MAAxCA,uBAAwC,CAClH,cAA0CxB,QAAQ,EAAlD,CAAQyB,aAAR,WAAQA,aAAR,CAAuBC,cAAvB,WAAuBA,cAAvB,CACA,cAA4BzB,QAAQ,EAApC,CAAQ0B,eAAR,WAAQA,eAAR,CACA,cAAwB9B,QAAQ,CAAC,EAAD,CAAhC,wCAAO+B,IAAP,eAAaC,OAAb,eACA,eAAsChC,QAAQ,CAAoB,CAC9DiC,QAAQ,CAAE,EADoD,CAE9DC,QAAQ,CAAE,EAFoD,CAG9DpB,SAAS,CAAE,EAHmD,CAApB,CAA9C,yCAAOF,WAAP,eAAoBuB,cAApB,eAKA,gBAAsBpC,UAAU,CAACG,gBAAD,CAAhC,CAAQkC,SAAR,aAAQA,SAAR,CACA,GAAMC,CAAAA,OAAO,CAAGhC,SAAS,EAAzB,CAEAJ,SAAS,CAAC,UAAM,CACZ,wDAAC,qRAEgC2B,CAAAA,aAAa,CAACN,EAAD,CAF7C,QAEagB,UAFb,eAGON,OAAO,CAACM,UAAD,CAAP,CAHP,sBAIqCT,CAAAA,cAAc,CAACP,EAAD,CAJnD,QAIaiB,eAJb,oBAKWA,eAAe,CAACC,MAAhB,GAA2B,CALtC,kDAMkCV,CAAAA,eAAe,CAACS,eAAe,CAAC,CAAD,CAAf,CAAmBE,OAApB,CANjD,SAMiBR,QANjB,eAQiBS,CARjB,CAQqB,GAAIC,CAAAA,IAAJ,CAASJ,eAAe,CAAC,CAAD,CAAf,CAAmBzB,SAA5B,CARrB,CASe8B,KATf,CASuBF,CAAC,CAACG,QAAF,GAAaC,QAAb,EATvB,CAUeC,OAVf,CAUyBL,CAAC,CAACM,UAAF,GAAeF,QAAf,EAVzB,CAWW,GAAIJ,CAAC,CAACG,QAAF,GAAe,EAAnB,CAAuB,CACnBD,KAAK,CAAG,IAAMA,KAAd,CACH,CACD,GAAIF,CAAC,CAACM,UAAF,GAAiB,EAArB,CAAyB,CACrBD,OAAO,CAAG,IAAMA,OAAhB,CACH,CACKE,YAjBjB,CAiBgCL,KAAK,CAAG,GAAR,CAAcG,OAjB9C,CAmBiBG,kBAnBjB,CAmBqC,CACtBjB,QAAQ,CAAEA,QAAQ,CAACA,QAAT,CAAoB,GADR,CAEtBC,QAAQ,CAAEK,eAAe,CAAC,CAAD,CAAf,CAAmBL,QAFP,CAGtBpB,SAAS,CAAEmC,YAHW,CAnBrC,CAwBWd,cAAc,CAACe,kBAAD,CAAd,CAxBX,+BA0BiBC,mBA1BjB,CA0BuC,CACxBlB,QAAQ,CAAE,kBADc,CAExBC,QAAQ,CAAE,EAFc,CAGxBpB,SAAS,CAAE,EAHa,CA1BvC,CA+BWqB,cAAc,CAACgB,mBAAD,CAAd,CA/BX,yFAkCOC,OAAO,CAACC,GAAR,CAAY,YAAEC,OAAd,EAlCP,qEAAD,KAqCH,CAtCQ,CAsCN,CAAC3B,uBAAD,CAtCM,CAAT,CAwCA,GAAM4B,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrB,GAAI,CAAC9B,UAAL,CAAiB,CACbF,aAAa,CAAC,IAAD,CAAb,CACAC,WAAW,CAACF,EAAD,CAAX,CACH,CAHD,IAGO,CACH,GAAII,QAAQ,GAAKJ,EAAjB,CAAqB,CACjBC,aAAa,CAAC,KAAD,CAAb,CACAC,WAAW,CAAC,CAAD,CAAX,CACH,CAHD,IAGO,CACHA,WAAW,CAACF,EAAD,CAAX,CACH,CACD,GAAIc,SAAS,GAAKoB,SAAlB,CAA6B,CACzBpB,SAAS,CAACqB,KAAV,GACH,CACJ,CACJ,CAfD,CAiBA,mBACI,sCACI,KAAC,QAAD,EAAU,OAAO,CAAEF,UAAnB,CAA+B,SAAS,CAAElB,OAAO,CAACrB,MAAlD,uBACI,KAAC,YAAD,EACI,OAAO,cACH,sCACI,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAC,eAAxB,wBACI,KAAC,UAAD,EACI,SAAS,CAAC,IADd,UAGKe,IAHL,EADJ,cAMI,KAAC,UAAD,EACI,SAAS,CAAC,MADd,CAEI,OAAO,CAAC,WAFZ,CAGI,SAAS,CAAEM,OAAO,CAACvB,SAHvB,UAKKF,WAAW,CAACE,SALjB,EANJ,GADJ,EAFR,CAmBI,SAAS,cACL,sCACI,MAAC,UAAD,EACI,SAAS,CAAC,MADd,CAEI,OAAO,CAAC,OAFZ,CAGI,SAAS,CAAEuB,OAAO,CAACzB,WAHvB,WAKKA,WAAW,CAACqB,QALjB,KAK4BrB,WAAW,CAACsB,QALxC,GADJ,EApBR,EADJ,EADJ,EADJ,CAqCH,CA1GD,CA4GA,cAAeb,CAAAA,YAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Button, Grid, ListItem, ListItemText, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { WebsocketContext } from \"../contexts/websocketContext\";\r\nimport { useChats, useUsers } from '../hooks/apiHooks';\r\n\r\ninterface propType {\r\n    id: number,\r\n    setThreadOpen: Function,\r\n    setThreadId: Function,\r\n    threadOpen: Boolean,\r\n    threadId: number,\r\n    updateThreadButtonInfos: number,\r\n}\r\n\r\ninterface lastMessageObject {\r\n    username: string,\r\n    contents: string,\r\n    timestamp: any,\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    text: {\r\n        color: 'white',\r\n        width: '100%',\r\n        padding: '1rem',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    lastMessage: {\r\n        display: 'inline',\r\n        fontSize: '0.7rem'\r\n    },\r\n    timestamp: {\r\n        fontSize: '0.5rem',\r\n        marginLeft: '2rem'\r\n    },\r\n    button: {\r\n        width: '100%',\r\n        maxWidth: '30vw',\r\n        padding: '0 0.7rem',\r\n        borderBottom: '1px solid #5F4B8BFF',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            background: \"#f0f0f0\",\r\n        },\r\n    }\r\n}));\r\n\r\nconst ThreadButton = ({ id, setThreadOpen, setThreadId, threadOpen, threadId, updateThreadButtonInfos }: propType) => {\r\n    const { getThreadName, getLastMessage } = useChats();\r\n    const { getUsernameById } = useUsers();\r\n    const [name, setName] = useState('');\r\n    const [lastMessage, setLastMessage] = useState<lastMessageObject>({\r\n        username: '',\r\n        contents: '',\r\n        timestamp: ''\r\n    });\r\n    const { websocket } = useContext(WebsocketContext);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const threadName = await getThreadName(id)\r\n                setName(threadName)\r\n                const lastMessageData = await getLastMessage(id)\r\n                if (lastMessageData.length !== 0) {\r\n                    const username = await getUsernameById(lastMessageData[0].user_id);\r\n\r\n                    const d = new Date(lastMessageData[0].timestamp);\r\n                    let hours = d.getHours().toString();\r\n                    let minutes = d.getMinutes().toString();\r\n                    if (d.getHours() < 10) {\r\n                        hours = '0' + hours;\r\n                    }\r\n                    if (d.getMinutes() < 10) {\r\n                        minutes = '0' + minutes;\r\n                    }\r\n                    const formatedTime = hours + '.' + minutes;\r\n\r\n                    const lastMessageObject = {\r\n                        username: username.username + ':',\r\n                        contents: lastMessageData[0].contents,\r\n                        timestamp: formatedTime,\r\n                    }\r\n                    setLastMessage(lastMessageObject);\r\n                } else {\r\n                    const noLastMessageObject = {\r\n                        username: 'No messages yet.',\r\n                        contents: '',\r\n                        timestamp: '',\r\n                    }\r\n                    setLastMessage(noLastMessageObject);\r\n                }\r\n            } catch (e) {\r\n                console.log(e.message);\r\n            }\r\n        })();\r\n    }, [updateThreadButtonInfos]);\r\n\r\n    const openThread = () => {\r\n        if (!threadOpen) {\r\n            setThreadOpen(true)\r\n            setThreadId(id)\r\n        } else {\r\n            if (threadId === id) {\r\n                setThreadOpen(false)\r\n                setThreadId(0)\r\n            } else {\r\n                setThreadId(id)\r\n            }\r\n            if (websocket !== undefined) {\r\n                websocket.close();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ListItem onClick={openThread} className={classes.button} >\r\n                <ListItemText\r\n                    primary={\r\n                        <>\r\n                            <Grid container justify=\"space-between\">\r\n                                <Typography\r\n                                    component=\"h1\"\r\n                                >\r\n                                    {name}\r\n                                </Typography>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"subtitle1\"\r\n                                    className={classes.timestamp}\r\n                                >\r\n                                    {lastMessage.timestamp}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </>\r\n                    }\r\n                    secondary={\r\n                        <>\r\n                            <Typography\r\n                                component=\"span\"\r\n                                variant=\"body2\"\r\n                                className={classes.lastMessage}\r\n                            >\r\n                                {lastMessage.username} {lastMessage.contents}\r\n                            </Typography>\r\n                        </>\r\n                    }\r\n                />\r\n            </ListItem>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ThreadButton"]},"metadata":{},"sourceType":"module"}