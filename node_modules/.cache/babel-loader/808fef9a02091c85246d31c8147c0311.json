{"ast":null,"code":"var _jsxFileName = \"/Users/tommivainio/Desktop/chatApp/my-app/src/components/thread.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid, List, TextField } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\nimport { useContext, useEffect, useState } from 'react';\nimport { MediaContext } from '../contexts/mediaContext';\nimport { useChats, useUsers } from '../hooks/apiHooks';\nimport Message from '../components/message';\nimport useWindowDimensions from '../hooks/windowDimensionsHook';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Thread = ({\n  messages,\n  id,\n  websocket\n}) => {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messageId, setMessageId] = useState(0);\n  const [showButton, setShowButton] = useState(false);\n  const [usernames, setUsernames] = useState([]);\n  const [moreMessages, setMoreMessages] = useState([]);\n  const [loadMore, setLoadMore] = useState(false);\n  const [messageScroll, setMessageScroll] = useState(false);\n  const {\n    user\n  } = useContext(MediaContext);\n  const {\n    postMessage,\n    getUserIds,\n    getAllMessages\n  } = useChats();\n  const {\n    getUsernameById\n  } = useUsers();\n  const {\n    height\n  } = useWindowDimensions();\n  const heightCorrected = height - 64;\n  const messagesEndRef = useRef(null);\n  const messagesEndRef2 = useRef(null);\n\n  const scrollToBottom = number => {\n    if (number === 1) {\n      var _messagesEndRef$curre;\n\n      (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    } else {\n      var _messagesEndRef2$curr;\n\n      console.log('SCROLL');\n      (_messagesEndRef2$curr = messagesEndRef2.current) === null || _messagesEndRef2$curr === void 0 ? void 0 : _messagesEndRef2$curr.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        if (messageScroll) {\n          scrollToBottom(2);\n        } else {\n          scrollToBottom(1);\n        }\n      } catch (e) {\n        console.log(e.message);\n      }\n    })();\n  }, [messageId]);\n  useEffect(() => {\n    (async () => {\n      try {\n        if (messages.length === 50 && !loadMore) {\n          setShowButton(true);\n        } else {\n          setShowButton(false);\n        }\n      } catch (e) {\n        console.log(e.message);\n      }\n    })();\n  }, [messages]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const userIds = await getUserIds(id);\n        let usernameArray = [];\n\n        for (let i = 0; i < userIds.length; i++) {\n          const user = await getUsernameById(userIds[i].user_id);\n          const userObject = {\n            user_id: userIds[i].user_id,\n            username: user.username\n          };\n          usernameArray.push(userObject);\n        }\n\n        setUsernames(usernameArray);\n      } catch (e) {\n        console.log(e.message);\n      }\n    })();\n  }, []);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const tzoffset = new Date().getTimezoneOffset() * 60000;\n    const localISOTime = new Date(Date.now() - tzoffset).toISOString().slice(0, -1);\n    console.log('TIMEST: ', localISOTime);\n    const messageObject = JSON.stringify({\n      contents: message,\n      timestamp: localISOTime,\n      user_id: user,\n      thread_id: id\n    });\n    const success = await postMessage(messageObject);\n    console.log('SUCCESS: ', success);\n    const webSocketUpdate = {\n      type: 'message',\n      thread_id: id,\n      timestamp: Date.now()\n    };\n\n    if (websocket !== undefined) {\n      websocket.send(JSON.stringify(webSocketUpdate));\n    }\n\n    setMessage('');\n  };\n\n  const loadAllMessages = async () => {\n    const allMessages = await getAllMessages(id);\n    console.log('ALL ', allMessages);\n    allMessages.splice(allMessages.length - 50, 50);\n    console.log('ALL11 ', allMessages);\n    setMoreMessages(allMessages);\n    setLoadMore(true);\n    setShowButton(false);\n    setMessageScroll(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      direction: \"column\",\n      style: {\n        height: heightCorrected\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        justify: \"center\",\n        style: {\n          padding: '2rem 6rem 1.5rem 6rem',\n          backgroundColor: '#E69A8DFF',\n          height: '90%',\n          overflowX: 'hidden',\n          overflowY: 'auto'\n        },\n        children: [loadMore && /*#__PURE__*/_jsxDEV(List, {\n          children: [moreMessages.map(item => /*#__PURE__*/_jsxDEV(Message, {\n            message_id: item.id,\n            user_id: item.user_id,\n            contents: item.contents,\n            timestamp: item.timestamp,\n            setMessageId: setMessageId,\n            usernames: usernames\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 33\n          }, this)), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this), showButton && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: loadAllMessages,\n          children: \"Load all messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this), usernames.length > 0 && /*#__PURE__*/_jsxDEV(List, {\n          children: [messages.map(item => /*#__PURE__*/_jsxDEV(Message, {\n            message_id: item.id,\n            user_id: item.user_id,\n            contents: item.contents,\n            timestamp: item.timestamp,\n            setMessageId: setMessageId,\n            usernames: usernames\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 33\n          }, this)), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        justify: \"center\",\n        direction: \"column\",\n        style: {\n          height: '10%',\n          backgroundColor: 'lightgray'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              value: message,\n              variant: \"outlined\",\n              label: \"Say something!\",\n              onInput: event => setMessage(event.target.value),\n              style: {\n                width: '70%',\n                backgroundColor: 'white',\n                borderRadius: '0.5rem'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              type: \"submit\",\n              color: \"default\",\n              style: {\n                marginTop: '0.15rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {\n                style: {\n                  fill: '#5F4B8BFF'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Thread, \"P/UUjZCO7f5nWP7gYf+tBRTjDPs=\", false, function () {\n  return [useChats, useUsers, useWindowDimensions];\n});\n\n_c = Thread;\nexport default Thread;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thread\");","map":{"version":3,"sources":["/Users/tommivainio/Desktop/chatApp/my-app/src/components/thread.tsx"],"names":["Button","Grid","List","TextField","SendIcon","IconButton","useContext","useEffect","useState","MediaContext","useChats","useUsers","Message","useWindowDimensions","useRef","Thread","messages","id","websocket","message","setMessage","messageId","setMessageId","showButton","setShowButton","usernames","setUsernames","moreMessages","setMoreMessages","loadMore","setLoadMore","messageScroll","setMessageScroll","user","postMessage","getUserIds","getAllMessages","getUsernameById","height","heightCorrected","messagesEndRef","messagesEndRef2","scrollToBottom","number","current","scrollIntoView","behavior","console","log","e","length","userIds","usernameArray","i","user_id","userObject","username","push","handleSubmit","event","preventDefault","tzoffset","Date","getTimezoneOffset","localISOTime","now","toISOString","slice","messageObject","JSON","stringify","contents","timestamp","thread_id","success","webSocketUpdate","type","undefined","send","loadAllMessages","allMessages","splice","padding","backgroundColor","overflowX","overflowY","map","item","target","value","width","borderRadius","marginTop","fill"],"mappings":"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","sourcesContent":["import { Button, Grid, List, TextField } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { FormEvent, useContext, useEffect, useState } from 'react';\r\nimport { MediaContext } from '../contexts/mediaContext';\r\nimport { useChats, useUsers } from '../hooks/apiHooks';\r\nimport Message from '../components/message';\r\nimport useWindowDimensions from '../hooks/windowDimensionsHook';\r\nimport { useRef } from 'react';\r\n\r\ninterface messagesArray {\r\n    id: number,\r\n    user_id: number,\r\n    contents: string,\r\n    timestamp: Date,\r\n}\r\n\r\ninterface propType {\r\n    messages: messagesArray[],\r\n    id: number,\r\n    websocket: WebSocket | undefined,\r\n}\r\n\r\ninterface usernamesArray {\r\n    user_id: number,\r\n    username: string,\r\n}\r\n\r\n\r\nconst Thread = ({ messages, id, websocket }: propType) => {\r\n    const [message, setMessage] = useState('');\r\n    const [messageId, setMessageId] = useState(0);\r\n    const [showButton, setShowButton] = useState(false);\r\n    const [usernames, setUsernames] = useState<usernamesArray[]>([])\r\n    const [moreMessages, setMoreMessages] = useState<messagesArray[]>([])\r\n    const [loadMore, setLoadMore] = useState(false);\r\n    const [messageScroll, setMessageScroll] = useState(false);\r\n    const { user } = useContext(MediaContext);\r\n    const { postMessage, getUserIds, getAllMessages } = useChats();\r\n    const { getUsernameById } = useUsers();\r\n    const { height } = useWindowDimensions();\r\n    const heightCorrected = height - 64;\r\n    const messagesEndRef = useRef<null | HTMLDivElement>(null)\r\n    const messagesEndRef2 = useRef<null | HTMLDivElement>(null)\r\n\r\n    const scrollToBottom = (number: number) => {\r\n        if (number === 1) {\r\n            messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n        } else {\r\n            console.log('SCROLL')\r\n            messagesEndRef2.current?.scrollIntoView({ behavior: \"smooth\" })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                if (messageScroll) {\r\n                    scrollToBottom(2);\r\n                } else {\r\n                    scrollToBottom(1);\r\n                }\r\n            } catch (e) {\r\n                console.log(e.message);\r\n            }\r\n        })();\r\n    }, [messageId]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                if (messages.length === 50 && !loadMore) {\r\n                    setShowButton(true);\r\n                } else {\r\n                    setShowButton(false);\r\n                }\r\n            } catch (e) {\r\n                console.log(e.message);\r\n            }\r\n        })();\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const userIds = await getUserIds(id);\r\n                let usernameArray: Array<usernamesArray> = [];\r\n                for (let i = 0; i < userIds.length; i++) {\r\n                    const user = await getUsernameById(userIds[i].user_id);\r\n                    const userObject = {\r\n                        user_id: userIds[i].user_id,\r\n                        username: user.username\r\n                    }\r\n                    usernameArray.push(userObject);\r\n                }\r\n                setUsernames(usernameArray)\r\n\r\n            } catch (e) {\r\n                console.log(e.message);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    const handleSubmit = async (event: FormEvent) => {\r\n        event.preventDefault();\r\n        const tzoffset = (new Date()).getTimezoneOffset() * 60000;\r\n        const localISOTime = (new Date(Date.now() - tzoffset)).toISOString().slice(0, -1);\r\n        console.log('TIMEST: ', localISOTime)\r\n        const messageObject = JSON.stringify({\r\n            contents: message,\r\n            timestamp: localISOTime,\r\n            user_id: user,\r\n            thread_id: id,\r\n\r\n        });\r\n        const success = await postMessage(messageObject)\r\n        console.log('SUCCESS: ', success)\r\n        const webSocketUpdate = {\r\n            type: 'message',\r\n            thread_id: id,\r\n            timestamp: Date.now(),\r\n        }\r\n        if (websocket !== undefined) {\r\n            websocket.send(JSON.stringify(webSocketUpdate));\r\n        }\r\n        setMessage('');\r\n    };\r\n\r\n    const loadAllMessages = async () => {\r\n        const allMessages = await getAllMessages(id);\r\n        console.log('ALL ', allMessages);\r\n        allMessages.splice(allMessages.length - 50, 50);\r\n        console.log('ALL11 ', allMessages);\r\n        setMoreMessages(allMessages);\r\n        setLoadMore(true);\r\n        setShowButton(false);\r\n        setMessageScroll(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container justify=\"center\" direction=\"column\" style={{ height: heightCorrected }}>\r\n                <Grid item justify=\"center\" style=\r\n                    {{\r\n                        padding: '2rem 6rem 1.5rem 6rem',\r\n                        backgroundColor: '#E69A8DFF',\r\n                        height: '90%',\r\n                        overflowX: 'hidden',\r\n                        overflowY: 'auto'\r\n                    }}>\r\n                    {loadMore &&\r\n                        <List>\r\n                            {moreMessages.map((item) => (\r\n                                <Message message_id={item.id} user_id={item.user_id} contents={item.contents} timestamp={item.timestamp} setMessageId={setMessageId} usernames={usernames} />\r\n                            ))}{' '}\r\n                            <div ref={messagesEndRef2} />\r\n                        </List>\r\n                    }\r\n                    {showButton &&\r\n                        <Button onClick={loadAllMessages}>Load all messages</Button>\r\n                    }\r\n                    {usernames.length > 0 &&\r\n                        <List>\r\n                            {messages.map((item) => (\r\n                                <Message message_id={item.id} user_id={item.user_id} contents={item.contents} timestamp={item.timestamp} setMessageId={setMessageId} usernames={usernames} />\r\n                            ))}{' '}\r\n                            <div ref={messagesEndRef} />\r\n                        </List>\r\n                    }\r\n                </Grid>\r\n                <Grid item container justify=\"center\" direction=\"column\" style={{ height: '10%', backgroundColor: 'lightgray' }}>\r\n                    <Grid item>\r\n                        <form\r\n                            onSubmit={handleSubmit}\r\n                        >\r\n\r\n                            <TextField\r\n                                value={message}\r\n                                variant=\"outlined\"\r\n                                label=\"Say something!\"\r\n                                onInput={(event) => setMessage((event.target as HTMLInputElement).value)}\r\n                                style={{ width: '70%', backgroundColor: 'white', borderRadius: '0.5rem' }}\r\n                            />\r\n                            <IconButton\r\n                                type=\"submit\"\r\n                                color=\"default\"\r\n                                style={{ marginTop: '0.15rem' }}\r\n                            >\r\n                                <SendIcon style={{ fill: '#5F4B8BFF' }} />\r\n                            </IconButton>\r\n\r\n                        </form>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Thread;"]},"metadata":{},"sourceType":"module"}