{"ast":null,"code":"var _jsxFileName = \"/Users/tommivainio/Desktop/chatApp/my-app/src/components/thread.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, List, TextField } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\nimport { useContext, useEffect, useState } from 'react';\nimport { MediaContext } from '../contexts/mediaContext';\nimport { useChats, useUsers } from '../hooks/apiHooks';\nimport Message from '../components/message';\nimport useWindowDimensions from '../hooks/windowDimensionsHook';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Thread = ({\n  messages,\n  id,\n  websocket\n}) => {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messageId, setMessageId] = useState(0);\n  const [usernames, setUsernames] = useState([]);\n  const {\n    user\n  } = useContext(MediaContext);\n  const {\n    postMessage,\n    getUserIds\n  } = useChats();\n  const {\n    getUsernameById\n  } = useUsers();\n  const {\n    height\n  } = useWindowDimensions();\n  const heightCorrected = height - 64;\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        scrollToBottom();\n      } catch (e) {\n        console.log(e.message);\n      }\n    })();\n  }, [messageId]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const userIds = await getUserIds(id);\n        console.log('USERIDSSSS: ', userIds);\n        let usernameArray = [];\n        userIds.forEach(async item => {\n          console.log('item.userid: ', item.user_id);\n          const user = await getUsernameById(item.user_id);\n          console.log('UUSERNAME: ', user.username);\n          const userObject = {\n            user_id: item.user_id,\n            username: user.username\n          };\n          usernameArray.push(userObject);\n        });\n        setUsernames(usernameArray);\n      } catch (e) {\n        console.log(e.message);\n      }\n    })();\n  }, []);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const tzoffset = new Date().getTimezoneOffset() * 60000;\n    const localISOTime = new Date(Date.now() - tzoffset).toISOString().slice(0, -1);\n    console.log('TIMEST: ', localISOTime);\n    const messageObject = JSON.stringify({\n      contents: message,\n      timestamp: localISOTime,\n      user_id: user,\n      thread_id: id\n    });\n    const success = await postMessage(messageObject);\n    console.log('SUCCESS: ', success);\n    const webSocketUpdate = {\n      type: 'message',\n      thread_id: id,\n      timestamp: Date.now()\n    };\n\n    if (websocket !== undefined) {\n      websocket.send(JSON.stringify(webSocketUpdate));\n    }\n\n    setMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      direction: \"column\",\n      style: {\n        height: heightCorrected\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        justify: \"center\",\n        style: {\n          padding: '2rem 6rem 1.5rem 6rem',\n          backgroundColor: '#E69A8DFF',\n          height: '90%',\n          overflowX: 'hidden',\n          overflowY: 'auto'\n        },\n        children: [\"if (usernames.length !== 0) \", /*#__PURE__*/_jsxDEV(List, {\n          children: [messages.map(item => /*#__PURE__*/_jsxDEV(Message, {\n            message_id: item.id,\n            user_id: item.user_id,\n            contents: item.contents,\n            timestamp: item.timestamp,\n            setMessageId: setMessageId,\n            usernames: usernames\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }, this)), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        justify: \"center\",\n        direction: \"column\",\n        style: {\n          height: '10%',\n          backgroundColor: 'lightgray'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              value: message,\n              variant: \"outlined\",\n              label: \"Say something!\",\n              onInput: event => setMessage(event.target.value),\n              style: {\n                width: '70%',\n                backgroundColor: 'white',\n                borderRadius: '0.5rem'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              type: \"submit\",\n              color: \"default\",\n              style: {\n                marginTop: '0.15rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {\n                style: {\n                  fill: '#5F4B8BFF'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Thread, \"uBue4HdrUpxfPfTFgrM87s3jDNU=\", false, function () {\n  return [useChats, useUsers, useWindowDimensions];\n});\n\n_c = Thread;\nexport default Thread;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thread\");","map":{"version":3,"sources":["/Users/tommivainio/Desktop/chatApp/my-app/src/components/thread.tsx"],"names":["Grid","List","TextField","SendIcon","IconButton","useContext","useEffect","useState","MediaContext","useChats","useUsers","Message","useWindowDimensions","useRef","Thread","messages","id","websocket","message","setMessage","messageId","setMessageId","usernames","setUsernames","user","postMessage","getUserIds","getUsernameById","height","heightCorrected","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","e","console","log","userIds","usernameArray","forEach","item","user_id","username","userObject","push","handleSubmit","event","preventDefault","tzoffset","Date","getTimezoneOffset","localISOTime","now","toISOString","slice","messageObject","JSON","stringify","contents","timestamp","thread_id","success","webSocketUpdate","type","undefined","send","padding","backgroundColor","overflowX","overflowY","map","target","value","width","borderRadius","marginTop","fill"],"mappings":"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","sourcesContent":["import { Grid, List, TextField } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { FormEvent, useContext, useEffect, useState } from 'react';\r\nimport { MediaContext } from '../contexts/mediaContext';\r\nimport { useChats, useUsers } from '../hooks/apiHooks';\r\nimport Message from '../components/message';\r\nimport useWindowDimensions from '../hooks/windowDimensionsHook';\r\nimport { useRef } from 'react';\r\n\r\ninterface messagesArray {\r\n    id: number,\r\n    user_id: number,\r\n    contents: string,\r\n    timestamp: Date,\r\n}\r\n\r\ninterface propType {\r\n    messages: messagesArray[],\r\n    id: number,\r\n    websocket: WebSocket | undefined,\r\n}\r\n\r\ninterface usernamesArray {\r\n    user_id: number,\r\n    username: string,\r\n}\r\n\r\n\r\nconst Thread = ({ messages, id, websocket }: propType) => {\r\n    const [message, setMessage] = useState('');\r\n    const [messageId, setMessageId] = useState(0);\r\n    const [usernames, setUsernames] = useState<usernamesArray[]>([])\r\n    const { user } = useContext(MediaContext);\r\n    const { postMessage, getUserIds } = useChats();\r\n    const { getUsernameById } = useUsers();\r\n    const { height } = useWindowDimensions();\r\n    const heightCorrected = height - 64;\r\n    const messagesEndRef = useRef<null | HTMLDivElement>(null)\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                scrollToBottom();\r\n            } catch (e) {\r\n                console.log(e.message);\r\n            }\r\n        })();\r\n    }, [messageId]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const userIds = await getUserIds(id);\r\n                console.log('USERIDSSSS: ', userIds);\r\n                let usernameArray: Array<usernamesArray> = [];\r\n                userIds.forEach(async (item: { user_id: number }) => {\r\n                    console.log('item.userid: ', item.user_id)\r\n                    const user = await getUsernameById(item.user_id);\r\n                    console.log('UUSERNAME: ', user.username)\r\n                    const userObject = {\r\n                        user_id: item.user_id,\r\n                        username: user.username\r\n                    }\r\n                    usernameArray.push(userObject);\r\n                });\r\n                setUsernames(usernameArray)\r\n\r\n            } catch (e) {\r\n                console.log(e.message);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    const handleSubmit = async (event: FormEvent) => {\r\n        event.preventDefault();\r\n        const tzoffset = (new Date()).getTimezoneOffset() * 60000;\r\n        const localISOTime = (new Date(Date.now() - tzoffset)).toISOString().slice(0, -1);\r\n        console.log('TIMEST: ', localISOTime)\r\n        const messageObject = JSON.stringify({\r\n            contents: message,\r\n            timestamp: localISOTime,\r\n            user_id: user,\r\n            thread_id: id,\r\n\r\n        });\r\n        const success = await postMessage(messageObject)\r\n        console.log('SUCCESS: ', success)\r\n        const webSocketUpdate = {\r\n            type: 'message',\r\n            thread_id: id,\r\n            timestamp: Date.now(),\r\n        }\r\n        if (websocket !== undefined) {\r\n            websocket.send(JSON.stringify(webSocketUpdate));\r\n        }\r\n        setMessage('');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container justify=\"center\" direction=\"column\" style={{ height: heightCorrected }}>\r\n                <Grid item justify=\"center\" style=\r\n                    {{\r\n                        padding: '2rem 6rem 1.5rem 6rem',\r\n                        backgroundColor: '#E69A8DFF',\r\n                        height: '90%',\r\n                        overflowX: 'hidden',\r\n                        overflowY: 'auto'\r\n                    }}>\r\n                    if (usernames.length !== 0) {\r\n                        <List>\r\n                            {messages.map((item) => (\r\n                                <Message message_id={item.id} user_id={item.user_id} contents={item.contents} timestamp={item.timestamp} setMessageId={setMessageId} usernames={usernames} />\r\n                            ))}{' '}\r\n                            <div ref={messagesEndRef} />\r\n                        </List>\r\n                    }\r\n\r\n                </Grid>\r\n                <Grid item container justify=\"center\" direction=\"column\" style={{ height: '10%', backgroundColor: 'lightgray' }}>\r\n                    <Grid item>\r\n                        <form\r\n                            onSubmit={handleSubmit}\r\n                        >\r\n\r\n                            <TextField\r\n                                value={message}\r\n                                variant=\"outlined\"\r\n                                label=\"Say something!\"\r\n                                onInput={(event) => setMessage((event.target as HTMLInputElement).value)}\r\n                                style={{ width: '70%', backgroundColor: 'white', borderRadius: '0.5rem' }}\r\n                            />\r\n                            <IconButton\r\n                                type=\"submit\"\r\n                                color=\"default\"\r\n                                style={{ marginTop: '0.15rem' }}\r\n                            >\r\n                                <SendIcon style={{ fill: '#5F4B8BFF' }} />\r\n                            </IconButton>\r\n\r\n                        </form>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Thread;"]},"metadata":{},"sourceType":"module"}