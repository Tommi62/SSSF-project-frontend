{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tommivainio/Projektit/chatApp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/tommivainio/Projektit/chatApp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import config from'../config';var doFetch=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url){var options,response,json,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:options=_args.length>1&&_args[1]!==undefined?_args[1]:{};_context.next=3;return fetch(config.backendUrl+url,options);case 3:response=_context.sent;_context.next=6;return response.json();case 6:json=_context.sent;if(!json.error){_context.next=11;break;}throw new Error(json.message+': '+json.error);case 11:if(response.ok){_context.next=15;break;}throw new Error('doFetch failed');case 15:return _context.abrupt(\"return\",json);case 16:case\"end\":return _context.stop();}}},_callee);}));return function doFetch(_x){return _ref.apply(this,arguments);};}();var useUsers=function useUsers(){var getUsers=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var fetchOptions;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:fetchOptions={method:'GET',credentials:'include'};_context2.prev=1;_context2.next=4;return doFetch('/users',fetchOptions);case 4:return _context2.abrupt(\"return\",_context2.sent);case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](1);throw new Error(_context2.t0.message);case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[1,7]]);}));return function getUsers(){return _ref2.apply(this,arguments);};}();var getUserAvailable=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(username){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return doFetch('/users/username/'+username);case 3:return _context3.abrupt(\"return\",_context3.sent);case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);alert(_context3.t0.message);case 9:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return function getUserAvailable(_x2){return _ref3.apply(this,arguments);};}();var getUsernameById=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return doFetch('/user/'+id);case 3:return _context4.abrupt(\"return\",_context4.sent);case 6:_context4.prev=6;_context4.t0=_context4[\"catch\"](0);alert(_context4.t0.message);case 9:case\"end\":return _context4.stop();}}},_callee4,null,[[0,6]]);}));return function getUsernameById(_x3){return _ref4.apply(this,arguments);};}();var register=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(inputs){var fetchOptions,result;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:fetchOptions={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(inputs),credentials:'include'};_context5.prev=1;_context5.next=4;return doFetch('/user',fetchOptions);case 4:result=_context5.sent;console.log('RegisterResult',result.message);return _context5.abrupt(\"return\",result.message);case 9:_context5.prev=9;_context5.t0=_context5[\"catch\"](1);alert(_context5.t0.message);case 12:case\"end\":return _context5.stop();}}},_callee5,null,[[1,9]]);}));return function register(_x4){return _ref5.apply(this,arguments);};}();var getIsLoggedIn=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var fetchOptions;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:fetchOptions={method:'GET',credentials:'include'};_context6.prev=1;_context6.next=4;return doFetch('/isloggedin',fetchOptions);case 4:return _context6.abrupt(\"return\",_context6.sent);case 7:_context6.prev=7;_context6.t0=_context6[\"catch\"](1);throw new Error(_context6.t0.message);case 10:case\"end\":return _context6.stop();}}},_callee6,null,[[1,7]]);}));return function getIsLoggedIn(){return _ref6.apply(this,arguments);};}();var postLogin=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(inputs){var fetchOptions,result;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:fetchOptions={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(inputs),credentials:'include'};_context7.prev=1;_context7.next=4;return doFetch('/login',fetchOptions);case 4:result=_context7.sent;return _context7.abrupt(\"return\",result);case 8:_context7.prev=8;_context7.t0=_context7[\"catch\"](1);alert(_context7.t0.message);case 11:case\"end\":return _context7.stop();}}},_callee7,null,[[1,8]]);}));return function postLogin(_x5){return _ref7.apply(this,arguments);};}();var logout=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(){var fetchOptions;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:fetchOptions={method:'DELETE',credentials:'include'};_context8.prev=1;_context8.next=4;return doFetch('/logout',fetchOptions);case 4:return _context8.abrupt(\"return\",_context8.sent);case 7:_context8.prev=7;_context8.t0=_context8[\"catch\"](1);throw new Error(_context8.t0.message);case 10:case\"end\":return _context8.stop();}}},_callee8,null,[[1,7]]);}));return function logout(){return _ref8.apply(this,arguments);};}();var getProfile=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(){var fetchOptions;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:fetchOptions={method:'GET',credentials:'include'};_context9.prev=1;_context9.next=4;return doFetch('/profile',fetchOptions);case 4:return _context9.abrupt(\"return\",_context9.sent);case 7:_context9.prev=7;_context9.t0=_context9[\"catch\"](1);throw new Error(_context9.t0.message);case 10:case\"end\":return _context9.stop();}}},_callee9,null,[[1,7]]);}));return function getProfile(){return _ref9.apply(this,arguments);};}();return{getUsers:getUsers,getUserAvailable:getUserAvailable,getUsernameById:getUsernameById,register:register,getIsLoggedIn:getIsLoggedIn,postLogin:postLogin,logout:logout,getProfile:getProfile};};var useChats=function useChats(){var getThreadIds=/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(userId){return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_context10.prev=0;_context10.next=3;return doFetch('/threads/'+userId);case 3:return _context10.abrupt(\"return\",_context10.sent);case 6:_context10.prev=6;_context10.t0=_context10[\"catch\"](0);alert(_context10.t0.message);case 9:case\"end\":return _context10.stop();}}},_callee10,null,[[0,6]]);}));return function getThreadIds(_x6){return _ref10.apply(this,arguments);};}();var getUserIds=/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(userId){return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:_context11.prev=0;_context11.next=3;return doFetch('/threadusers/'+userId);case 3:return _context11.abrupt(\"return\",_context11.sent);case 6:_context11.prev=6;_context11.t0=_context11[\"catch\"](0);alert(_context11.t0.message);case 9:case\"end\":return _context11.stop();}}},_callee11,null,[[0,6]]);}));return function getUserIds(_x7){return _ref11.apply(this,arguments);};}();var getThreadName=/*#__PURE__*/function(){var _ref12=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee12(threadId){var thread;return _regeneratorRuntime.wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:_context12.prev=0;_context12.next=3;return doFetch('/thread/'+threadId);case 3:thread=_context12.sent;return _context12.abrupt(\"return\",thread.name);case 7:_context12.prev=7;_context12.t0=_context12[\"catch\"](0);alert(_context12.t0.message);case 10:case\"end\":return _context12.stop();}}},_callee12,null,[[0,7]]);}));return function getThreadName(_x8){return _ref12.apply(this,arguments);};}();var postMessage=/*#__PURE__*/function(){var _ref13=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee13(messageObject){var fetchOptions,result;return _regeneratorRuntime.wrap(function _callee13$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:fetchOptions={method:'POST',headers:{'Content-Type':'application/json'},body:messageObject,credentials:'include'};_context13.prev=1;_context13.next=4;return doFetch('/message',fetchOptions);case 4:result=_context13.sent;return _context13.abrupt(\"return\",result.success);case 8:_context13.prev=8;_context13.t0=_context13[\"catch\"](1);alert(_context13.t0.message);case 11:case\"end\":return _context13.stop();}}},_callee13,null,[[1,8]]);}));return function postMessage(_x9){return _ref13.apply(this,arguments);};}();var getMessages=/*#__PURE__*/function(){var _ref14=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee14(threadId){return _regeneratorRuntime.wrap(function _callee14$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:_context14.prev=0;_context14.next=3;return doFetch('/messages/'+threadId);case 3:return _context14.abrupt(\"return\",_context14.sent);case 6:_context14.prev=6;_context14.t0=_context14[\"catch\"](0);alert(_context14.t0.message);case 9:case\"end\":return _context14.stop();}}},_callee14,null,[[0,6]]);}));return function getMessages(_x10){return _ref14.apply(this,arguments);};}();var getAllMessages=/*#__PURE__*/function(){var _ref15=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee15(threadId){return _regeneratorRuntime.wrap(function _callee15$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:_context15.prev=0;_context15.next=3;return doFetch('/all_messages/'+threadId);case 3:return _context15.abrupt(\"return\",_context15.sent);case 6:_context15.prev=6;_context15.t0=_context15[\"catch\"](0);alert(_context15.t0.message);case 9:case\"end\":return _context15.stop();}}},_callee15,null,[[0,6]]);}));return function getAllMessages(_x11){return _ref15.apply(this,arguments);};}();var getLastMessage=/*#__PURE__*/function(){var _ref16=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee16(id){return _regeneratorRuntime.wrap(function _callee16$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:_context16.prev=0;_context16.next=3;return doFetch('/last_message/'+id);case 3:return _context16.abrupt(\"return\",_context16.sent);case 6:_context16.prev=6;_context16.t0=_context16[\"catch\"](0);alert(_context16.t0.message);case 9:case\"end\":return _context16.stop();}}},_callee16,null,[[0,6]]);}));return function getLastMessage(_x12){return _ref16.apply(this,arguments);};}();var createNewChatThread=/*#__PURE__*/function(){var _ref17=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee17(chatThreadObject){var fetchOptions,result;return _regeneratorRuntime.wrap(function _callee17$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:fetchOptions={method:'POST',headers:{'Content-Type':'application/json'},body:chatThreadObject,credentials:'include'};_context17.prev=1;_context17.next=4;return doFetch('/new_thread',fetchOptions);case 4:result=_context17.sent;return _context17.abrupt(\"return\",result.success);case 8:_context17.prev=8;_context17.t0=_context17[\"catch\"](1);alert(_context17.t0.message);case 11:case\"end\":return _context17.stop();}}},_callee17,null,[[1,8]]);}));return function createNewChatThread(_x13){return _ref17.apply(this,arguments);};}();return{getThreadIds:getThreadIds,getUserIds:getUserIds,getThreadName:getThreadName,postMessage:postMessage,getMessages:getMessages,getAllMessages:getAllMessages,getLastMessage:getLastMessage,createNewChatThread:createNewChatThread};};export{useUsers,useChats};","map":{"version":3,"sources":["/Users/tommivainio/Projektit/chatApp/my-app/src/hooks/apiHooks.tsx"],"names":["config","doFetch","url","options","fetch","backendUrl","response","json","error","Error","message","ok","useUsers","getUsers","fetchOptions","method","credentials","getUserAvailable","username","alert","getUsernameById","id","register","inputs","headers","body","JSON","stringify","result","console","log","getIsLoggedIn","postLogin","logout","getProfile","useChats","getThreadIds","userId","getUserIds","getThreadName","threadId","thread","name","postMessage","messageObject","success","getMessages","getAllMessages","getLastMessage","createNewChatThread","chatThreadObject"],"mappings":"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","sourcesContent":["import config from '../config'\r\n\r\nconst doFetch = async (url: string, options = {}) => {\r\n    const response = await fetch(config.backendUrl + url, options);\r\n    const json = await response.json();\r\n    if (json.error) {\r\n        // if API response contains error message (use Postman to get further details)\r\n        throw new Error(json.message + ': ' + json.error);\r\n    } else if (!response.ok) {\r\n        // if API response does not contain error message, but there is some other error\r\n        throw new Error('doFetch failed');\r\n    } else {\r\n        // if all goes well\r\n        return json;\r\n    }\r\n};\r\n\r\nconst useUsers = () => {\r\n\r\n    const getUsers = async () => {\r\n        const fetchOptions = {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n        };\r\n        try {\r\n            return await doFetch('/users', fetchOptions);\r\n        } catch (e) {\r\n            throw new Error(e.message);\r\n        }\r\n    };\r\n\r\n    const getUserAvailable = async (username: String) => {\r\n        try {\r\n            return await doFetch('/users/username/' + username);\r\n        } catch (e) {\r\n            alert(e.message);\r\n        }\r\n    };\r\n\r\n    const getUsernameById = async (id: number) => {\r\n        try {\r\n            return await doFetch('/user/' + id);\r\n        } catch (e) {\r\n            alert(e.message);\r\n        }\r\n    };\r\n\r\n    const register = async (inputs: Object) => {\r\n        const fetchOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(inputs),\r\n            credentials: 'include',\r\n        };\r\n        try {\r\n            const result = await doFetch('/user', fetchOptions);\r\n            console.log('RegisterResult', result.message)\r\n            return result.message\r\n        } catch (e) {\r\n            alert(e.message);\r\n        }\r\n    };\r\n\r\n    const getIsLoggedIn = async () => {\r\n        const fetchOptions = {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n        };\r\n        try {\r\n            return await doFetch('/isloggedin', fetchOptions);\r\n        } catch (e) {\r\n            throw new Error(e.message);\r\n        }\r\n    };\r\n\r\n    const postLogin = async (inputs: Object) => {\r\n        const fetchOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(inputs),\r\n            credentials: 'include',\r\n        };\r\n        try {\r\n            const result = await doFetch('/login', fetchOptions);\r\n            return result\r\n        } catch (e) {\r\n            alert(e.message);\r\n        }\r\n    };\r\n\r\n    const logout = async () => {\r\n        const fetchOptions = {\r\n            method: 'DELETE',\r\n            credentials: 'include',\r\n        };\r\n        try {\r\n            return await doFetch('/logout', fetchOptions);\r\n        } catch (e) {\r\n            throw new Error(e.message);\r\n        }\r\n    }\r\n\r\n    const getProfile = async () => {\r\n        const fetchOptions = {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n        };\r\n        try {\r\n            return await doFetch('/profile', fetchOptions);\r\n        } catch (e) {\r\n            throw new Error(e.message);\r\n        }\r\n    };\r\n\r\n    return { getUsers, getUserAvailable, getUsernameById, register, getIsLoggedIn, postLogin, logout, getProfile };\r\n};\r\n\r\nconst useChats = () => {\r\n\r\n    const getThreadIds = async (userId: number) => {\r\n        try {\r\n            return await doFetch('/threads/' + userId);\r\n        } catch (e) {\r\n            alert(e.message);\r\n        }\r\n    };\r\n\r\n    const getUserIds = async (userId: number) => {\r\n        try {\r\n            return await doFetch('/threadusers/' + userId);\r\n        } catch (e) {\r\n            alert(e.message);\r\n        }\r\n    };\r\n\r\n    const getThreadName = async (threadId: number) => {\r\n        try {\r\n            const thread = await doFetch('/thread/' + threadId);\r\n            return thread.name;\r\n        } catch (e) {\r\n            alert(e.message);\r\n        }\r\n    };\r\n\r\n    const postMessage = async (messageObject: Object) => {\r\n        const fetchOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: messageObject,\r\n            credentials: 'include',\r\n        };\r\n        try {\r\n            const result = await doFetch('/message', fetchOptions);\r\n            return result.success\r\n        } catch (e) {\r\n            alert(e.message);\r\n        }\r\n    };\r\n\r\n    const getMessages = async (threadId: number) => {\r\n        try {\r\n            return await doFetch('/messages/' + threadId);\r\n        } catch (e) {\r\n            alert(e.message);\r\n        }\r\n    };\r\n\r\n    const getAllMessages = async (threadId: number) => {\r\n        try {\r\n            return await doFetch('/all_messages/' + threadId);\r\n        } catch (e) {\r\n            alert(e.message);\r\n        }\r\n    };\r\n\r\n    const getLastMessage = async (id: number) => {\r\n        try {\r\n            return await doFetch('/last_message/' + id);\r\n        } catch (e) {\r\n            alert(e.message);\r\n        }\r\n    };\r\n\r\n    const createNewChatThread = async (chatThreadObject: Object) => {\r\n        const fetchOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: chatThreadObject,\r\n            credentials: 'include',\r\n        };\r\n        try {\r\n            const result = await doFetch('/new_thread', fetchOptions);\r\n            return result.success\r\n        } catch (e) {\r\n            alert(e.message);\r\n        }\r\n    };\r\n\r\n    return { getThreadIds, getUserIds, getThreadName, postMessage, getMessages, getAllMessages, getLastMessage, createNewChatThread }\r\n}\r\n\r\nexport { useUsers, useChats };"]},"metadata":{},"sourceType":"module"}