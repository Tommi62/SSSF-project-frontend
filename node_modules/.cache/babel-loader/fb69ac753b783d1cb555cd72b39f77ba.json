{"ast":null,"code":"import _toConsumableArray from\"/Users/tommivainio/Projektit/chatApp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/tommivainio/Projektit/chatApp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/tommivainio/Projektit/chatApp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/tommivainio/Projektit/chatApp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable react-hooks/exhaustive-deps */import{Button,Grid,List,Typography}from'@material-ui/core';import{useContext,useEffect,useState}from'react';import Thread from'../components/thread';import ThreadButton from'../components/threadButton';import ThreadForm from'../components/threadForm';import{MediaContext}from'../contexts/mediaContext';import{WebsocketContext}from'../contexts/websocketContext';import{useUsers,useChats}from'../hooks/apiHooks';import useWindowDimensions from'../hooks/windowDimensionsHook';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Home=function Home(_ref){var history=_ref.history;var _useContext=useContext(MediaContext),user=_useContext.user,setUser=_useContext.setUser;var _useContext2=useContext(WebsocketContext),websocket=_useContext2.websocket,setWebsocket=_useContext2.setWebsocket;var _useUsers=useUsers(),getIsLoggedIn=_useUsers.getIsLoggedIn;var _useChats=useChats(),getThreadIds=_useChats.getThreadIds,getMessages=_useChats.getMessages;var _useWindowDimensions=useWindowDimensions(),height=_useWindowDimensions.height;var heightCorrected=height-64;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),threads=_useState2[0],setThreads=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),threadOpen=_useState4[0],setThreadOpen=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),threadId=_useState6[0],setThreadId=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),messages=_useState8[0],setMessages=_useState8[1];var _useState9=useState(Date.now()),_useState10=_slicedToArray(_useState9,2),updateState=_useState10[0],setUpdateState=_useState10[1];var _useState11=useState(Date.now()),_useState12=_slicedToArray(_useState11,2),updateThreadButtons=_useState12[0],setUpdateThreadButtons=_useState12[1];var _useState13=useState(Date.now()),_useState14=_slicedToArray(_useState13,2),updateThreadButtonInfos=_useState14[0],setUpdateThreadButtonInfos=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),createNewChatThread=_useState16[0],setCreateNewChatThread=_useState16[1];var _useState17=useState(50),_useState18=_slicedToArray(_useState17,2),messageAmount=_useState18[0],setMessageAmount=_useState18[1];var _useState19=useState({type:'',contents:'',timestamp:new Date(),user_id:0,thread_id:0}),_useState20=_slicedToArray(_useState19,2),wsMessage=_useState20[0],setWsMessage=_useState20[1];useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var isLoggedIn,chatThreads;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;console.log('USER: ',user);_context.next=4;return getIsLoggedIn();case 4:isLoggedIn=_context.sent;if(!isLoggedIn.success){history.push('/login');}setUser(isLoggedIn.id);console.log('Logged user: ',user,isLoggedIn.id);if(!(user!==0)){_context.next=13;break;}_context.next=11;return getThreadIds(isLoggedIn.id);case 11:chatThreads=_context.sent;setThreads(chatThreads);case 13:_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);console.log(_context.t0.message);case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,15]]);}))();},[user,updateThreadButtons]);useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var threadMessages,reversedArray;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;if(!(threadId!==0)){_context2.next=7;break;}_context2.next=4;return getMessages(threadId);case 4:threadMessages=_context2.sent;reversedArray=threadMessages.reverse();setMessages(reversedArray);case 7:_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0.message);case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}))();},[threadId,updateState]);useEffect(function(){try{if(wsMessage.type!==''&&wsMessage.thread_id===threadId){var newMessageObject={id:Date.now(),user_id:wsMessage.user_id,contents:wsMessage.contents,timestamp:wsMessage.timestamp};setMessages(function(messages){return[].concat(_toConsumableArray(messages),[newMessageObject]);});setMessageAmount(messageAmount+1);}}catch(e){console.log(e.message);}},[wsMessage]);useEffect(function(){try{if(threads.length!==0){if(websocket===undefined||websocket.readyState===2||websocket.readyState===3){console.log('READYSTATE ',websocket===null||websocket===void 0?void 0:websocket.readyState);var socket=new WebSocket('ws://localhost:3001');socket.addEventListener('open',function(event){console.log('Server is opened.');var client={type:'client',user_id:user,threads:threads};socket.send(JSON.stringify(client));});socket.addEventListener('message',function(event){if(event.data!=='ping'){console.log('Message from server ',JSON.parse(event.data).thread_id);var message=JSON.parse(event.data);if(message.type==='message'){setWsMessage(message);setUpdateThreadButtonInfos(Date.now());}else{setTimeout(function(){return socket.send('pong');},1000);}}});socket.addEventListener('close',function(event){console.log('Websocket connection closed.');setUpdateState(Date.now());});setWebsocket(socket);console.log('NEW SOCKET');}}}catch(e){console.log(e.message);};},[updateState,threads]);var setCreateNewChatThreadOpen=function setCreateNewChatThreadOpen(){setCreateNewChatThread(true);};return/*#__PURE__*/_jsx(_Fragment,{children:createNewChatThread?/*#__PURE__*/_jsx(ThreadForm,{setCreateNewChatThread:setCreateNewChatThread,setUpdateThreadButtons:setUpdateThreadButtons}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",style:{height:heightCorrected},children:[/*#__PURE__*/_jsxs(Grid,{item:true,style:{width:'30%',borderRight:'1px solid #5F4B8BFF'},children:[/*#__PURE__*/_jsx(Button,{onClick:setCreateNewChatThreadOpen,color:\"primary\",variant:\"contained\",style:{marginTop:'1rem',marginBottom:'1rem'},children:\"Create a new chat thread\"}),/*#__PURE__*/_jsx(Grid,{container:true,style:{borderTop:'1px solid #5F4B8BFF',marginTop:'1rem'},children:/*#__PURE__*/_jsxs(List,{style:{padding:0,width:'100%'},children:[threads.map(function(item){return/*#__PURE__*/_jsx(ThreadButton,{id:item.thread_id,setThreadOpen:setThreadOpen,setThreadId:setThreadId,threadOpen:threadOpen,threadId:threadId,updateThreadButtonInfos:updateThreadButtonInfos});}),' ']})})]}),/*#__PURE__*/_jsx(Grid,{item:true,style:{width:'70%'},children:threadOpen?/*#__PURE__*/_jsx(Thread,{messages:messages,id:threadId,websocket:websocket,messageAmount:messageAmount,setMessageAmount:setMessageAmount}):/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",justify:\"center\",direction:\"column\",children:[/*#__PURE__*/_jsx(Typography,{component:\"h1\",variant:\"h2\",children:\"Welcome\"}),/*#__PURE__*/_jsx(Typography,{component:\"div\",variant:\"body1\",children:\"This is Chat App made by Tommi.\"})]})})]})})});};export default Home;","map":{"version":3,"sources":["/Users/tommivainio/Projektit/chatApp/my-app/src/views/home.tsx"],"names":["Button","Grid","List","Typography","useContext","useEffect","useState","Thread","ThreadButton","ThreadForm","MediaContext","WebsocketContext","useUsers","useChats","useWindowDimensions","Home","history","user","setUser","websocket","setWebsocket","getIsLoggedIn","getThreadIds","getMessages","height","heightCorrected","threads","setThreads","threadOpen","setThreadOpen","threadId","setThreadId","messages","setMessages","Date","now","updateState","setUpdateState","updateThreadButtons","setUpdateThreadButtons","updateThreadButtonInfos","setUpdateThreadButtonInfos","createNewChatThread","setCreateNewChatThread","messageAmount","setMessageAmount","type","contents","timestamp","user_id","thread_id","wsMessage","setWsMessage","console","log","isLoggedIn","success","push","id","chatThreads","message","threadMessages","reversedArray","reverse","newMessageObject","e","length","undefined","readyState","socket","WebSocket","addEventListener","event","client","send","JSON","stringify","data","parse","setTimeout","setCreateNewChatThreadOpen","width","borderRight","marginTop","marginBottom","borderTop","padding","map","item"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { Button, Grid, List, Typography } from '@material-ui/core';\nimport { BorderRight } from '@material-ui/icons';\nimport { useContext, useEffect, useState } from 'react';\nimport Thread from '../components/thread';\nimport ThreadButton from '../components/threadButton';\nimport ThreadForm from '../components/threadForm';\nimport { MediaContext } from '../contexts/mediaContext';\nimport { WebsocketContext } from '../contexts/websocketContext';\nimport { useUsers, useChats } from '../hooks/apiHooks';\nimport useWindowDimensions from '../hooks/windowDimensionsHook';\n\ninterface propType {\n    history: {\n        push: Function,\n    }\n}\n\ninterface threadsArray {\n    thread_id: number\n}\n\ninterface messagesArray {\n    id: number,\n    user_id: number,\n    contents: string,\n    timestamp: Date,\n}\n\nconst Home = ({ history }: propType) => {\n    const { user, setUser } = useContext(MediaContext);\n    const { websocket, setWebsocket } = useContext(WebsocketContext);\n    const { getIsLoggedIn } = useUsers();\n    const { getThreadIds, getMessages } = useChats();\n    const { height } = useWindowDimensions();\n    const heightCorrected = height - 64;\n    const [threads, setThreads] = useState<threadsArray[]>([]);\n    const [threadOpen, setThreadOpen] = useState(false)\n    const [threadId, setThreadId] = useState(0)\n    const [messages, setMessages] = useState<messagesArray[]>([]);\n    const [updateState, setUpdateState] = useState(Date.now());\n    const [updateThreadButtons, setUpdateThreadButtons] = useState(Date.now());\n    const [updateThreadButtonInfos, setUpdateThreadButtonInfos] = useState(Date.now());\n    const [createNewChatThread, setCreateNewChatThread] = useState(false);\n    const [messageAmount, setMessageAmount] = useState(50);\n    const [wsMessage, setWsMessage] = useState({\n        type: '',\n        contents: '',\n        timestamp: new Date(),\n        user_id: 0,\n        thread_id: 0\n    });\n\n    useEffect(() => {\n        (async () => {\n            try {\n                console.log('USER: ', user)\n                const isLoggedIn = await getIsLoggedIn();\n                if (!isLoggedIn.success) {\n                    history.push('/login');\n                }\n                setUser(isLoggedIn.id)\n                console.log('Logged user: ', user, isLoggedIn.id);\n                if (user !== 0) {\n                    const chatThreads = await getThreadIds(isLoggedIn.id)\n                    setThreads(chatThreads)\n                }\n            } catch (e) {\n                console.log(e.message);\n            }\n        })();\n    }, [user, updateThreadButtons]);\n\n    useEffect(() => {\n        (async () => {\n            try {\n                if (threadId !== 0) {\n                    const threadMessages = await getMessages(threadId);\n                    const reversedArray = threadMessages.reverse();\n                    setMessages(reversedArray);\n                }\n            } catch (e) {\n                console.log(e.message);\n            }\n        })();\n    }, [threadId, updateState]);\n\n    useEffect(() => {\n        try {\n            if (wsMessage.type !== '' && wsMessage.thread_id === threadId) {\n                const newMessageObject = {\n                    id: Date.now(),\n                    user_id: wsMessage.user_id,\n                    contents: wsMessage.contents,\n                    timestamp: wsMessage.timestamp,\n                }\n                setMessages(messages => [...messages, newMessageObject]);\n                setMessageAmount(messageAmount + 1);\n            }\n        } catch (e) {\n            console.log(e.message);\n        }\n    }, [wsMessage]);\n\n    useEffect(() => {\n        try {\n            if (threads.length !== 0) {\n                if (websocket === undefined || websocket.readyState === 2 || websocket.readyState === 3) {\n                    console.log('READYSTATE ', websocket?.readyState)\n                    const socket = new WebSocket('ws://localhost:3001');\n\n                    socket.addEventListener('open', function (event) {\n                        console.log('Server is opened.');\n                        const client = {\n                            type: 'client',\n                            user_id: user,\n                            threads: threads,\n                        }\n                        socket.send(JSON.stringify(client));\n                    });\n\n                    socket.addEventListener('message', function (event) {\n                        if (event.data !== 'ping') {\n                            console.log('Message from server ', JSON.parse(event.data).thread_id);\n                            const message = JSON.parse(event.data);\n                            if (message.type === 'message') {\n                                setWsMessage(message);\n                                setUpdateThreadButtonInfos(Date.now());\n                            } else {\n                                setTimeout(() => socket.send('pong'), 1000);\n                            }\n                        }\n                    });\n\n                    socket.addEventListener('close', function (event) {\n                        console.log('Websocket connection closed.');\n                        setUpdateState(Date.now());\n                    });\n\n                    setWebsocket(socket);\n                    console.log('NEW SOCKET');\n                }\n            }\n        } catch (e) {\n            console.log(e.message);\n        };\n    }, [updateState, threads]);\n\n    const setCreateNewChatThreadOpen = () => {\n        setCreateNewChatThread(true);\n    }\n\n\n    return (\n        <>\n            {createNewChatThread ? (\n                <ThreadForm setCreateNewChatThread={setCreateNewChatThread} setUpdateThreadButtons={setUpdateThreadButtons} />\n            ) : (\n                <>\n                    <Grid container direction=\"row\" style={{ height: heightCorrected, }} >\n                        <Grid item style={{ width: '30%', borderRight: '1px solid #5F4B8BFF' }}>\n                            <Button\n                                onClick={setCreateNewChatThreadOpen}\n                                color=\"primary\"\n                                variant=\"contained\"\n                                style={{ marginTop: '1rem', marginBottom: '1rem' }}\n                            >\n                                Create a new chat thread\n                            </Button>\n                            <Grid container style={{ borderTop: '1px solid #5F4B8BFF', marginTop: '1rem' }} >\n                                <List style={{ padding: 0, width: '100%' }}>\n                                    {threads.map((item) => (\n                                        <ThreadButton\n                                            id={item.thread_id}\n                                            setThreadOpen={setThreadOpen}\n                                            setThreadId={setThreadId}\n                                            threadOpen={threadOpen}\n                                            threadId={threadId}\n                                            updateThreadButtonInfos={updateThreadButtonInfos}\n                                        />\n                                    ))}{' '}\n                                </List>\n                            </Grid>\n                        </Grid>\n                        <Grid item style={{ width: '70%' }}>\n                            {threadOpen ? (\n                                <Thread messages={messages} id={threadId} websocket={websocket} messageAmount={messageAmount} setMessageAmount={setMessageAmount} />\n                            ) : (\n                                <Grid container alignItems=\"center\" justify=\"center\" direction=\"column\" >\n                                    <Typography component=\"h1\" variant=\"h2\">Welcome</Typography>\n                                    <Typography component=\"div\" variant=\"body1\">This is Chat App made by Tommi.</Typography>\n                                </Grid>\n                            )}\n                        </Grid>\n                    </Grid>\n                </>\n            )}\n        </>\n    );\n\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}