{"ast":null,"code":"var _jsxFileName = \"/Users/tommivainio/Desktop/chatApp/my-app/src/components/thread.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, List, TextField } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\nimport { useContext, useEffect, useState } from 'react';\nimport { MediaContext } from '../contexts/mediaContext';\nimport { useChats } from '../hooks/apiHooks';\nimport Message from '../components/message';\nimport useWindowDimensions from '../hooks/windowDimensionsHook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Thread = ({\n  id\n}) => {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const {\n    user\n  } = useContext(MediaContext);\n  const {\n    postMessage,\n    getMessages\n  } = useChats();\n  const {\n    height\n  } = useWindowDimensions();\n  const heightCorrected = height - 64;\n  useEffect(() => {\n    (async () => {\n      try {\n        const threadMessages = await getMessages(id);\n        setMessages(threadMessages);\n      } catch (e) {\n        console.log(e.message);\n      }\n    })();\n  }, []);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const timestamp = new Date(Date.now()).toISOString();\n    const messageObject = JSON.stringify({\n      contents: message,\n      timestamp: timestamp,\n      user_id: user,\n      thread_id: id\n    });\n    const success = await postMessage(messageObject);\n    console.log('SUCCESS: ', success);\n    setMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      direction: \"column\",\n      style: {\n        height: heightCorrected\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        justify: \"center\",\n        style: {\n          padding: '2rem 6rem',\n          backgroundColor: '#E69A8DFF',\n          height: '90%'\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: [messages.map(item => /*#__PURE__*/_jsxDEV(Message, {\n            user_id: item.user_id,\n            contents: item.contents,\n            timestamp: item.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        justify: \"center\",\n        direction: \"column\",\n        alignItems: \"center\",\n        alignContent: \"center\",\n        style: {\n          height: '10%',\n          backgroundColor: 'lightgray'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"input-with-icon-grid\",\n            value: message,\n            onInput: event => setMessage(event.target.value),\n            style: {\n              width: '20rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"delete\",\n            type: \"submit\",\n            color: \"default\",\n            children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Thread, \"CFroGw8A+RVmOtwcBAdNZWEbBRY=\", false, function () {\n  return [useChats, useWindowDimensions];\n});\n\n_c = Thread;\nexport default Thread;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thread\");","map":{"version":3,"sources":["/Users/tommivainio/Desktop/chatApp/my-app/src/components/thread.tsx"],"names":["Grid","List","TextField","SendIcon","IconButton","useContext","useEffect","useState","MediaContext","useChats","Message","useWindowDimensions","Thread","id","message","setMessage","messages","setMessages","user","postMessage","getMessages","height","heightCorrected","threadMessages","e","console","log","handleSubmit","event","preventDefault","timestamp","Date","now","toISOString","messageObject","JSON","stringify","contents","user_id","thread_id","success","padding","backgroundColor","map","item","target","value","width"],"mappings":"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","sourcesContent":["import { Grid, List, TextField } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { FormEvent, useContext, useEffect, useState } from 'react';\r\nimport { MediaContext } from '../contexts/mediaContext';\r\nimport { useChats } from '../hooks/apiHooks';\r\nimport Message from '../components/message';\r\nimport useWindowDimensions from '../hooks/windowDimensionsHook';\r\n\r\ninterface propType {\r\n    id: number\r\n}\r\n\r\ninterface messagesArray {\r\n    contents: string,\r\n    timestamp: Date,\r\n    user_id: number\r\n}\r\n\r\n\r\nconst Thread = ({ id }: propType) => {\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState<messagesArray[]>([]);\r\n    const { user } = useContext(MediaContext);\r\n    const { postMessage, getMessages } = useChats();\r\n    const { height } = useWindowDimensions();\r\n    const heightCorrected = height - 64;\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const threadMessages = await getMessages(id);\r\n                setMessages(threadMessages);\r\n\r\n            } catch (e) {\r\n                console.log(e.message);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    const handleSubmit = async (event: FormEvent) => {\r\n        event.preventDefault();\r\n        const timestamp = new Date(Date.now()).toISOString();\r\n        const messageObject = JSON.stringify({\r\n            contents: message,\r\n            timestamp: timestamp,\r\n            user_id: user,\r\n            thread_id: id,\r\n\r\n        });\r\n        const success = await postMessage(messageObject)\r\n        console.log('SUCCESS: ', success)\r\n        setMessage('');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container justify=\"center\" direction=\"column\" style={{ height: heightCorrected }}>\r\n                <Grid item justify=\"center\" style={{ padding: '2rem 6rem', backgroundColor: '#E69A8DFF', height: '90%' }}>\r\n                    <List>\r\n                        {messages.map((item) => (\r\n                            <Message user_id={item.user_id} contents={item.contents} timestamp={item.timestamp} />\r\n                        ))}{' '}\r\n                    </List>\r\n                </Grid>\r\n                <Grid item justify=\"center\" direction=\"column\" alignItems=\"center\" alignContent=\"center\" style={{ height: '10%', backgroundColor: 'lightgray' }}>\r\n                    <form\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n\r\n                        <TextField\r\n                            id=\"input-with-icon-grid\"\r\n                            value={message}\r\n                            onInput={(event) => setMessage((event.target as HTMLInputElement).value)}\r\n                            style={{ width: '20rem' }}\r\n                        />\r\n                        <IconButton\r\n                            aria-label=\"delete\"\r\n                            type=\"submit\"\r\n                            color=\"default\"\r\n                        >\r\n                            <SendIcon />\r\n                        </IconButton>\r\n\r\n                    </form>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Thread;"]},"metadata":{},"sourceType":"module"}