{"ast":null,"code":"var _jsxFileName = \"/Users/tommivainio/Desktop/chatApp/my-app/src/components/threadButton.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { Button, Grid, ListItemText, makeStyles, Typography } from \"@material-ui/core\";\nimport { useContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { WebsocketContext } from \"../contexts/websocketContext\";\nimport { useChats, useUsers } from '../hooks/apiHooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  text: {\n    color: 'white',\n    width: '100%',\n    padding: '1rem'\n  },\n  inline: {\n    display: 'inline'\n  },\n  lastMessage: {\n    display: 'inline',\n    fontSize: '0.6rem'\n  },\n  timestamp: {\n    fontSize: '0.5rem',\n    marginLeft: '2rem'\n  },\n  button: {\n    background: 'fff',\n    width: '100%',\n    maxWidth: '30vw',\n    display: 'inline-block',\n    padding: '0 1rem',\n    minHeight: 0,\n    minWidth: 0,\n    borderBottom: '1px solid #5F4B8BFF',\n    borderRadius: 0\n  }\n}));\n\nconst ThreadButton = ({\n  id,\n  setThreadOpen,\n  setThreadId,\n  threadOpen\n}) => {\n  _s();\n\n  const {\n    getThreadName,\n    getLastMessage\n  } = useChats();\n  const {\n    getUsernameById\n  } = useUsers();\n  const [name, setName] = useState('');\n  const [lastMessage, setLastMessage] = useState({\n    username: '',\n    contents: '',\n    timestamp: ''\n  });\n  const {\n    websocket\n  } = useContext(WebsocketContext);\n  const classes = useStyles();\n  useEffect(() => {\n    (async () => {\n      try {\n        const threadName = await getThreadName(id);\n        setName(threadName);\n        const lastMessageData = await getLastMessage(id);\n        const username = await getUsernameById(lastMessageData[0].user_id);\n        const lastMessageObject = {\n          username: username.username,\n          contents: lastMessageData[0].contents,\n          timestamp: lastMessageData[0].timestamp\n        };\n        console.log(lastMessageObject);\n        setLastMessage(lastMessageObject);\n      } catch (e) {\n        console.log(e.message);\n      }\n    })();\n  }, []);\n\n  const openThread = () => {\n    if (!threadOpen) {\n      setThreadOpen(true);\n      setThreadId(id);\n    } else {\n      setThreadOpen(false);\n\n      if (websocket !== undefined) {\n        websocket.close();\n      }\n\n      setThreadId(0);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      className: classes.button,\n      onClick: openThread,\n      children: /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h1\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"span\",\n              variant: \"subtitle1\",\n              className: classes.timestamp,\n              children: lastMessage.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this)\n        }, void 0, false),\n        secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"flex-start\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"span\",\n              variant: \"body2\",\n              className: classes.lastMessage,\n              children: lastMessage.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ThreadButton, \"lCM+Bki/vTLUnvTorn/ceH4Utf4=\", false, function () {\n  return [useChats, useUsers, useStyles];\n});\n\n_c = ThreadButton;\nexport default ThreadButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThreadButton\");","map":{"version":3,"sources":["/Users/tommivainio/Desktop/chatApp/my-app/src/components/threadButton.tsx"],"names":["Button","Grid","ListItemText","makeStyles","Typography","useContext","useState","useEffect","WebsocketContext","useChats","useUsers","useStyles","text","color","width","padding","inline","display","lastMessage","fontSize","timestamp","marginLeft","button","background","maxWidth","minHeight","minWidth","borderBottom","borderRadius","ThreadButton","id","setThreadOpen","setThreadId","threadOpen","getThreadName","getLastMessage","getUsernameById","name","setName","setLastMessage","username","contents","websocket","classes","threadName","lastMessageData","user_id","lastMessageObject","console","log","e","message","openThread","undefined","close"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Button, Grid, ListItemText, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { WebsocketContext } from \"../contexts/websocketContext\";\r\nimport { useChats, useUsers } from '../hooks/apiHooks';\r\n\r\ninterface propType {\r\n    id: number,\r\n    setThreadOpen: Function,\r\n    setThreadId: Function,\r\n    threadOpen: Boolean,\r\n}\r\n\r\ninterface lastMessageObject {\r\n    username: string,\r\n    contents: string,\r\n    timestamp: any,\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    text: {\r\n        color: 'white',\r\n        width: '100%',\r\n        padding: '1rem',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    lastMessage: {\r\n        display: 'inline',\r\n        fontSize: '0.6rem'\r\n    },\r\n    timestamp: {\r\n        fontSize: '0.5rem',\r\n        marginLeft: '2rem'\r\n    },\r\n    button: {\r\n        background: 'fff',\r\n        width: '100%',\r\n        maxWidth: '30vw',\r\n        display: 'inline-block',\r\n        padding: '0 1rem',\r\n        minHeight: 0,\r\n        minWidth: 0,\r\n        borderBottom: '1px solid #5F4B8BFF',\r\n        borderRadius: 0,\r\n    }\r\n}));\r\n\r\nconst ThreadButton = ({ id, setThreadOpen, setThreadId, threadOpen }: propType) => {\r\n    const { getThreadName, getLastMessage } = useChats();\r\n    const { getUsernameById } = useUsers();\r\n    const [name, setName] = useState('');\r\n    const [lastMessage, setLastMessage] = useState<lastMessageObject>({\r\n        username: '',\r\n        contents: '',\r\n        timestamp: ''\r\n    });\r\n    const { websocket } = useContext(WebsocketContext);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const threadName = await getThreadName(id)\r\n                setName(threadName)\r\n                const lastMessageData = await getLastMessage(id)\r\n                const username = await getUsernameById(lastMessageData[0].user_id);\r\n                const lastMessageObject = {\r\n                    username: username.username,\r\n                    contents: lastMessageData[0].contents,\r\n                    timestamp: lastMessageData[0].timestamp,\r\n                }\r\n                console.log(lastMessageObject);\r\n                setLastMessage(lastMessageObject);\r\n            } catch (e) {\r\n                console.log(e.message);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    const openThread = () => {\r\n        if (!threadOpen) {\r\n            setThreadOpen(true)\r\n            setThreadId(id)\r\n        } else {\r\n            setThreadOpen(false)\r\n            if (websocket !== undefined) {\r\n                websocket.close();\r\n            }\r\n            setThreadId(0)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button className={classes.button} onClick={openThread}>\r\n                <ListItemText\r\n                    primary={\r\n                        <>\r\n                            <Grid container justify=\"space-between\">\r\n                                <Typography\r\n                                    component=\"h1\"\r\n                                >\r\n                                    {name}\r\n                                </Typography>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"subtitle1\"\r\n                                    className={classes.timestamp}\r\n                                >\r\n                                    {lastMessage.timestamp}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </>\r\n                    }\r\n                    secondary={\r\n                        <>\r\n                            <Grid container justify=\"flex-start\">\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"body2\"\r\n                                    className={classes.lastMessage}\r\n                                >\r\n                                    {lastMessage.username}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </>\r\n                    }\r\n                />\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ThreadButton"]},"metadata":{},"sourceType":"module"}