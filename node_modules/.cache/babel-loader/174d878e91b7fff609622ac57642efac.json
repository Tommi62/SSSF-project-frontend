{"ast":null,"code":"import _toConsumableArray from\"/Users/tommivainio/Projektit/chatApp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/tommivainio/Projektit/chatApp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/tommivainio/Projektit/chatApp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/tommivainio/Projektit/chatApp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/Users/tommivainio/Projektit/chatApp/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";/* eslint-disable react-hooks/exhaustive-deps */import{Button,Grid,List,Typography}from'@material-ui/core';import{useContext,useEffect,useState}from'react';import Thread from'../components/thread';import ThreadButton from'../components/threadButton';import Modal from'../components/modal';import{MediaContext}from'../contexts/mediaContext';import{WebsocketContext}from'../contexts/websocketContext';import{useUsers,useChats}from'../hooks/apiHooks';import useWindowDimensions from'../hooks/windowDimensionsHook';import{useMediaQuery}from'react-responsive';import{makeStyles}from\"@material-ui/core/styles\";import{Card}from'@mui/material';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){var _newThreadButton;return{newThreadButton:(_newThreadButton={backgroundColor:'#5F4B8BFF',marginTop:'1rem','&:hover':{backgroundColor:'#7159a6'}},_defineProperty(_newThreadButton,theme.breakpoints.down(1000),{fontSize:'0.8rem',padding:'6px 10px'}),_defineProperty(_newThreadButton,theme.breakpoints.down(800),{fontSize:'0.7rem',padding:'6px 6px'}),_defineProperty(_newThreadButton,theme.breakpoints.down(600),{fontSize:'0.875rem',padding:'6px 16px'}),_newThreadButton),desktopContainer:_defineProperty({},theme.breakpoints.up(1280),{width:'70vw'}),mobileWelcomeCard:{maxWidth:'15rem',margin:'auto',marginTop:'1rem'},mobileSubtitle:{fontSize:'0.9rem'}};});var Home=function Home(_ref){var history=_ref.history;var classes=useStyles();var _useContext=useContext(MediaContext),user=_useContext.user,setUser=_useContext.setUser;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setusername=_useState2[1];var _useContext2=useContext(WebsocketContext),websocket=_useContext2.websocket,setWebsocket=_useContext2.setWebsocket;var _useUsers=useUsers(),getIsLoggedIn=_useUsers.getIsLoggedIn,getUsernameById=_useUsers.getUsernameById;var _useChats=useChats(),getThreadIds=_useChats.getThreadIds,getMessages=_useChats.getMessages;var _useWindowDimensions=useWindowDimensions(),height=_useWindowDimensions.height;var _useState3=useState(height-64),_useState4=_slicedToArray(_useState3,2),heightCorrected=_useState4[0],setHeightCorrected=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),threads=_useState6[0],setThreads=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),sortedThreads=_useState8[0],setSortedThreads=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),threadOpen=_useState10[0],setThreadOpen=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),threadId=_useState12[0],setThreadId=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),messages=_useState14[0],setMessages=_useState14[1];var _useState15=useState(Date.now()),_useState16=_slicedToArray(_useState15,2),updateState=_useState16[0],setUpdateState=_useState16[1];var _useState17=useState(Date.now()),_useState18=_slicedToArray(_useState17,2),updateThreadButtons=_useState18[0],setUpdateThreadButtons=_useState18[1];var _useState19=useState(Date.now()),_useState20=_slicedToArray(_useState19,2),updateThreadButtonInfos=_useState20[0],setUpdateThreadButtonInfos=_useState20[1];var _useState21=useState(50),_useState22=_slicedToArray(_useState21,2),messageAmount=_useState22[0],setMessageAmount=_useState22[1];var _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),modalOpen=_useState24[0],setModalOpen=_useState24[1];var _useState25=useState({type:'',contents:'',timestamp:new Date(),user_id:0,thread_id:0}),_useState26=_slicedToArray(_useState25,2),wsMessage=_useState26[0],setWsMessage=_useState26[1];var isMobile=useMediaQuery({query:'(max-width: 600px)'});var isDesktop=useMediaQuery({query:'(min-width: 1280px)'});useEffect(function(){try{if(isMobile){setHeightCorrected(height-56);}else{setHeightCorrected(height-64);}}catch(e){console.log(e.message);}},[isMobile]);useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var isLoggedIn,name,chatThreads;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;console.log('USER: ',user);_context.next=4;return getIsLoggedIn();case 4:isLoggedIn=_context.sent;if(!isLoggedIn.success){history.push('/login');}setUser(isLoggedIn.id);_context.next=9;return getUsernameById(isLoggedIn.id);case 9:name=_context.sent;setusername(name.username);console.log('Logged user: ',user,isLoggedIn.id);if(!(user!==0)){_context.next=17;break;}_context.next=15;return getThreadIds(isLoggedIn.id);case 15:chatThreads=_context.sent;if(chatThreads.length>0){setThreads(chatThreads);}else{setThreads([{thread_id:0}]);}case 17:_context.next=22;break;case 19:_context.prev=19;_context.t0=_context[\"catch\"](0);console.log(_context.t0.message);case 22:case\"end\":return _context.stop();}}},_callee,null,[[0,19]]);}))();},[user,updateThreadButtons]);useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var idArray,i,threadMessages,threadIdObject;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;if(!(threads.length>0)){_context2.next=17;break;}if(!(threads[0].thread_id!==0)){_context2.next=17;break;}idArray=[];i=0;case 5:if(!(i<threads.length)){_context2.next=14;break;}_context2.next=8;return getMessages(threads[i].thread_id);case 8:threadMessages=_context2.sent;threadIdObject={id:threads[i].thread_id,timestamp:threadMessages.length>0?threadMessages[0].timestamp:'1999-02-06T05:47:00'};idArray.push(threadIdObject);case 11:i++;_context2.next=5;break;case 14:idArray.sort(function(a,b){return a.timestamp<b.timestamp?1:b.timestamp<a.timestamp?-1:0;});console.log('IDARRAY',idArray);setSortedThreads(idArray);case 17:_context2.next=22;break;case 19:_context2.prev=19;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0.message);case 22:case\"end\":return _context2.stop();}}},_callee2,null,[[0,19]]);}))();},[threads,updateThreadButtonInfos]);useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var threadMessages,reversedArray;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;if(!(threadId!==0)){_context3.next=7;break;}_context3.next=4;return getMessages(threadId);case 4:threadMessages=_context3.sent;reversedArray=threadMessages.reverse();setMessages(reversedArray);case 7:_context3.next=12;break;case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0.message);case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[0,9]]);}))();},[threadId,updateState]);useEffect(function(){try{if(wsMessage.type!==''&&wsMessage.thread_id===threadId){var newMessageObject={id:Date.now(),user_id:wsMessage.user_id,contents:wsMessage.contents,timestamp:wsMessage.timestamp};setMessages(function(messages){return[].concat(_toConsumableArray(messages),[newMessageObject]);});setMessageAmount(messageAmount+1);}}catch(e){console.log(e.message);}},[wsMessage]);useEffect(function(){try{if(threads.length!==0){if(websocket===undefined||websocket.readyState===2||websocket.readyState===3){console.log('READYSTATE ',websocket===null||websocket===void 0?void 0:websocket.readyState);var socket=new WebSocket('ws://localhost:3001');socket.addEventListener('open',function(event){try{console.log('Server is opened.');var client={type:'client',user_id:user,threads:threads};socket.send(JSON.stringify(client));}catch(e){console.log(e.message);}});socket.addEventListener('message',function(event){try{if(event.data!=='ping'){console.log('Message from server ',JSON.parse(event.data).thread_id);var message=JSON.parse(event.data);if(message.type==='message'){setWsMessage(message);setUpdateThreadButtonInfos(Date.now());}else if(message.type==='newThread'){setUpdateThreadButtons(Date.now());}}else{setTimeout(function(){return socket.send('pong');},1000);}}catch(e){console.log(e.message);}});socket.addEventListener('close',function(event){try{console.log('Websocket connection closed.');setUpdateState(Date.now());}catch(e){console.log(e.message);}});setWebsocket(socket);console.log('NEW SOCKET');}}}catch(e){console.log(e.message);};},[updateState,threads]);var setCreateNewChatThreadOpen=function setCreateNewChatThreadOpen(){setModalOpen(true);};return/*#__PURE__*/_jsxs(_Fragment,{children:[isMobile?/*#__PURE__*/_jsx(Grid,{container:true,direction:\"column\",style:{height:heightCorrected},children:threadOpen?/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Thread,{messages:messages,id:threadId,websocket:websocket,messageAmount:messageAmount,setMessageAmount:setMessageAmount,setThreadOpen:setThreadOpen,setThreadId:setThreadId})}):/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(Card,{className:classes.mobileWelcomeCard,children:/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",justify:\"center\",direction:\"column\",children:[/*#__PURE__*/_jsxs(Typography,{component:\"h6\",variant:\"h6\",children:[\"Welcome \",username,\"!\"]}),/*#__PURE__*/_jsx(Typography,{className:classes.mobileSubtitle,component:\"div\",variant:\"body1\",children:\"This is Chat App made by Tommi.\"})]})}),/*#__PURE__*/_jsx(Button,{onClick:setCreateNewChatThreadOpen,color:\"primary\",variant:\"contained\",className:classes.newThreadButton,children:\"Create a new chat thread\"}),/*#__PURE__*/_jsx(Grid,{container:true,style:{borderTop:'1px solid #5F4B8BFF',marginTop:'1rem'},children:/*#__PURE__*/_jsxs(List,{style:{padding:0,width:'100vw'},children:[sortedThreads.map(function(item){return/*#__PURE__*/_jsx(ThreadButton,{id:item.id,setThreadOpen:setThreadOpen,setThreadId:setThreadId,threadOpen:threadOpen,threadId:threadId,updateThreadButtonInfos:updateThreadButtonInfos});}),' ']})})]})}):/*#__PURE__*/_jsx(_Fragment,{children:isDesktop?/*#__PURE__*/_jsx(Card,{style:{width:'70vw',margin:'auto'},children:/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",style:{height:heightCorrected},className:classes.desktopContainer,children:[/*#__PURE__*/_jsxs(Grid,{item:true,style:{width:'30%',borderRight:'1px solid #5F4B8BFF',maxHeight:heightCorrected,overflowY:'auto'},children:[/*#__PURE__*/_jsx(Button,{onClick:setCreateNewChatThreadOpen,color:\"primary\",variant:\"contained\",className:classes.newThreadButton,children:\"Create a new chat thread\"}),/*#__PURE__*/_jsx(Grid,{container:true,style:{borderTop:'1px solid #5F4B8BFF',marginTop:'1rem'},children:/*#__PURE__*/_jsxs(List,{style:{padding:0,width:'100%'},children:[sortedThreads.map(function(item){return/*#__PURE__*/_jsx(ThreadButton,{id:item.id,setThreadOpen:setThreadOpen,setThreadId:setThreadId,threadOpen:threadOpen,threadId:threadId,updateThreadButtonInfos:updateThreadButtonInfos});}),' ']})})]}),/*#__PURE__*/_jsx(Grid,{item:true,style:{width:'70%'},children:threadOpen?/*#__PURE__*/_jsx(Thread,{messages:messages,id:threadId,websocket:websocket,messageAmount:messageAmount,setMessageAmount:setMessageAmount,setThreadOpen:setThreadOpen,setThreadId:setThreadId}):/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",justify:\"center\",direction:\"column\",children:[/*#__PURE__*/_jsxs(Typography,{component:\"h1\",variant:\"h2\",children:[\"Welcome \",username,\"!\"]}),/*#__PURE__*/_jsx(Typography,{component:\"div\",variant:\"body1\",children:\"This is Chat App made by Tommi.\"})]})})]})}):/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",style:{height:heightCorrected},className:classes.desktopContainer,children:[/*#__PURE__*/_jsxs(Grid,{item:true,style:{width:'30%',borderRight:'1px solid #5F4B8BFF',maxHeight:heightCorrected,overflowY:'auto'},children:[/*#__PURE__*/_jsx(Button,{onClick:setCreateNewChatThreadOpen,color:\"primary\",variant:\"contained\",className:classes.newThreadButton,children:\"Create a new chat thread\"}),/*#__PURE__*/_jsx(Grid,{container:true,style:{borderTop:'1px solid #5F4B8BFF',marginTop:'1rem'},children:/*#__PURE__*/_jsxs(List,{style:{padding:0,width:'100%'},children:[sortedThreads.map(function(item){return/*#__PURE__*/_jsx(ThreadButton,{id:item.id,setThreadOpen:setThreadOpen,setThreadId:setThreadId,threadOpen:threadOpen,threadId:threadId,updateThreadButtonInfos:updateThreadButtonInfos});}),' ']})})]}),/*#__PURE__*/_jsx(Grid,{item:true,style:{width:'70%'},children:threadOpen?/*#__PURE__*/_jsx(Thread,{messages:messages,id:threadId,websocket:websocket,messageAmount:messageAmount,setMessageAmount:setMessageAmount,setThreadOpen:setThreadOpen,setThreadId:setThreadId}):/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",justify:\"center\",direction:\"column\",children:[/*#__PURE__*/_jsxs(Typography,{component:\"h1\",variant:\"h2\",children:[\"Welcome \",username,\"!\"]}),/*#__PURE__*/_jsx(Typography,{component:\"div\",variant:\"body1\",children:\"This is Chat App made by Tommi.\"})]})})]})}),/*#__PURE__*/_jsx(Modal,{modalOpen:modalOpen,setModalOpen:setModalOpen,websocket:websocket,setThreadOpen:setThreadOpen,setThreadId:setThreadId})]});};export default Home;","map":{"version":3,"sources":["/Users/tommivainio/Projektit/chatApp/my-app/src/views/home.tsx"],"names":["Button","Grid","List","Typography","useContext","useEffect","useState","Thread","ThreadButton","Modal","MediaContext","WebsocketContext","useUsers","useChats","useWindowDimensions","useMediaQuery","makeStyles","Card","useStyles","theme","newThreadButton","backgroundColor","marginTop","breakpoints","down","fontSize","padding","desktopContainer","up","width","mobileWelcomeCard","maxWidth","margin","mobileSubtitle","Home","history","classes","user","setUser","username","setusername","websocket","setWebsocket","getIsLoggedIn","getUsernameById","getThreadIds","getMessages","height","heightCorrected","setHeightCorrected","threads","setThreads","sortedThreads","setSortedThreads","threadOpen","setThreadOpen","threadId","setThreadId","messages","setMessages","Date","now","updateState","setUpdateState","updateThreadButtons","setUpdateThreadButtons","updateThreadButtonInfos","setUpdateThreadButtonInfos","messageAmount","setMessageAmount","modalOpen","setModalOpen","type","contents","timestamp","user_id","thread_id","wsMessage","setWsMessage","isMobile","query","isDesktop","e","console","log","message","isLoggedIn","success","push","id","name","chatThreads","length","idArray","i","threadMessages","threadIdObject","sort","a","b","reversedArray","reverse","newMessageObject","undefined","readyState","socket","WebSocket","addEventListener","event","client","send","JSON","stringify","data","parse","setTimeout","setCreateNewChatThreadOpen","borderTop","map","item","borderRight","maxHeight","overflowY"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { Button, Grid, List, Typography } from '@material-ui/core';\nimport { useContext, useEffect, useState } from 'react';\nimport Thread from '../components/thread';\nimport ThreadButton from '../components/threadButton';\nimport Modal from '../components/modal';\nimport { MediaContext } from '../contexts/mediaContext';\nimport { WebsocketContext } from '../contexts/websocketContext';\nimport { useUsers, useChats } from '../hooks/apiHooks';\nimport useWindowDimensions from '../hooks/windowDimensionsHook';\nimport { useMediaQuery } from 'react-responsive';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card } from '@mui/material';\n\nconst useStyles = makeStyles((theme) => ({\n    newThreadButton: {\n        backgroundColor: '#5F4B8BFF',\n        marginTop: '1rem',\n        '&:hover': {\n            backgroundColor: '#7159a6',\n        },\n        [theme.breakpoints.down(1000)]: {\n            fontSize: '0.8rem',\n            padding: '6px 10px'\n        },\n        [theme.breakpoints.down(800)]: {\n            fontSize: '0.7rem',\n            padding: '6px 6px'\n        },\n        [theme.breakpoints.down(600)]: {\n            fontSize: '0.875rem',\n            padding: '6px 16px'\n        },\n    },\n    desktopContainer: {\n        [theme.breakpoints.up(1280)]: {\n            width: '70vw',\n        },\n    },\n    mobileWelcomeCard: {\n        maxWidth: '15rem',\n        margin: 'auto',\n        marginTop: '1rem'\n    },\n    mobileSubtitle: {\n        fontSize: '0.9rem'\n    }\n}));\n\ninterface propType {\n    history: {\n        push: Function,\n    }\n}\n\ninterface threadsArray {\n    thread_id: number\n}\n\ninterface sortedThreadsArray {\n    id: number,\n    timestamp: string,\n}\n\ninterface messagesArray {\n    id: number,\n    user_id: number,\n    contents: string,\n    timestamp: Date,\n}\n\nconst Home = ({ history }: propType) => {\n    const classes = useStyles();\n    const { user, setUser } = useContext(MediaContext);\n    const [username, setusername] = useState('');\n    const { websocket, setWebsocket } = useContext(WebsocketContext);\n    const { getIsLoggedIn, getUsernameById } = useUsers();\n    const { getThreadIds, getMessages } = useChats();\n    const { height } = useWindowDimensions();\n    const [heightCorrected, setHeightCorrected] = useState(height - 64);\n    const [threads, setThreads] = useState<threadsArray[]>([]);\n    const [sortedThreads, setSortedThreads] = useState<sortedThreadsArray[]>([]);\n    const [threadOpen, setThreadOpen] = useState(false)\n    const [threadId, setThreadId] = useState(0)\n    const [messages, setMessages] = useState<messagesArray[]>([]);\n    const [updateState, setUpdateState] = useState(Date.now());\n    const [updateThreadButtons, setUpdateThreadButtons] = useState(Date.now());\n    const [updateThreadButtonInfos, setUpdateThreadButtonInfos] = useState(Date.now());\n    const [messageAmount, setMessageAmount] = useState(50);\n    const [modalOpen, setModalOpen] = useState(false);\n    const [wsMessage, setWsMessage] = useState({\n        type: '',\n        contents: '',\n        timestamp: new Date(),\n        user_id: 0,\n        thread_id: 0\n    });\n\n    const isMobile = useMediaQuery({\n        query: '(max-width: 600px)'\n    });\n\n    const isDesktop = useMediaQuery({\n        query: '(min-width: 1280px)'\n    });\n\n    useEffect(() => {\n        try {\n            if (isMobile) {\n                setHeightCorrected(height - 56);\n            } else {\n                setHeightCorrected(height - 64);\n            }\n        } catch (e) {\n            console.log(e.message);\n        }\n    }, [isMobile]);\n\n    useEffect(() => {\n        (async () => {\n            try {\n                console.log('USER: ', user)\n                const isLoggedIn = await getIsLoggedIn();\n                if (!isLoggedIn.success) {\n                    history.push('/login');\n                }\n                setUser(isLoggedIn.id)\n                const name = await getUsernameById(isLoggedIn.id);\n                setusername(name.username);\n                console.log('Logged user: ', user, isLoggedIn.id);\n                if (user !== 0) {\n                    const chatThreads = await getThreadIds(isLoggedIn.id)\n                    if (chatThreads.length > 0) {\n                        setThreads(chatThreads);\n                    } else {\n                        setThreads([{ thread_id: 0 }]);\n                    }\n                }\n            } catch (e) {\n                console.log(e.message);\n            }\n        })();\n    }, [user, updateThreadButtons]);\n\n    useEffect(() => {\n        (async () => {\n            try {\n                if (threads.length > 0) {\n                    if (threads[0].thread_id !== 0) {\n                        let idArray = [];\n                        for (let i = 0; i < threads.length; i++) {\n                            const threadMessages = await getMessages(threads[i].thread_id);\n                            const threadIdObject = {\n                                id: threads[i].thread_id,\n                                timestamp: threadMessages.length > 0 ? threadMessages[0].timestamp : '1999-02-06T05:47:00',\n                            };\n                            idArray.push(threadIdObject);\n                        }\n                        idArray.sort((a, b) => (a.timestamp < b.timestamp) ? 1 : ((b.timestamp < a.timestamp) ? -1 : 0));\n                        console.log('IDARRAY', idArray);\n                        setSortedThreads(idArray);\n                    }\n                }\n            } catch (e) {\n                console.log(e.message);\n            }\n        })();\n    }, [threads, updateThreadButtonInfos]);\n\n    useEffect(() => {\n        (async () => {\n            try {\n                if (threadId !== 0) {\n                    const threadMessages = await getMessages(threadId);\n                    const reversedArray = threadMessages.reverse();\n                    setMessages(reversedArray);\n                }\n            } catch (e) {\n                console.log(e.message);\n            }\n        })();\n    }, [threadId, updateState]);\n\n    useEffect(() => {\n        try {\n            if (wsMessage.type !== '' && wsMessage.thread_id === threadId) {\n                const newMessageObject = {\n                    id: Date.now(),\n                    user_id: wsMessage.user_id,\n                    contents: wsMessage.contents,\n                    timestamp: wsMessage.timestamp,\n                }\n                setMessages(messages => [...messages, newMessageObject]);\n                setMessageAmount(messageAmount + 1);\n            }\n        } catch (e) {\n            console.log(e.message);\n        }\n    }, [wsMessage]);\n\n    useEffect(() => {\n        try {\n            if (threads.length !== 0) {\n                if (websocket === undefined || websocket.readyState === 2 || websocket.readyState === 3) {\n                    console.log('READYSTATE ', websocket?.readyState)\n                    const socket = new WebSocket('ws://localhost:3001');\n\n                    socket.addEventListener('open', function (event) {\n                        try {\n                            console.log('Server is opened.');\n                            const client = {\n                                type: 'client',\n                                user_id: user,\n                                threads: threads,\n                            }\n                            socket.send(JSON.stringify(client));\n                        } catch (e) {\n                            console.log(e.message);\n                        }\n                    });\n\n                    socket.addEventListener('message', function (event) {\n                        try {\n                            if (event.data !== 'ping') {\n                                console.log('Message from server ', JSON.parse(event.data).thread_id);\n                                const message = JSON.parse(event.data);\n                                if (message.type === 'message') {\n                                    setWsMessage(message);\n                                    setUpdateThreadButtonInfos(Date.now());\n                                } else if (message.type === 'newThread') {\n                                    setUpdateThreadButtons(Date.now());\n                                }\n                            } else {\n                                setTimeout(() => socket.send('pong'), 1000);\n                            }\n                        } catch (e) {\n                            console.log(e.message);\n                        }\n                    });\n\n                    socket.addEventListener('close', function (event) {\n                        try {\n                            console.log('Websocket connection closed.');\n                            setUpdateState(Date.now());\n                        } catch (e) {\n                            console.log(e.message);\n                        }\n                    });\n\n                    setWebsocket(socket);\n                    console.log('NEW SOCKET');\n                }\n            }\n        } catch (e) {\n            console.log(e.message);\n        };\n    }, [updateState, threads]);\n\n    const setCreateNewChatThreadOpen = () => {\n        setModalOpen(true);\n    }\n\n\n    return (\n        <>\n            {isMobile ? (\n                <Grid container direction=\"column\" style={{ height: heightCorrected, }} >\n                    {threadOpen ? (\n                        <Grid item >\n                            <Thread\n                                messages={messages}\n                                id={threadId}\n                                websocket={websocket}\n                                messageAmount={messageAmount}\n                                setMessageAmount={setMessageAmount}\n                                setThreadOpen={setThreadOpen}\n                                setThreadId={setThreadId}\n                            />\n                        </Grid>\n                    ) : (\n                        <Grid item>\n                            <Card className={classes.mobileWelcomeCard}>\n                                <Grid container alignItems=\"center\" justify=\"center\" direction=\"column\" >\n                                    <Typography component=\"h6\" variant=\"h6\">Welcome {username}!</Typography>\n                                    <Typography className={classes.mobileSubtitle} component=\"div\" variant=\"body1\">This is Chat App made by Tommi.</Typography>\n                                </Grid>\n                            </Card>\n                            <Button\n                                onClick={setCreateNewChatThreadOpen}\n                                color=\"primary\"\n                                variant=\"contained\"\n                                className={classes.newThreadButton}\n                            >\n                                Create a new chat thread\n                            </Button>\n                            <Grid container style={{ borderTop: '1px solid #5F4B8BFF', marginTop: '1rem' }} >\n                                <List style={{ padding: 0, width: '100vw' }}>\n                                    {sortedThreads.map((item) => (\n                                        <ThreadButton\n                                            id={item.id}\n                                            setThreadOpen={setThreadOpen}\n                                            setThreadId={setThreadId}\n                                            threadOpen={threadOpen}\n                                            threadId={threadId}\n                                            updateThreadButtonInfos={updateThreadButtonInfos}\n                                        />\n                                    ))}{' '}\n                                </List>\n                            </Grid>\n                        </Grid>\n                    )}\n                </Grid>\n            ) : (\n                <>\n                    {isDesktop ? (\n                        <Card style={{ width: '70vw', margin: 'auto' }}>\n                            <Grid container direction=\"row\" style={{ height: heightCorrected, }} className={classes.desktopContainer} >\n                                <Grid item style={{ width: '30%', borderRight: '1px solid #5F4B8BFF', maxHeight: heightCorrected, overflowY: 'auto' }}>\n                                    <Button\n                                        onClick={setCreateNewChatThreadOpen}\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        className={classes.newThreadButton}\n                                    >\n                                        Create a new chat thread\n                                    </Button>\n                                    <Grid container style={{ borderTop: '1px solid #5F4B8BFF', marginTop: '1rem' }} >\n                                        <List style={{ padding: 0, width: '100%' }}>\n                                            {sortedThreads.map((item) => (\n                                                <ThreadButton\n                                                    id={item.id}\n                                                    setThreadOpen={setThreadOpen}\n                                                    setThreadId={setThreadId}\n                                                    threadOpen={threadOpen}\n                                                    threadId={threadId}\n                                                    updateThreadButtonInfos={updateThreadButtonInfos}\n                                                />\n                                            ))}{' '}\n                                        </List>\n                                    </Grid>\n                                </Grid>\n                                <Grid item style={{ width: '70%' }}>\n                                    {threadOpen ? (\n                                        <Thread\n                                            messages={messages}\n                                            id={threadId}\n                                            websocket={websocket}\n                                            messageAmount={messageAmount}\n                                            setMessageAmount={setMessageAmount}\n                                            setThreadOpen={setThreadOpen}\n                                            setThreadId={setThreadId}\n                                        />\n                                    ) : (\n                                        <Grid container alignItems=\"center\" justify=\"center\" direction=\"column\" >\n                                            <Typography component=\"h1\" variant=\"h2\">Welcome {username}!</Typography>\n                                            <Typography component=\"div\" variant=\"body1\">This is Chat App made by Tommi.</Typography>\n                                        </Grid>\n                                    )}\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    ) : (\n                        <Grid container direction=\"row\" style={{ height: heightCorrected, }} className={classes.desktopContainer} >\n                            <Grid item style={{ width: '30%', borderRight: '1px solid #5F4B8BFF', maxHeight: heightCorrected, overflowY: 'auto' }}>\n                                <Button\n                                    onClick={setCreateNewChatThreadOpen}\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    className={classes.newThreadButton}\n                                >\n                                    Create a new chat thread\n                                </Button>\n                                <Grid container style={{ borderTop: '1px solid #5F4B8BFF', marginTop: '1rem' }} >\n                                    <List style={{ padding: 0, width: '100%' }}>\n                                        {sortedThreads.map((item) => (\n                                            <ThreadButton\n                                                id={item.id}\n                                                setThreadOpen={setThreadOpen}\n                                                setThreadId={setThreadId}\n                                                threadOpen={threadOpen}\n                                                threadId={threadId}\n                                                updateThreadButtonInfos={updateThreadButtonInfos}\n                                            />\n                                        ))}{' '}\n                                    </List>\n                                </Grid>\n                            </Grid>\n                            <Grid item style={{ width: '70%' }}>\n                                {threadOpen ? (\n                                    <Thread\n                                        messages={messages}\n                                        id={threadId}\n                                        websocket={websocket}\n                                        messageAmount={messageAmount}\n                                        setMessageAmount={setMessageAmount}\n                                        setThreadOpen={setThreadOpen}\n                                        setThreadId={setThreadId}\n                                    />\n                                ) : (\n                                    <Grid container alignItems=\"center\" justify=\"center\" direction=\"column\" >\n                                        <Typography component=\"h1\" variant=\"h2\">Welcome {username}!</Typography>\n                                        <Typography component=\"div\" variant=\"body1\">This is Chat App made by Tommi.</Typography>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </Grid>\n                    )}\n                </>\n            )\n            }\n            <Modal\n                modalOpen={modalOpen}\n                setModalOpen={setModalOpen}\n                websocket={websocket}\n                setThreadOpen={setThreadOpen}\n                setThreadId={setThreadId}\n            />\n        </>\n    );\n\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}