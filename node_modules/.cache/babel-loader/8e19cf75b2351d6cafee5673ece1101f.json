{"ast":null,"code":"var _jsxFileName = \"/Users/tommivainio/Projektit/chatApp/my-app/src/components/nav.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { Link as RouterLink } from 'react-router-dom';\nimport { AppBar, makeStyles, Toolbar, Link, Button } from '@material-ui/core';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { useUsers } from '../hooks/apiHooks';\nimport { useContext, useEffect } from 'react';\nimport { useState } from 'react';\nimport { MediaContext } from '../contexts/mediaContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: '#5F4B8BFF',\n    width: '100vw'\n  },\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1,\n    paddingRight: '24px'\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  itemPack: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  logo: {\n    position: 'absolute',\n    display: 'flex',\n    alignItems: 'center',\n    left: '130px',\n    transform: 'translate(-50%)'\n  }\n}));\n\nconst Nav = () => {\n  _s();\n\n  const classes = useStyles();\n  const [logged, setLogged] = useState(false);\n  const {\n    user,\n    setUser\n  } = useContext(MediaContext);\n  const {\n    getIsLoggedIn\n  } = useUsers();\n  useEffect(() => {\n    (async () => {\n      try {\n        console.log('NAV');\n        const isLoggedIn = await getIsLoggedIn();\n\n        if (isLoggedIn.success) {\n          setLogged(true);\n          setUser(isLoggedIn.id);\n        } else {\n          setLogged(false);\n        }\n      } catch (e) {\n        console.log(e.message);\n      }\n    })();\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      className: classes.appBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          component: RouterLink,\n          to: \"/\",\n          className: classes.logo,\n          color: \"inherit\",\n          style: {\n            textDecoration: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"ChatApp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.itemPack,\n          children: logged ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              component: RouterLink,\n              to: \"/logout\",\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            startIcon: /*#__PURE__*/_jsxDEV(ExitToAppIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 44\n            }, this),\n            component: RouterLink,\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Nav, \"G+B6/hgXVyNYEeCPG8lKm/cuN1w=\", false, function () {\n  return [useStyles, useUsers];\n});\n\n_c = Nav;\nexport default Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["/Users/tommivainio/Projektit/chatApp/my-app/src/components/nav.tsx"],"names":["Link","RouterLink","AppBar","makeStyles","Toolbar","Button","ExitToAppIcon","useUsers","useContext","useEffect","useState","MediaContext","useStyles","theme","appBar","zIndex","drawer","backgroundColor","width","root","flexGrow","menuButton","marginRight","spacing","title","paddingRight","toolbar","display","justifyContent","itemPack","alignItems","logo","position","left","transform","Nav","classes","logged","setLogged","user","setUser","getIsLoggedIn","console","log","isLoggedIn","success","id","e","message","textDecoration"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport {\r\n    AppBar,\r\n    makeStyles,\r\n    Toolbar,\r\n    Link,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useUsers } from '../hooks/apiHooks';\r\nimport { useContext, useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { MediaContext } from '../contexts/mediaContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        backgroundColor: '#5F4B8BFF',\r\n        width: '100vw',\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        paddingRight: '24px',\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    itemPack: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    logo: {\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        left: '130px',\r\n        transform: 'translate(-50%)',\r\n    },\r\n}));\r\n\r\nconst Nav = () => {\r\n    const classes = useStyles();\r\n    const [logged, setLogged] = useState(false);\r\n    const { user, setUser } = useContext(MediaContext);\r\n    const { getIsLoggedIn } = useUsers();\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                console.log('NAV');\r\n                const isLoggedIn = await getIsLoggedIn()\r\n                if (isLoggedIn.success) {\r\n                    setLogged(true);\r\n                    setUser(isLoggedIn.id);\r\n                } else {\r\n                    setLogged(false);\r\n                }\r\n            } catch (e) {\r\n                console.log(e.message);\r\n            }\r\n        })();\r\n    }, [user]);\r\n\r\n    return (\r\n        <>\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <Link\r\n                        component={RouterLink}\r\n                        to=\"/\"\r\n                        className={classes.logo}\r\n                        color=\"inherit\"\r\n                        style={{ textDecoration: 'none' }}\r\n                    >\r\n                        <h2>ChatApp</h2>\r\n                    </Link>\r\n                    <div className={classes.itemPack}>\r\n                        {logged ? (\r\n                            <div>\r\n                                <Button\r\n                                    color=\"inherit\"\r\n                                    component={RouterLink}\r\n                                    to=\"/logout\"\r\n                                >\r\n                                    Logout\r\n                                </Button>\r\n                            </div>\r\n                        ) : (\r\n                            <Button\r\n                                color=\"inherit\"\r\n                                startIcon={<ExitToAppIcon />}\r\n                                component={RouterLink}\r\n                                to=\"/login\"\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        )}\r\n\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Nav;"]},"metadata":{},"sourceType":"module"}